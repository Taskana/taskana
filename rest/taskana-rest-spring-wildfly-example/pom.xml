<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>pro.taskana</groupId>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.2.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<version>1.1.1-SNAPSHOT</version>
	<artifactId>taskana-rest-spring-wildfly-example</artifactId>
	<packaging>war</packaging>
	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<version.wildfly.swarm>2017.4.0</version.wildfly.swarm>
		<version.resteasy>3.1.2.Final</version.resteasy>
		<skipIntegrationTests>true</skipIntegrationTests>
		<!-- Default H2 DB configuration -->
		<connection-url>jdbc:h2:mem:taskana;IGNORECASE=TRUE;LOCK_MODE=0</connection-url>
		<driver-class>org.h2.Driver</driver-class>
		<driver-name>h2</driver-name>
		<user-name>sa</user-name>
		<password>sa</password>
	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.wildfly.swarm</groupId>
				<artifactId>bom</artifactId>
				<version>${version.wildfly.swarm}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.jboss.arquillian</groupId>
				<artifactId>arquillian-bom</artifactId>
				<version>1.1.10.Final</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<repositories>
		<repository>
			<id>jboss</id>
			<url>http://repository.jboss.org/nexus/content/groups/public-jboss/</url>
		</repository>
	</repositories>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>2.0.2.RELEASE</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>pro.taskana</groupId>
			<artifactId>taskana-rest-spring</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>pro.taskana</groupId>
			<artifactId>taskana-rest-spring-base</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.plugin</groupId>
			<artifactId>spring-plugin-core</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.postgresql/postgresql -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>42.2.5</version>
		</dependency>

		<!-- TEST -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.wildfly.swarm</groupId>
			<artifactId>jaxrs</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.wildfly.swarm</groupId>
			<artifactId>cdi</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-client</artifactId>
			<version>${version.resteasy}</version>
			<scope>test</scope>
		</dependency>
		<!-- Brought in via WildFly Swarm `bom` -->
		<dependency>
			<groupId>org.wildfly.swarm</groupId>
			<artifactId>arquillian</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- Brought in via Arquillian BOM, see dependencyManagement section above -->
		<dependency>
			<groupId>org.jboss.arquillian.junit</groupId>
			<artifactId>arquillian-junit-container</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.shrinkwrap.resolver</groupId>
			<artifactId>shrinkwrap-resolver-impl-maven</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>5.1.5.RELEASE</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<profiles>
		<profile>
			<id>postgres</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<!-- Reading properties from file and use then as data source properties
				 is a pending improvement of Jboss development team check out -> https://issues.jboss.org/browse/WFMP-70
				 That's why we are including postgres connection properties directly in this pom file.
			-->
			<properties>
				<driver-class>org.postgresql.Driver</driver-class>
				<connection-url>jdbc:postgresql://localhost:50102/postgres</connection-url>
				<driver-name>postgresqldriver</driver-name>
				<user-name>postgres</user-name>
				<password>postgres</password>
				<activatedProperties>postgres</activatedProperties>
				<skipIntegrationTests>false</skipIntegrationTests>
			</properties>
		</profile>
	</profiles>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.wildfly.plugins</groupId>
				<artifactId>wildfly-maven-plugin</artifactId>
				<version>2.0.0.Final</version>
				<configuration>
					<version>11.0.0.Final</version>
				</configuration>
				<executions>
					<execution>
						<id>run-wildfly</id>
						<phase>install</phase>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
					<!-- Deploy the JDBC library in JBoss -->
					<execution>
						<id>deploy-driver</id>
						<phase>install</phase>
						<configuration>
							<groupId>org.postgresql</groupId>
							<artifactId>postgresql</artifactId>
							<name>postgresqldriver</name>
						</configuration>
						<goals>
							<goal>deploy-artifact</goal>
						</goals>
					</execution>
					<!-- Add a data source -->
					<execution>
						<id>add-datasource</id>
						<phase>install</phase>
						<configuration>
							<address>subsystem=datasources,data-source=java:/TaskanaDS</address>
							<resources>
								<resource>
									<properties>
										<jndi-name>java:/TaskanaDS</jndi-name>
										<enabled>true</enabled>
										<connection-url>${connection-url}</connection-url>
										<driver-class>${driver-class}</driver-class>
										<driver-name>${driver-name}</driver-name>
										<user-name>${user-name}</user-name>
										<password>${password}</password>
									</properties>
								</resource>
							</resources>
						</configuration>
						<goals>
							<goal>add-resource</goal>
						</goals>
					</execution>
					<!-- Deploy the application on install -->
					<execution>
						<id>wildfly-deploy</id>
						<phase>install</phase>
						<goals>
							<goal>deploy</goal>
						</goals>
					</execution>
					<!-- undeploy the application on install -->
					<execution>
						<id>wildfly-undeploy</id>
						<phase>install</phase>
						<goals>
							<goal>undeploy</goal>
						</goals>
					</execution>
					<!-- shutdown the application on install -->
					<execution>
						<id>wildfly-shutdown</id>
						<phase>install</phase>
						<goals>
							<goal>shutdown</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.19.1</version>
				<executions>
					<execution>
						<id>default-test</id>
						<configuration>
							<skip>true</skip>
						</configuration>
					</execution>
					<execution>
						<id>integration-tests</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<skip>${skipIntegrationTests}</skip>
							<includes>
								<include>**/*Test.java</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-documentation-to-static-folder</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>
								${project.build.outputDirectory}/static/docs/rest
							</outputDirectory>
							<resources>
								<resource>
									<directory>
										../taskana-rest-spring-test/target/generated-docs
									</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>