<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xmlns="http://maven.apache.org/POM/4.0.0"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>taskana-rest-spring-test</artifactId>

	<parent>
		<artifactId>taskana-rest-parent</artifactId>
		<groupId>pro.taskana</groupId>
		<version>1.1.2-SNAPSHOT</version>
		<relativePath>..</relativePath>
	</parent>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${version.spring-boot}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.plugin</groupId>
			<artifactId>spring-plugin-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.4.197</version>
		</dependency>
		<dependency>
			<groupId>pro.taskana</groupId>
			<artifactId>taskana-rest-spring-base</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>pro.taskana.simplehistory</groupId>
			<artifactId>taskana-simplehistory-provider</artifactId>
			<version>0.0.9</version>
		</dependency>

		<!-- Tests -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.restdocs</groupId>
			<artifactId>spring-restdocs-mockmvc</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${version.spring-boot}</version>
			</plugin>
			<!-- Required for generation of REST documentation -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M3</version>
				<configuration>
					<!-- Required for skip plugin tests by default -->
					<excludes>
						<exclude>**/*Plugin*Test.java</exclude>
					</excludes>
					<includes>
						<include>**/*Test.java</include>
						<include>**/*Documentation.java</include>
					</includes>
					<!-- Travis build workaround to prevent error that VM is closed due to an error. -->
					<argLine>-Xms1024m -Xmx2048m</argLine>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.asciidoctor</groupId>
				<artifactId>asciidoctor-maven-plugin</artifactId>
				<version>1.5.3</version>
				<executions>
					<execution>
						<id>generate-docs</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>process-asciidoc</goal>
						</goals>
						<configuration>
							<backend>html</backend>
							<doctype>book</doctype>
							<attributes>
								<snippets>target/generated-snippets</snippets>
								<docinfo>shared</docinfo>
							</attributes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>copy-rest-docs</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>
								${project.build.directory}/generated-docs
							</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/src/js</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-taskana-core-docs</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>
								${project.build.outputDirectory}/static/docs/java/taskana-core
							</outputDirectory>
							<resources>
								<resource>
									<directory>
										../../lib/taskana-core/target/apidocs
									</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-taskana-cdi-docs</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>
								${project.build.outputDirectory}/static/docs/java/taskana-cdi
							</outputDirectory>
							<resources>
								<resource>
									<directory>
										../../lib/taskana-cdi/target/apidocs
									</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-taskana-spring-docs</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>
								${project.build.outputDirectory}/static/docs/java/taskana-spring
							</outputDirectory>
							<resources>
								<resource>
									<directory>
										../../lib/taskana-spring/target/apidocs
									</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-documentation-to-taskana-rest-spring-example</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>
								../taskana-rest-spring-example/target/generated-docs
							</outputDirectory>
							<resources>
								<resource>
									<directory>
										${project.build.directory}/generated-docs
									</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-documentation-to-taskana-rest-spring-wildfly-example</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>
								../taskana-rest-spring-wildfly-example/target/generated-docs
							</outputDirectory>
							<resources>
								<resource>
									<directory>
										${project.build.directory}/generated-docs
									</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
