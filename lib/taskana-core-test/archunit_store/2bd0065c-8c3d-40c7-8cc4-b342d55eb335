Cycle detected: Slice classification.api -> \
                Slice classification.api.exceptions -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationInUseException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationInUseException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.getClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.getClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> in (ClassificationService.java:0)\
  2. Dependencies of Slice classification.api.exceptions\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> has parameter of type <pro.taskana.classification.api.models.Classification> in (ClassificationAlreadyExistException.java:0)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> has parameter of type <pro.taskana.classification.api.models.Classification> in (ClassificationInUseException.java:0)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationAlreadyExistException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationAlreadyExistException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getId()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:33)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:35)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:37)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:38)\
  3. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice classification.api.exceptions -> \
                Slice common.api.exceptions -> \
                Slice common.api -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationInUseException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationInUseException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.getClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.getClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> in (ClassificationService.java:0)\
  2. Dependencies of Slice classification.api.exceptions\
    - Class <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (ClassificationAlreadyExistException.java:0)\
    - Class <pro.taskana.classification.api.exceptions.ClassificationInUseException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (ClassificationInUseException.java:0)\
    - Class <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> extends class <pro.taskana.common.api.exceptions.NotFoundException> in (ClassificationNotFoundException.java:0)\
    - Class <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (MalformedServiceLevelException.java:0)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.NotFoundException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (ClassificationNotFoundException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (ClassificationNotFoundException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (ClassificationAlreadyExistException.java:26)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (ClassificationAlreadyExistException.java:26)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (ClassificationInUseException.java:29)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.NotFoundException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (ClassificationNotFoundException.java:30)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (ClassificationNotFoundException.java:30)\
    - Constructor <pro.taskana.classification.api.exceptions.MalformedServiceLevelException.<init>(java.lang.String, java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (MalformedServiceLevelException.java:31)\
    - Constructor <pro.taskana.classification.api.exceptions.MalformedServiceLevelException.<init>(java.lang.String, java.lang.String, java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (MalformedServiceLevelException.java:31)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode, java.lang.Throwable)> in (ClassificationInUseException.java:36)\
  3. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
  4. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getClassificationService()> has return type <pro.taskana.classification.api.ClassificationService> in (TaskanaEngine.java:0)
Cycle detected: Slice classification.api -> \
                Slice classification.api.exceptions -> \
                Slice common.api.exceptions -> \
                Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice monitor.api.reports.header -> \
                Slice monitor.api.reports.item -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationInUseException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationInUseException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.getClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.getClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> in (ClassificationService.java:0)\
  2. Dependencies of Slice classification.api.exceptions\
    - Class <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (ClassificationAlreadyExistException.java:0)\
    - Class <pro.taskana.classification.api.exceptions.ClassificationInUseException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (ClassificationInUseException.java:0)\
    - Class <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> extends class <pro.taskana.common.api.exceptions.NotFoundException> in (ClassificationNotFoundException.java:0)\
    - Class <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (MalformedServiceLevelException.java:0)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.NotFoundException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (ClassificationNotFoundException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (ClassificationNotFoundException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (ClassificationAlreadyExistException.java:26)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (ClassificationAlreadyExistException.java:26)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (ClassificationInUseException.java:29)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.NotFoundException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (ClassificationNotFoundException.java:30)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (ClassificationNotFoundException.java:30)\
    - Constructor <pro.taskana.classification.api.exceptions.MalformedServiceLevelException.<init>(java.lang.String, java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (MalformedServiceLevelException.java:31)\
    - Constructor <pro.taskana.classification.api.exceptions.MalformedServiceLevelException.<init>(java.lang.String, java.lang.String, java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (MalformedServiceLevelException.java:31)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode, java.lang.Throwable)> in (ClassificationInUseException.java:36)\
  3. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
  4. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  5. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  6. Dependencies of Slice monitor.api.reports\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report$Builder> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.ColumnHeader> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.ColumnHeader> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimeIntervalReportBuilder.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TimestampReport$Builder, pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.WorkbasketReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (WorkbasketReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (WorkbasketReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.ClassificationCategoryReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    (8 further dependencies have been omitted...)\
  7. Dependencies of Slice monitor.api.reports.header\
    - Class <pro.taskana.monitor.api.reports.header.ColumnHeader> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (ColumnHeader.java:0)\
    - Class <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> has generic interface <pro.taskana.monitor.api.reports.header.ColumnHeader<pro.taskana.monitor.api.reports.item.PriorityQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.PriorityQueryItem> in (PriorityColumnHeader.java:0)\
    - Class <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> has generic interface <pro.taskana.monitor.api.reports.header.ColumnHeader<pro.taskana.monitor.api.reports.item.TaskQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TaskQueryItem> in (TaskStatusColumnHeader.java:0)\
    - Class <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> has generic interface <pro.taskana.monitor.api.reports.header.ColumnHeader<pro.taskana.monitor.api.reports.item.AgeQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.AgeQueryItem> in (TimeIntervalColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.ColumnHeader.fits(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (ColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.PriorityColumnHeader.fits(pro.taskana.monitor.api.reports.item.PriorityQueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.PriorityQueryItem> in (PriorityColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.PriorityColumnHeader.fits(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (PriorityColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.fits(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (TaskStatusColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.fits(pro.taskana.monitor.api.reports.item.TaskQueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.TaskQueryItem> in (TaskStatusColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader.fits(pro.taskana.monitor.api.reports.item.AgeQueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.AgeQueryItem> in (TimeIntervalColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader.fits(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (TimeIntervalColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.fits(pro.taskana.monitor.api.reports.item.TaskQueryItem)> calls method <pro.taskana.monitor.api.reports.item.TaskQueryItem.getState()> in (TaskStatusColumnHeader.java:22)\
    - Method <pro.taskana.monitor.api.reports.header.PriorityColumnHeader.fits(pro.taskana.monitor.api.reports.item.PriorityQueryItem)> calls method <pro.taskana.monitor.api.reports.item.PriorityQueryItem.getPriority()> in (PriorityColumnHeader.java:28)\
    - Method <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader.fits(pro.taskana.monitor.api.reports.item.AgeQueryItem)> calls method <pro.taskana.monitor.api.reports.item.AgeQueryItem.getAgeInDays()> in (TimeIntervalColumnHeader.java:62)\
  8. Dependencies of Slice monitor.api.reports.item\
    - Field <pro.taskana.monitor.api.reports.item.TaskQueryItem.state> has type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.getState()> has return type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.setState(pro.taskana.task.api.TaskState)> has parameter of type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
  9. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  10. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.Attachment.setClassificationSummary(pro.taskana.classification.api.models.ClassificationSummary)> has parameter of type <pro.taskana.classification.api.models.ClassificationSummary> in (Attachment.java:0)\
    - Method <pro.taskana.task.api.models.AttachmentSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (AttachmentSummary.java:0)\
    - Method <pro.taskana.task.api.models.TaskSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (TaskSummary.java:0)\
  11. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice classification.api.exceptions -> \
                Slice common.api.exceptions -> \
                Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice monitor.api.reports.header -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationInUseException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationInUseException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.getClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.getClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> in (ClassificationService.java:0)\
  2. Dependencies of Slice classification.api.exceptions\
    - Class <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (ClassificationAlreadyExistException.java:0)\
    - Class <pro.taskana.classification.api.exceptions.ClassificationInUseException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (ClassificationInUseException.java:0)\
    - Class <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> extends class <pro.taskana.common.api.exceptions.NotFoundException> in (ClassificationNotFoundException.java:0)\
    - Class <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (MalformedServiceLevelException.java:0)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.NotFoundException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (ClassificationNotFoundException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (ClassificationNotFoundException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (ClassificationAlreadyExistException.java:26)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (ClassificationAlreadyExistException.java:26)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (ClassificationInUseException.java:29)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.NotFoundException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (ClassificationNotFoundException.java:30)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (ClassificationNotFoundException.java:30)\
    - Constructor <pro.taskana.classification.api.exceptions.MalformedServiceLevelException.<init>(java.lang.String, java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (MalformedServiceLevelException.java:31)\
    - Constructor <pro.taskana.classification.api.exceptions.MalformedServiceLevelException.<init>(java.lang.String, java.lang.String, java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (MalformedServiceLevelException.java:31)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode, java.lang.Throwable)> in (ClassificationInUseException.java:36)\
  3. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
  4. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  5. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  6. Dependencies of Slice monitor.api.reports\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report$Builder> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.ColumnHeader> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.ColumnHeader> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimeIntervalReportBuilder.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TimestampReport$Builder, pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.WorkbasketReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (WorkbasketReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (WorkbasketReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.ClassificationCategoryReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    (8 further dependencies have been omitted...)\
  7. Dependencies of Slice monitor.api.reports.header\
    - Constructor <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.<init>(pro.taskana.task.api.TaskState)> has parameter of type <pro.taskana.task.api.TaskState> in (TaskStatusColumnHeader.java:0)\
    - Field <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.state> has type <pro.taskana.task.api.TaskState> in (TaskStatusColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.getDisplayName()> calls method <pro.taskana.task.api.TaskState.name()> in (TaskStatusColumnHeader.java:17)\
  8. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  9. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.Attachment.setClassificationSummary(pro.taskana.classification.api.models.ClassificationSummary)> has parameter of type <pro.taskana.classification.api.models.ClassificationSummary> in (Attachment.java:0)\
    - Method <pro.taskana.task.api.models.AttachmentSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (AttachmentSummary.java:0)\
    - Method <pro.taskana.task.api.models.TaskSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (TaskSummary.java:0)\
  10. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice classification.api.exceptions -> \
                Slice common.api.exceptions -> \
                Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice monitor.api.reports.item -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationInUseException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationInUseException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.getClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.getClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> in (ClassificationService.java:0)\
  2. Dependencies of Slice classification.api.exceptions\
    - Class <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (ClassificationAlreadyExistException.java:0)\
    - Class <pro.taskana.classification.api.exceptions.ClassificationInUseException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (ClassificationInUseException.java:0)\
    - Class <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> extends class <pro.taskana.common.api.exceptions.NotFoundException> in (ClassificationNotFoundException.java:0)\
    - Class <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (MalformedServiceLevelException.java:0)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.NotFoundException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (ClassificationNotFoundException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (ClassificationNotFoundException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (ClassificationAlreadyExistException.java:26)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (ClassificationAlreadyExistException.java:26)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (ClassificationInUseException.java:29)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.NotFoundException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (ClassificationNotFoundException.java:30)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (ClassificationNotFoundException.java:30)\
    - Constructor <pro.taskana.classification.api.exceptions.MalformedServiceLevelException.<init>(java.lang.String, java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (MalformedServiceLevelException.java:31)\
    - Constructor <pro.taskana.classification.api.exceptions.MalformedServiceLevelException.<init>(java.lang.String, java.lang.String, java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (MalformedServiceLevelException.java:31)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode, java.lang.Throwable)> in (ClassificationInUseException.java:36)\
  3. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
  4. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  5. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  6. Dependencies of Slice monitor.api.reports\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report$Builder> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.TaskQueryItem> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.TaskQueryItem> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.AgeQueryItem> in (TimeIntervalReportBuilder.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TimestampReport$Builder, pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.PriorityQueryItem> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.PriorityQueryItem> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.WorkbasketReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (WorkbasketReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (WorkbasketReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem, pro.taskana.monitor.api.reports.item.QueryItemPreprocessor)> has generic parameter type <pro.taskana.monitor.api.reports.item.QueryItemPreprocessor<I>> with type argument depending on <pro.taskana.monitor.api.reports.item.QueryItemPreprocessor> in (Report.java:0)\
    (8 further dependencies have been omitted...)\
  7. Dependencies of Slice monitor.api.reports.item\
    - Field <pro.taskana.monitor.api.reports.item.TaskQueryItem.state> has type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.getState()> has return type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.setState(pro.taskana.task.api.TaskState)> has parameter of type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
  8. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  9. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.Attachment.setClassificationSummary(pro.taskana.classification.api.models.ClassificationSummary)> has parameter of type <pro.taskana.classification.api.models.ClassificationSummary> in (Attachment.java:0)\
    - Method <pro.taskana.task.api.models.AttachmentSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (AttachmentSummary.java:0)\
    - Method <pro.taskana.task.api.models.TaskSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (TaskSummary.java:0)\
  10. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice classification.api.exceptions -> \
                Slice common.api.exceptions -> \
                Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice monitor.api.reports.row -> \
                Slice monitor.api.reports.item -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationInUseException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationInUseException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.getClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.getClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> in (ClassificationService.java:0)\
  2. Dependencies of Slice classification.api.exceptions\
    - Class <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (ClassificationAlreadyExistException.java:0)\
    - Class <pro.taskana.classification.api.exceptions.ClassificationInUseException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (ClassificationInUseException.java:0)\
    - Class <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> extends class <pro.taskana.common.api.exceptions.NotFoundException> in (ClassificationNotFoundException.java:0)\
    - Class <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (MalformedServiceLevelException.java:0)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.NotFoundException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (ClassificationNotFoundException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (ClassificationNotFoundException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (ClassificationAlreadyExistException.java:26)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (ClassificationAlreadyExistException.java:26)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (ClassificationInUseException.java:29)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.NotFoundException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (ClassificationNotFoundException.java:30)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (ClassificationNotFoundException.java:30)\
    - Constructor <pro.taskana.classification.api.exceptions.MalformedServiceLevelException.<init>(java.lang.String, java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (MalformedServiceLevelException.java:31)\
    - Constructor <pro.taskana.classification.api.exceptions.MalformedServiceLevelException.<init>(java.lang.String, java.lang.String, java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (MalformedServiceLevelException.java:31)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode, java.lang.Throwable)> in (ClassificationInUseException.java:36)\
  3. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
  4. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  5. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  6. Dependencies of Slice monitor.api.reports\
    - Field <pro.taskana.monitor.api.reports.Report.reportRows> has generic type <java.util.Map<java.lang.String, pro.taskana.monitor.api.reports.row.Row<I>>> with type argument depending on <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Field <pro.taskana.monitor.api.reports.Report.sumRow> has type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.DetailedClassificationRow> in (ClassificationReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.Row> in (ClassificationReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.DetailedClassificationRow> in (ClassificationReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.Row> in (ClassificationReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.createRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.getRows()> has generic return type <java.util.Map<java.lang.String, pro.taskana.monitor.api.reports.row.Row<I>>> with type argument depending on <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.getSumRow()> has return type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.lambda$5(java.util.Map, pro.taskana.monitor.api.reports.row.Row)> has parameter of type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.Row> in (TimestampReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.TimestampRow> in (TimestampReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.Row> in (TimestampReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.TimestampRow> in (TimestampReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.createRow(java.lang.String, int)> calls constructor <pro.taskana.monitor.api.reports.row.TimestampRow.<init>(java.lang.String, int)> in (TimestampReport.java:39)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem)> calls method <pro.taskana.monitor.api.reports.row.Row.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> in (Report.java:74)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem)> calls method <pro.taskana.monitor.api.reports.row.Row.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> in (Report.java:75)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem)> calls method <pro.taskana.monitor.api.reports.row.Row.addItem(pro.taskana.monitor.api.reports.item.QueryItem, int)> in (Report.java:82)\
    (5 further dependencies have been omitted...)\
  7. Dependencies of Slice monitor.api.reports.row\
    - Class <pro.taskana.monitor.api.reports.row.DetailedClassificationRow> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (DetailedClassificationRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.FoldableRow> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (FoldableRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.Row> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (Row.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.SingleRow> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (SingleRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel1Row> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel2Row> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel3Row> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.TimestampRow> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.DetailedClassificationRow.buildRow(java.lang.String, int)> has generic return type <pro.taskana.monitor.api.reports.row.Row<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (DetailedClassificationRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.DetailedClassificationRow.getFoldableRow(java.lang.String)> has generic return type <pro.taskana.monitor.api.reports.row.SingleRow<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (DetailedClassificationRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.DetailedClassificationRow.lambda$0(pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (DetailedClassificationRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.FoldableRow.addItem(pro.taskana.monitor.api.reports.item.QueryItem, int)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (FoldableRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.FoldableRow.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (FoldableRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.Row.addItem(pro.taskana.monitor.api.reports.item.QueryItem, int)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (Row.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.Row.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (Row.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.SingleRow.addItem(pro.taskana.monitor.api.reports.item.QueryItem, int)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (SingleRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.SingleRow.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (SingleRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel3Row.buildRow(java.lang.String, int)> has generic return type <pro.taskana.monitor.api.reports.row.Row<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel3Row.getFoldableRow(java.lang.String)> has generic return type <pro.taskana.monitor.api.reports.row.SingleRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.row.TimestampRow.<init>(java.lang.String, int)> references method <pro.taskana.monitor.api.reports.item.TimestampQueryItem.getOrgLevel1()> in (TimestampRow.java:13)\
    (7 further dependencies have been omitted...)\
  8. Dependencies of Slice monitor.api.reports.item\
    - Field <pro.taskana.monitor.api.reports.item.TaskQueryItem.state> has type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.getState()> has return type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.setState(pro.taskana.task.api.TaskState)> has parameter of type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
  9. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  10. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.Attachment.setClassificationSummary(pro.taskana.classification.api.models.ClassificationSummary)> has parameter of type <pro.taskana.classification.api.models.ClassificationSummary> in (Attachment.java:0)\
    - Method <pro.taskana.task.api.models.AttachmentSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (AttachmentSummary.java:0)\
    - Method <pro.taskana.task.api.models.TaskSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (TaskSummary.java:0)\
  11. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice classification.api.exceptions -> \
                Slice common.api.exceptions -> \
                Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationInUseException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationInUseException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.getClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.getClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> in (ClassificationService.java:0)\
  2. Dependencies of Slice classification.api.exceptions\
    - Class <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (ClassificationAlreadyExistException.java:0)\
    - Class <pro.taskana.classification.api.exceptions.ClassificationInUseException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (ClassificationInUseException.java:0)\
    - Class <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> extends class <pro.taskana.common.api.exceptions.NotFoundException> in (ClassificationNotFoundException.java:0)\
    - Class <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (MalformedServiceLevelException.java:0)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.NotFoundException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (ClassificationNotFoundException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (ClassificationNotFoundException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (ClassificationAlreadyExistException.java:26)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (ClassificationAlreadyExistException.java:26)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (ClassificationInUseException.java:29)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.NotFoundException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (ClassificationNotFoundException.java:30)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (ClassificationNotFoundException.java:30)\
    - Constructor <pro.taskana.classification.api.exceptions.MalformedServiceLevelException.<init>(java.lang.String, java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (MalformedServiceLevelException.java:31)\
    - Constructor <pro.taskana.classification.api.exceptions.MalformedServiceLevelException.<init>(java.lang.String, java.lang.String, java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (MalformedServiceLevelException.java:31)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode, java.lang.Throwable)> in (ClassificationInUseException.java:36)\
  3. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
  4. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  5. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  6. Dependencies of Slice monitor.api.reports\
    - Constructor <pro.taskana.monitor.api.reports.TaskStatusReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.task.api.TaskState>> with type argument depending on <pro.taskana.task.api.TaskState> in (TaskStatusReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TaskStatusReport$Builder.stateIn(java.util.List)> has generic parameter type <java.util.List<pro.taskana.task.api.TaskState>> with type argument depending on <pro.taskana.task.api.TaskState> in (TaskStatusReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.customAttributeIn(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.customAttributeLike(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.customAttributeNotIn(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.listCustomAttributeValuesForCustomAttributeName(pro.taskana.task.api.TaskCustomField)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.stateIn(java.util.List)> has generic parameter type <java.util.List<pro.taskana.task.api.TaskState>> with type argument depending on <pro.taskana.task.api.TaskState> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder.customAttributeIn(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (WorkbasketPriorityReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder.customAttributeLike(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (WorkbasketPriorityReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder.customAttributeNotIn(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (WorkbasketPriorityReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder.stateIn(java.util.List)> has generic parameter type <java.util.List<pro.taskana.task.api.TaskState>> with type argument depending on <pro.taskana.task.api.TaskState> in (WorkbasketPriorityReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.TaskStatusReport.<init>(java.util.List)> calls method <pro.taskana.task.api.TaskState.values()> in (TaskStatusReport.java:27)\
  7. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  8. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.Attachment.setClassificationSummary(pro.taskana.classification.api.models.ClassificationSummary)> has parameter of type <pro.taskana.classification.api.models.ClassificationSummary> in (Attachment.java:0)\
    - Method <pro.taskana.task.api.models.AttachmentSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (AttachmentSummary.java:0)\
    - Method <pro.taskana.task.api.models.TaskSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (TaskSummary.java:0)\
  9. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice classification.api.exceptions -> \
                Slice common.api.exceptions -> \
                Slice common.api -> \
                Slice monitor.api -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationInUseException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationInUseException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.getClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.getClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> in (ClassificationService.java:0)\
  2. Dependencies of Slice classification.api.exceptions\
    - Class <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (ClassificationAlreadyExistException.java:0)\
    - Class <pro.taskana.classification.api.exceptions.ClassificationInUseException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (ClassificationInUseException.java:0)\
    - Class <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> extends class <pro.taskana.common.api.exceptions.NotFoundException> in (ClassificationNotFoundException.java:0)\
    - Class <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (MalformedServiceLevelException.java:0)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.NotFoundException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (ClassificationNotFoundException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (ClassificationNotFoundException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (ClassificationAlreadyExistException.java:26)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (ClassificationAlreadyExistException.java:26)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (ClassificationInUseException.java:29)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.NotFoundException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (ClassificationNotFoundException.java:30)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (ClassificationNotFoundException.java:30)\
    - Constructor <pro.taskana.classification.api.exceptions.MalformedServiceLevelException.<init>(java.lang.String, java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (MalformedServiceLevelException.java:31)\
    - Constructor <pro.taskana.classification.api.exceptions.MalformedServiceLevelException.<init>(java.lang.String, java.lang.String, java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (MalformedServiceLevelException.java:31)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode, java.lang.Throwable)> in (ClassificationInUseException.java:36)\
  3. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
  4. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  5. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (MonitorService.java:0)\
  6. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  7. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.Attachment.setClassificationSummary(pro.taskana.classification.api.models.ClassificationSummary)> has parameter of type <pro.taskana.classification.api.models.ClassificationSummary> in (Attachment.java:0)\
    - Method <pro.taskana.task.api.models.AttachmentSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (AttachmentSummary.java:0)\
    - Method <pro.taskana.task.api.models.TaskSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (TaskSummary.java:0)\
  8. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice classification.api.exceptions -> \
                Slice common.api.exceptions -> \
                Slice common.api -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationInUseException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationInUseException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.getClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.getClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> in (ClassificationService.java:0)\
  2. Dependencies of Slice classification.api.exceptions\
    - Class <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (ClassificationAlreadyExistException.java:0)\
    - Class <pro.taskana.classification.api.exceptions.ClassificationInUseException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (ClassificationInUseException.java:0)\
    - Class <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> extends class <pro.taskana.common.api.exceptions.NotFoundException> in (ClassificationNotFoundException.java:0)\
    - Class <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (MalformedServiceLevelException.java:0)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.NotFoundException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (ClassificationNotFoundException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (ClassificationNotFoundException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (ClassificationAlreadyExistException.java:26)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (ClassificationAlreadyExistException.java:26)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (ClassificationInUseException.java:29)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.NotFoundException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (ClassificationNotFoundException.java:30)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (ClassificationNotFoundException.java:30)\
    - Constructor <pro.taskana.classification.api.exceptions.MalformedServiceLevelException.<init>(java.lang.String, java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (MalformedServiceLevelException.java:31)\
    - Constructor <pro.taskana.classification.api.exceptions.MalformedServiceLevelException.<init>(java.lang.String, java.lang.String, java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (MalformedServiceLevelException.java:31)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode, java.lang.Throwable)> in (ClassificationInUseException.java:36)\
  3. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
  4. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getTaskService()> has return type <pro.taskana.task.api.TaskService> in (TaskanaEngine.java:0)\
  5. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  6. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.Attachment.setClassificationSummary(pro.taskana.classification.api.models.ClassificationSummary)> has parameter of type <pro.taskana.classification.api.models.ClassificationSummary> in (Attachment.java:0)\
    - Method <pro.taskana.task.api.models.AttachmentSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (AttachmentSummary.java:0)\
    - Method <pro.taskana.task.api.models.TaskSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (TaskSummary.java:0)\
  7. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice classification.api.exceptions -> \
                Slice common.internal.util -> \
                Slice common.api.exceptions -> \
                Slice common.api -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationInUseException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationInUseException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.getClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.getClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> in (ClassificationService.java:0)\
  2. Dependencies of Slice classification.api.exceptions\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object)> in (ClassificationNotFoundException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (ClassificationAlreadyExistException.java:26)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (ClassificationInUseException.java:31)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (ClassificationNotFoundException.java:31)\
    - Constructor <pro.taskana.classification.api.exceptions.MalformedServiceLevelException.<init>(java.lang.String, java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (MalformedServiceLevelException.java:33)\
  3. Dependencies of Slice common.internal.util\
    - Method <pro.taskana.common.internal.util.CheckedRunnable.lambda$0(pro.taskana.common.internal.util.CheckedRunnable)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedRunnable.java:13)\
    - Method <pro.taskana.common.internal.util.CheckedConsumer.lambda$0(pro.taskana.common.internal.util.CheckedConsumer, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedConsumer.java:14)\
    - Method <pro.taskana.common.internal.util.CheckedFunction.lambda$0(pro.taskana.common.internal.util.CheckedFunction, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedFunction.java:14)\
    - Method <pro.taskana.common.internal.util.CheckedSupplier.lambda$0(pro.taskana.common.internal.util.CheckedSupplier)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedSupplier.java:15)\
    - Method <pro.taskana.common.internal.util.CheckedFunction.lambda$1(pro.taskana.common.internal.util.CheckedFunction, java.lang.Class, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedFunction.java:28)\
    - Method <pro.taskana.common.internal.util.ObjectAttributeChangeDetector.determineChangesInAttributes(java.lang.Object, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (ObjectAttributeChangeDetector.java:33)\
    - Method <pro.taskana.common.internal.util.FileLoaderUtil.openFileFromClasspathOrSystem(java.lang.String, java.lang.Class)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (FileLoaderUtil.java:36)\
    - Method <pro.taskana.common.internal.util.FileLoaderUtil.openFileFromClasspathOrSystem(java.lang.String, java.lang.Class)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (FileLoaderUtil.java:42)\
    - Method <pro.taskana.common.internal.util.ObjectAttributeChangeDetector.determineChangesInAttributes(java.lang.Object, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (ObjectAttributeChangeDetector.java:45)\
  4. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
  5. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getClassificationService()> has return type <pro.taskana.classification.api.ClassificationService> in (TaskanaEngine.java:0)
Cycle detected: Slice classification.api -> \
                Slice classification.api.exceptions -> \
                Slice common.internal.util -> \
                Slice common.api.exceptions -> \
                Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice monitor.api.reports.header -> \
                Slice monitor.api.reports.item -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationInUseException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationInUseException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.getClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.getClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> in (ClassificationService.java:0)\
  2. Dependencies of Slice classification.api.exceptions\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object)> in (ClassificationNotFoundException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (ClassificationAlreadyExistException.java:26)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (ClassificationInUseException.java:31)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (ClassificationNotFoundException.java:31)\
    - Constructor <pro.taskana.classification.api.exceptions.MalformedServiceLevelException.<init>(java.lang.String, java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (MalformedServiceLevelException.java:33)\
  3. Dependencies of Slice common.internal.util\
    - Method <pro.taskana.common.internal.util.CheckedRunnable.lambda$0(pro.taskana.common.internal.util.CheckedRunnable)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedRunnable.java:13)\
    - Method <pro.taskana.common.internal.util.CheckedConsumer.lambda$0(pro.taskana.common.internal.util.CheckedConsumer, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedConsumer.java:14)\
    - Method <pro.taskana.common.internal.util.CheckedFunction.lambda$0(pro.taskana.common.internal.util.CheckedFunction, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedFunction.java:14)\
    - Method <pro.taskana.common.internal.util.CheckedSupplier.lambda$0(pro.taskana.common.internal.util.CheckedSupplier)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedSupplier.java:15)\
    - Method <pro.taskana.common.internal.util.CheckedFunction.lambda$1(pro.taskana.common.internal.util.CheckedFunction, java.lang.Class, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedFunction.java:28)\
    - Method <pro.taskana.common.internal.util.ObjectAttributeChangeDetector.determineChangesInAttributes(java.lang.Object, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (ObjectAttributeChangeDetector.java:33)\
    - Method <pro.taskana.common.internal.util.FileLoaderUtil.openFileFromClasspathOrSystem(java.lang.String, java.lang.Class)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (FileLoaderUtil.java:36)\
    - Method <pro.taskana.common.internal.util.FileLoaderUtil.openFileFromClasspathOrSystem(java.lang.String, java.lang.Class)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (FileLoaderUtil.java:42)\
    - Method <pro.taskana.common.internal.util.ObjectAttributeChangeDetector.determineChangesInAttributes(java.lang.Object, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (ObjectAttributeChangeDetector.java:45)\
  4. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
  5. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  6. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  7. Dependencies of Slice monitor.api.reports\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report$Builder> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.ColumnHeader> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.ColumnHeader> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimeIntervalReportBuilder.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TimestampReport$Builder, pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.WorkbasketReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (WorkbasketReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (WorkbasketReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.ClassificationCategoryReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    (8 further dependencies have been omitted...)\
  8. Dependencies of Slice monitor.api.reports.header\
    - Class <pro.taskana.monitor.api.reports.header.ColumnHeader> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (ColumnHeader.java:0)\
    - Class <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> has generic interface <pro.taskana.monitor.api.reports.header.ColumnHeader<pro.taskana.monitor.api.reports.item.PriorityQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.PriorityQueryItem> in (PriorityColumnHeader.java:0)\
    - Class <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> has generic interface <pro.taskana.monitor.api.reports.header.ColumnHeader<pro.taskana.monitor.api.reports.item.TaskQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TaskQueryItem> in (TaskStatusColumnHeader.java:0)\
    - Class <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> has generic interface <pro.taskana.monitor.api.reports.header.ColumnHeader<pro.taskana.monitor.api.reports.item.AgeQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.AgeQueryItem> in (TimeIntervalColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.ColumnHeader.fits(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (ColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.PriorityColumnHeader.fits(pro.taskana.monitor.api.reports.item.PriorityQueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.PriorityQueryItem> in (PriorityColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.PriorityColumnHeader.fits(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (PriorityColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.fits(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (TaskStatusColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.fits(pro.taskana.monitor.api.reports.item.TaskQueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.TaskQueryItem> in (TaskStatusColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader.fits(pro.taskana.monitor.api.reports.item.AgeQueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.AgeQueryItem> in (TimeIntervalColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader.fits(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (TimeIntervalColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.fits(pro.taskana.monitor.api.reports.item.TaskQueryItem)> calls method <pro.taskana.monitor.api.reports.item.TaskQueryItem.getState()> in (TaskStatusColumnHeader.java:22)\
    - Method <pro.taskana.monitor.api.reports.header.PriorityColumnHeader.fits(pro.taskana.monitor.api.reports.item.PriorityQueryItem)> calls method <pro.taskana.monitor.api.reports.item.PriorityQueryItem.getPriority()> in (PriorityColumnHeader.java:28)\
    - Method <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader.fits(pro.taskana.monitor.api.reports.item.AgeQueryItem)> calls method <pro.taskana.monitor.api.reports.item.AgeQueryItem.getAgeInDays()> in (TimeIntervalColumnHeader.java:62)\
  9. Dependencies of Slice monitor.api.reports.item\
    - Field <pro.taskana.monitor.api.reports.item.TaskQueryItem.state> has type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.getState()> has return type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.setState(pro.taskana.task.api.TaskState)> has parameter of type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
  10. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  11. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.Attachment.setClassificationSummary(pro.taskana.classification.api.models.ClassificationSummary)> has parameter of type <pro.taskana.classification.api.models.ClassificationSummary> in (Attachment.java:0)\
    - Method <pro.taskana.task.api.models.AttachmentSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (AttachmentSummary.java:0)\
    - Method <pro.taskana.task.api.models.TaskSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (TaskSummary.java:0)\
  12. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice classification.api.exceptions -> \
                Slice common.internal.util -> \
                Slice common.api.exceptions -> \
                Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice monitor.api.reports.header -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationInUseException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationInUseException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.getClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.getClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> in (ClassificationService.java:0)\
  2. Dependencies of Slice classification.api.exceptions\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object)> in (ClassificationNotFoundException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (ClassificationAlreadyExistException.java:26)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (ClassificationInUseException.java:31)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (ClassificationNotFoundException.java:31)\
    - Constructor <pro.taskana.classification.api.exceptions.MalformedServiceLevelException.<init>(java.lang.String, java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (MalformedServiceLevelException.java:33)\
  3. Dependencies of Slice common.internal.util\
    - Method <pro.taskana.common.internal.util.CheckedRunnable.lambda$0(pro.taskana.common.internal.util.CheckedRunnable)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedRunnable.java:13)\
    - Method <pro.taskana.common.internal.util.CheckedConsumer.lambda$0(pro.taskana.common.internal.util.CheckedConsumer, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedConsumer.java:14)\
    - Method <pro.taskana.common.internal.util.CheckedFunction.lambda$0(pro.taskana.common.internal.util.CheckedFunction, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedFunction.java:14)\
    - Method <pro.taskana.common.internal.util.CheckedSupplier.lambda$0(pro.taskana.common.internal.util.CheckedSupplier)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedSupplier.java:15)\
    - Method <pro.taskana.common.internal.util.CheckedFunction.lambda$1(pro.taskana.common.internal.util.CheckedFunction, java.lang.Class, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedFunction.java:28)\
    - Method <pro.taskana.common.internal.util.ObjectAttributeChangeDetector.determineChangesInAttributes(java.lang.Object, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (ObjectAttributeChangeDetector.java:33)\
    - Method <pro.taskana.common.internal.util.FileLoaderUtil.openFileFromClasspathOrSystem(java.lang.String, java.lang.Class)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (FileLoaderUtil.java:36)\
    - Method <pro.taskana.common.internal.util.FileLoaderUtil.openFileFromClasspathOrSystem(java.lang.String, java.lang.Class)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (FileLoaderUtil.java:42)\
    - Method <pro.taskana.common.internal.util.ObjectAttributeChangeDetector.determineChangesInAttributes(java.lang.Object, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (ObjectAttributeChangeDetector.java:45)\
  4. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
  5. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  6. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  7. Dependencies of Slice monitor.api.reports\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report$Builder> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.ColumnHeader> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.ColumnHeader> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimeIntervalReportBuilder.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TimestampReport$Builder, pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.WorkbasketReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (WorkbasketReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (WorkbasketReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.ClassificationCategoryReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    (8 further dependencies have been omitted...)\
  8. Dependencies of Slice monitor.api.reports.header\
    - Constructor <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.<init>(pro.taskana.task.api.TaskState)> has parameter of type <pro.taskana.task.api.TaskState> in (TaskStatusColumnHeader.java:0)\
    - Field <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.state> has type <pro.taskana.task.api.TaskState> in (TaskStatusColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.getDisplayName()> calls method <pro.taskana.task.api.TaskState.name()> in (TaskStatusColumnHeader.java:17)\
  9. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  10. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.Attachment.setClassificationSummary(pro.taskana.classification.api.models.ClassificationSummary)> has parameter of type <pro.taskana.classification.api.models.ClassificationSummary> in (Attachment.java:0)\
    - Method <pro.taskana.task.api.models.AttachmentSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (AttachmentSummary.java:0)\
    - Method <pro.taskana.task.api.models.TaskSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (TaskSummary.java:0)\
  11. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice classification.api.exceptions -> \
                Slice common.internal.util -> \
                Slice common.api.exceptions -> \
                Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice monitor.api.reports.item -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationInUseException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationInUseException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.getClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.getClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> in (ClassificationService.java:0)\
  2. Dependencies of Slice classification.api.exceptions\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object)> in (ClassificationNotFoundException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (ClassificationAlreadyExistException.java:26)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (ClassificationInUseException.java:31)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (ClassificationNotFoundException.java:31)\
    - Constructor <pro.taskana.classification.api.exceptions.MalformedServiceLevelException.<init>(java.lang.String, java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (MalformedServiceLevelException.java:33)\
  3. Dependencies of Slice common.internal.util\
    - Method <pro.taskana.common.internal.util.CheckedRunnable.lambda$0(pro.taskana.common.internal.util.CheckedRunnable)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedRunnable.java:13)\
    - Method <pro.taskana.common.internal.util.CheckedConsumer.lambda$0(pro.taskana.common.internal.util.CheckedConsumer, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedConsumer.java:14)\
    - Method <pro.taskana.common.internal.util.CheckedFunction.lambda$0(pro.taskana.common.internal.util.CheckedFunction, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedFunction.java:14)\
    - Method <pro.taskana.common.internal.util.CheckedSupplier.lambda$0(pro.taskana.common.internal.util.CheckedSupplier)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedSupplier.java:15)\
    - Method <pro.taskana.common.internal.util.CheckedFunction.lambda$1(pro.taskana.common.internal.util.CheckedFunction, java.lang.Class, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedFunction.java:28)\
    - Method <pro.taskana.common.internal.util.ObjectAttributeChangeDetector.determineChangesInAttributes(java.lang.Object, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (ObjectAttributeChangeDetector.java:33)\
    - Method <pro.taskana.common.internal.util.FileLoaderUtil.openFileFromClasspathOrSystem(java.lang.String, java.lang.Class)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (FileLoaderUtil.java:36)\
    - Method <pro.taskana.common.internal.util.FileLoaderUtil.openFileFromClasspathOrSystem(java.lang.String, java.lang.Class)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (FileLoaderUtil.java:42)\
    - Method <pro.taskana.common.internal.util.ObjectAttributeChangeDetector.determineChangesInAttributes(java.lang.Object, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (ObjectAttributeChangeDetector.java:45)\
  4. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
  5. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  6. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  7. Dependencies of Slice monitor.api.reports\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report$Builder> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.TaskQueryItem> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.TaskQueryItem> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.AgeQueryItem> in (TimeIntervalReportBuilder.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TimestampReport$Builder, pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.PriorityQueryItem> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.PriorityQueryItem> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.WorkbasketReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (WorkbasketReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (WorkbasketReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem, pro.taskana.monitor.api.reports.item.QueryItemPreprocessor)> has generic parameter type <pro.taskana.monitor.api.reports.item.QueryItemPreprocessor<I>> with type argument depending on <pro.taskana.monitor.api.reports.item.QueryItemPreprocessor> in (Report.java:0)\
    (8 further dependencies have been omitted...)\
  8. Dependencies of Slice monitor.api.reports.item\
    - Field <pro.taskana.monitor.api.reports.item.TaskQueryItem.state> has type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.getState()> has return type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.setState(pro.taskana.task.api.TaskState)> has parameter of type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
  9. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  10. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.Attachment.setClassificationSummary(pro.taskana.classification.api.models.ClassificationSummary)> has parameter of type <pro.taskana.classification.api.models.ClassificationSummary> in (Attachment.java:0)\
    - Method <pro.taskana.task.api.models.AttachmentSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (AttachmentSummary.java:0)\
    - Method <pro.taskana.task.api.models.TaskSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (TaskSummary.java:0)\
  11. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice classification.api.exceptions -> \
                Slice common.internal.util -> \
                Slice common.api.exceptions -> \
                Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice monitor.api.reports.row -> \
                Slice monitor.api.reports.item -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationInUseException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationInUseException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.getClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.getClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> in (ClassificationService.java:0)\
  2. Dependencies of Slice classification.api.exceptions\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object)> in (ClassificationNotFoundException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (ClassificationAlreadyExistException.java:26)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (ClassificationInUseException.java:31)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (ClassificationNotFoundException.java:31)\
    - Constructor <pro.taskana.classification.api.exceptions.MalformedServiceLevelException.<init>(java.lang.String, java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (MalformedServiceLevelException.java:33)\
  3. Dependencies of Slice common.internal.util\
    - Method <pro.taskana.common.internal.util.CheckedRunnable.lambda$0(pro.taskana.common.internal.util.CheckedRunnable)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedRunnable.java:13)\
    - Method <pro.taskana.common.internal.util.CheckedConsumer.lambda$0(pro.taskana.common.internal.util.CheckedConsumer, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedConsumer.java:14)\
    - Method <pro.taskana.common.internal.util.CheckedFunction.lambda$0(pro.taskana.common.internal.util.CheckedFunction, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedFunction.java:14)\
    - Method <pro.taskana.common.internal.util.CheckedSupplier.lambda$0(pro.taskana.common.internal.util.CheckedSupplier)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedSupplier.java:15)\
    - Method <pro.taskana.common.internal.util.CheckedFunction.lambda$1(pro.taskana.common.internal.util.CheckedFunction, java.lang.Class, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedFunction.java:28)\
    - Method <pro.taskana.common.internal.util.ObjectAttributeChangeDetector.determineChangesInAttributes(java.lang.Object, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (ObjectAttributeChangeDetector.java:33)\
    - Method <pro.taskana.common.internal.util.FileLoaderUtil.openFileFromClasspathOrSystem(java.lang.String, java.lang.Class)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (FileLoaderUtil.java:36)\
    - Method <pro.taskana.common.internal.util.FileLoaderUtil.openFileFromClasspathOrSystem(java.lang.String, java.lang.Class)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (FileLoaderUtil.java:42)\
    - Method <pro.taskana.common.internal.util.ObjectAttributeChangeDetector.determineChangesInAttributes(java.lang.Object, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (ObjectAttributeChangeDetector.java:45)\
  4. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
  5. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  6. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  7. Dependencies of Slice monitor.api.reports\
    - Field <pro.taskana.monitor.api.reports.Report.reportRows> has generic type <java.util.Map<java.lang.String, pro.taskana.monitor.api.reports.row.Row<I>>> with type argument depending on <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Field <pro.taskana.monitor.api.reports.Report.sumRow> has type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.DetailedClassificationRow> in (ClassificationReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.Row> in (ClassificationReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.DetailedClassificationRow> in (ClassificationReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.Row> in (ClassificationReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.createRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.getRows()> has generic return type <java.util.Map<java.lang.String, pro.taskana.monitor.api.reports.row.Row<I>>> with type argument depending on <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.getSumRow()> has return type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.lambda$5(java.util.Map, pro.taskana.monitor.api.reports.row.Row)> has parameter of type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.Row> in (TimestampReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.TimestampRow> in (TimestampReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.Row> in (TimestampReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.TimestampRow> in (TimestampReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.createRow(java.lang.String, int)> calls constructor <pro.taskana.monitor.api.reports.row.TimestampRow.<init>(java.lang.String, int)> in (TimestampReport.java:39)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem)> calls method <pro.taskana.monitor.api.reports.row.Row.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> in (Report.java:74)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem)> calls method <pro.taskana.monitor.api.reports.row.Row.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> in (Report.java:75)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem)> calls method <pro.taskana.monitor.api.reports.row.Row.addItem(pro.taskana.monitor.api.reports.item.QueryItem, int)> in (Report.java:82)\
    (5 further dependencies have been omitted...)\
  8. Dependencies of Slice monitor.api.reports.row\
    - Class <pro.taskana.monitor.api.reports.row.DetailedClassificationRow> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (DetailedClassificationRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.FoldableRow> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (FoldableRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.Row> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (Row.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.SingleRow> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (SingleRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel1Row> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel2Row> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel3Row> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.TimestampRow> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.DetailedClassificationRow.buildRow(java.lang.String, int)> has generic return type <pro.taskana.monitor.api.reports.row.Row<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (DetailedClassificationRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.DetailedClassificationRow.getFoldableRow(java.lang.String)> has generic return type <pro.taskana.monitor.api.reports.row.SingleRow<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (DetailedClassificationRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.DetailedClassificationRow.lambda$0(pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (DetailedClassificationRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.FoldableRow.addItem(pro.taskana.monitor.api.reports.item.QueryItem, int)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (FoldableRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.FoldableRow.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (FoldableRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.Row.addItem(pro.taskana.monitor.api.reports.item.QueryItem, int)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (Row.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.Row.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (Row.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.SingleRow.addItem(pro.taskana.monitor.api.reports.item.QueryItem, int)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (SingleRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.SingleRow.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (SingleRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel3Row.buildRow(java.lang.String, int)> has generic return type <pro.taskana.monitor.api.reports.row.Row<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel3Row.getFoldableRow(java.lang.String)> has generic return type <pro.taskana.monitor.api.reports.row.SingleRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.row.TimestampRow.<init>(java.lang.String, int)> references method <pro.taskana.monitor.api.reports.item.TimestampQueryItem.getOrgLevel1()> in (TimestampRow.java:13)\
    (7 further dependencies have been omitted...)\
  9. Dependencies of Slice monitor.api.reports.item\
    - Field <pro.taskana.monitor.api.reports.item.TaskQueryItem.state> has type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.getState()> has return type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.setState(pro.taskana.task.api.TaskState)> has parameter of type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
  10. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  11. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.Attachment.setClassificationSummary(pro.taskana.classification.api.models.ClassificationSummary)> has parameter of type <pro.taskana.classification.api.models.ClassificationSummary> in (Attachment.java:0)\
    - Method <pro.taskana.task.api.models.AttachmentSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (AttachmentSummary.java:0)\
    - Method <pro.taskana.task.api.models.TaskSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (TaskSummary.java:0)\
  12. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice classification.api.exceptions -> \
                Slice common.internal.util -> \
                Slice common.api.exceptions -> \
                Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationInUseException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationInUseException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.getClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.getClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> in (ClassificationService.java:0)\
  2. Dependencies of Slice classification.api.exceptions\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object)> in (ClassificationNotFoundException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (ClassificationAlreadyExistException.java:26)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (ClassificationInUseException.java:31)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (ClassificationNotFoundException.java:31)\
    - Constructor <pro.taskana.classification.api.exceptions.MalformedServiceLevelException.<init>(java.lang.String, java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (MalformedServiceLevelException.java:33)\
  3. Dependencies of Slice common.internal.util\
    - Method <pro.taskana.common.internal.util.CheckedRunnable.lambda$0(pro.taskana.common.internal.util.CheckedRunnable)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedRunnable.java:13)\
    - Method <pro.taskana.common.internal.util.CheckedConsumer.lambda$0(pro.taskana.common.internal.util.CheckedConsumer, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedConsumer.java:14)\
    - Method <pro.taskana.common.internal.util.CheckedFunction.lambda$0(pro.taskana.common.internal.util.CheckedFunction, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedFunction.java:14)\
    - Method <pro.taskana.common.internal.util.CheckedSupplier.lambda$0(pro.taskana.common.internal.util.CheckedSupplier)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedSupplier.java:15)\
    - Method <pro.taskana.common.internal.util.CheckedFunction.lambda$1(pro.taskana.common.internal.util.CheckedFunction, java.lang.Class, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedFunction.java:28)\
    - Method <pro.taskana.common.internal.util.ObjectAttributeChangeDetector.determineChangesInAttributes(java.lang.Object, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (ObjectAttributeChangeDetector.java:33)\
    - Method <pro.taskana.common.internal.util.FileLoaderUtil.openFileFromClasspathOrSystem(java.lang.String, java.lang.Class)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (FileLoaderUtil.java:36)\
    - Method <pro.taskana.common.internal.util.FileLoaderUtil.openFileFromClasspathOrSystem(java.lang.String, java.lang.Class)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (FileLoaderUtil.java:42)\
    - Method <pro.taskana.common.internal.util.ObjectAttributeChangeDetector.determineChangesInAttributes(java.lang.Object, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (ObjectAttributeChangeDetector.java:45)\
  4. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
  5. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  6. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  7. Dependencies of Slice monitor.api.reports\
    - Constructor <pro.taskana.monitor.api.reports.TaskStatusReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.task.api.TaskState>> with type argument depending on <pro.taskana.task.api.TaskState> in (TaskStatusReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TaskStatusReport$Builder.stateIn(java.util.List)> has generic parameter type <java.util.List<pro.taskana.task.api.TaskState>> with type argument depending on <pro.taskana.task.api.TaskState> in (TaskStatusReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.customAttributeIn(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.customAttributeLike(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.customAttributeNotIn(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.listCustomAttributeValuesForCustomAttributeName(pro.taskana.task.api.TaskCustomField)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.stateIn(java.util.List)> has generic parameter type <java.util.List<pro.taskana.task.api.TaskState>> with type argument depending on <pro.taskana.task.api.TaskState> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder.customAttributeIn(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (WorkbasketPriorityReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder.customAttributeLike(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (WorkbasketPriorityReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder.customAttributeNotIn(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (WorkbasketPriorityReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder.stateIn(java.util.List)> has generic parameter type <java.util.List<pro.taskana.task.api.TaskState>> with type argument depending on <pro.taskana.task.api.TaskState> in (WorkbasketPriorityReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.TaskStatusReport.<init>(java.util.List)> calls method <pro.taskana.task.api.TaskState.values()> in (TaskStatusReport.java:27)\
  8. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  9. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.Attachment.setClassificationSummary(pro.taskana.classification.api.models.ClassificationSummary)> has parameter of type <pro.taskana.classification.api.models.ClassificationSummary> in (Attachment.java:0)\
    - Method <pro.taskana.task.api.models.AttachmentSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (AttachmentSummary.java:0)\
    - Method <pro.taskana.task.api.models.TaskSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (TaskSummary.java:0)\
  10. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice classification.api.exceptions -> \
                Slice common.internal.util -> \
                Slice common.api.exceptions -> \
                Slice common.api -> \
                Slice monitor.api -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationInUseException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationInUseException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.getClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.getClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> in (ClassificationService.java:0)\
  2. Dependencies of Slice classification.api.exceptions\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object)> in (ClassificationNotFoundException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (ClassificationAlreadyExistException.java:26)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (ClassificationInUseException.java:31)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (ClassificationNotFoundException.java:31)\
    - Constructor <pro.taskana.classification.api.exceptions.MalformedServiceLevelException.<init>(java.lang.String, java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (MalformedServiceLevelException.java:33)\
  3. Dependencies of Slice common.internal.util\
    - Method <pro.taskana.common.internal.util.CheckedRunnable.lambda$0(pro.taskana.common.internal.util.CheckedRunnable)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedRunnable.java:13)\
    - Method <pro.taskana.common.internal.util.CheckedConsumer.lambda$0(pro.taskana.common.internal.util.CheckedConsumer, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedConsumer.java:14)\
    - Method <pro.taskana.common.internal.util.CheckedFunction.lambda$0(pro.taskana.common.internal.util.CheckedFunction, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedFunction.java:14)\
    - Method <pro.taskana.common.internal.util.CheckedSupplier.lambda$0(pro.taskana.common.internal.util.CheckedSupplier)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedSupplier.java:15)\
    - Method <pro.taskana.common.internal.util.CheckedFunction.lambda$1(pro.taskana.common.internal.util.CheckedFunction, java.lang.Class, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedFunction.java:28)\
    - Method <pro.taskana.common.internal.util.ObjectAttributeChangeDetector.determineChangesInAttributes(java.lang.Object, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (ObjectAttributeChangeDetector.java:33)\
    - Method <pro.taskana.common.internal.util.FileLoaderUtil.openFileFromClasspathOrSystem(java.lang.String, java.lang.Class)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (FileLoaderUtil.java:36)\
    - Method <pro.taskana.common.internal.util.FileLoaderUtil.openFileFromClasspathOrSystem(java.lang.String, java.lang.Class)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (FileLoaderUtil.java:42)\
    - Method <pro.taskana.common.internal.util.ObjectAttributeChangeDetector.determineChangesInAttributes(java.lang.Object, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (ObjectAttributeChangeDetector.java:45)\
  4. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
  5. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  6. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (MonitorService.java:0)\
  7. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  8. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.Attachment.setClassificationSummary(pro.taskana.classification.api.models.ClassificationSummary)> has parameter of type <pro.taskana.classification.api.models.ClassificationSummary> in (Attachment.java:0)\
    - Method <pro.taskana.task.api.models.AttachmentSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (AttachmentSummary.java:0)\
    - Method <pro.taskana.task.api.models.TaskSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (TaskSummary.java:0)\
  9. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice classification.api.exceptions -> \
                Slice common.internal.util -> \
                Slice common.api.exceptions -> \
                Slice common.api -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationInUseException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationInUseException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.getClassification(java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.getClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.classification.api.exceptions.MalformedServiceLevelException> in (ClassificationService.java:0)\
  2. Dependencies of Slice classification.api.exceptions\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object)> in (ClassificationNotFoundException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (ClassificationAlreadyExistException.java:26)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (ClassificationInUseException.java:31)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationNotFoundException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (ClassificationNotFoundException.java:31)\
    - Constructor <pro.taskana.classification.api.exceptions.MalformedServiceLevelException.<init>(java.lang.String, java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (MalformedServiceLevelException.java:33)\
  3. Dependencies of Slice common.internal.util\
    - Method <pro.taskana.common.internal.util.CheckedRunnable.lambda$0(pro.taskana.common.internal.util.CheckedRunnable)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedRunnable.java:13)\
    - Method <pro.taskana.common.internal.util.CheckedConsumer.lambda$0(pro.taskana.common.internal.util.CheckedConsumer, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedConsumer.java:14)\
    - Method <pro.taskana.common.internal.util.CheckedFunction.lambda$0(pro.taskana.common.internal.util.CheckedFunction, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedFunction.java:14)\
    - Method <pro.taskana.common.internal.util.CheckedSupplier.lambda$0(pro.taskana.common.internal.util.CheckedSupplier)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedSupplier.java:15)\
    - Method <pro.taskana.common.internal.util.CheckedFunction.lambda$1(pro.taskana.common.internal.util.CheckedFunction, java.lang.Class, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedFunction.java:28)\
    - Method <pro.taskana.common.internal.util.ObjectAttributeChangeDetector.determineChangesInAttributes(java.lang.Object, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (ObjectAttributeChangeDetector.java:33)\
    - Method <pro.taskana.common.internal.util.FileLoaderUtil.openFileFromClasspathOrSystem(java.lang.String, java.lang.Class)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (FileLoaderUtil.java:36)\
    - Method <pro.taskana.common.internal.util.FileLoaderUtil.openFileFromClasspathOrSystem(java.lang.String, java.lang.Class)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (FileLoaderUtil.java:42)\
    - Method <pro.taskana.common.internal.util.ObjectAttributeChangeDetector.determineChangesInAttributes(java.lang.Object, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (ObjectAttributeChangeDetector.java:45)\
  4. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
  5. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getTaskService()> has return type <pro.taskana.task.api.TaskService> in (TaskanaEngine.java:0)\
  6. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  7. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.Attachment.setClassificationSummary(pro.taskana.classification.api.models.ClassificationSummary)> has parameter of type <pro.taskana.classification.api.models.ClassificationSummary> in (Attachment.java:0)\
    - Method <pro.taskana.task.api.models.AttachmentSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (AttachmentSummary.java:0)\
    - Method <pro.taskana.task.api.models.TaskSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (TaskSummary.java:0)\
  8. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Class <pro.taskana.classification.api.ClassificationQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.classification.api.models.ClassificationSummary, pro.taskana.classification.api.ClassificationQueryColumnName>> with type argument depending on <pro.taskana.classification.api.models.ClassificationSummary> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> has parameter of type <pro.taskana.classification.api.models.Classification> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> has return type <pro.taskana.classification.api.models.Classification> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.getClassification(java.lang.String)> has return type <pro.taskana.classification.api.models.Classification> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.getClassification(java.lang.String, java.lang.String)> has return type <pro.taskana.classification.api.models.Classification> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.newClassification(java.lang.String, java.lang.String, java.lang.String)> has return type <pro.taskana.classification.api.models.Classification> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> has parameter of type <pro.taskana.classification.api.models.Classification> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> has return type <pro.taskana.classification.api.models.Classification> in (ClassificationService.java:0)\
  2. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice common.api -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Class <pro.taskana.classification.api.ClassificationQueryColumnName> implements interface <pro.taskana.common.api.QueryColumnName> in (ClassificationQueryColumnName.java:0)\
    - Interface <pro.taskana.classification.api.ClassificationQuery> extends interface <pro.taskana.common.api.BaseQuery> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.createdWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.modifiedWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByApplicationEntryPoint(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByCategory(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByDomain(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByName(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByParentId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByParentKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByPriority(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByServiceLevel(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
  2. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getClassificationService()> has return type <pro.taskana.classification.api.ClassificationService> in (TaskanaEngine.java:0)
Cycle detected: Slice classification.api -> \
                Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice monitor.api.reports.header -> \
                Slice monitor.api.reports.item -> \
                Slice task.api -> \
                Slice classification.api.exceptions -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Class <pro.taskana.classification.api.ClassificationQueryColumnName> implements interface <pro.taskana.common.api.QueryColumnName> in (ClassificationQueryColumnName.java:0)\
    - Interface <pro.taskana.classification.api.ClassificationQuery> extends interface <pro.taskana.common.api.BaseQuery> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.createdWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.modifiedWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByApplicationEntryPoint(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByCategory(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByDomain(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByName(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByParentId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByParentKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByPriority(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByServiceLevel(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
  2. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  3. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  4. Dependencies of Slice monitor.api.reports\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report$Builder> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.ColumnHeader> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.ColumnHeader> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimeIntervalReportBuilder.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TimestampReport$Builder, pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.WorkbasketReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (WorkbasketReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (WorkbasketReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.ClassificationCategoryReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    (8 further dependencies have been omitted...)\
  5. Dependencies of Slice monitor.api.reports.header\
    - Class <pro.taskana.monitor.api.reports.header.ColumnHeader> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (ColumnHeader.java:0)\
    - Class <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> has generic interface <pro.taskana.monitor.api.reports.header.ColumnHeader<pro.taskana.monitor.api.reports.item.PriorityQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.PriorityQueryItem> in (PriorityColumnHeader.java:0)\
    - Class <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> has generic interface <pro.taskana.monitor.api.reports.header.ColumnHeader<pro.taskana.monitor.api.reports.item.TaskQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TaskQueryItem> in (TaskStatusColumnHeader.java:0)\
    - Class <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> has generic interface <pro.taskana.monitor.api.reports.header.ColumnHeader<pro.taskana.monitor.api.reports.item.AgeQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.AgeQueryItem> in (TimeIntervalColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.ColumnHeader.fits(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (ColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.PriorityColumnHeader.fits(pro.taskana.monitor.api.reports.item.PriorityQueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.PriorityQueryItem> in (PriorityColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.PriorityColumnHeader.fits(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (PriorityColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.fits(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (TaskStatusColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.fits(pro.taskana.monitor.api.reports.item.TaskQueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.TaskQueryItem> in (TaskStatusColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader.fits(pro.taskana.monitor.api.reports.item.AgeQueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.AgeQueryItem> in (TimeIntervalColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader.fits(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (TimeIntervalColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.fits(pro.taskana.monitor.api.reports.item.TaskQueryItem)> calls method <pro.taskana.monitor.api.reports.item.TaskQueryItem.getState()> in (TaskStatusColumnHeader.java:22)\
    - Method <pro.taskana.monitor.api.reports.header.PriorityColumnHeader.fits(pro.taskana.monitor.api.reports.item.PriorityQueryItem)> calls method <pro.taskana.monitor.api.reports.item.PriorityQueryItem.getPriority()> in (PriorityColumnHeader.java:28)\
    - Method <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader.fits(pro.taskana.monitor.api.reports.item.AgeQueryItem)> calls method <pro.taskana.monitor.api.reports.item.AgeQueryItem.getAgeInDays()> in (TimeIntervalColumnHeader.java:62)\
  6. Dependencies of Slice monitor.api.reports.item\
    - Field <pro.taskana.monitor.api.reports.item.TaskQueryItem.state> has type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.getState()> has return type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.setState(pro.taskana.task.api.TaskState)> has parameter of type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
  7. Dependencies of Slice task.api\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.updateTask(pro.taskana.task.api.models.Task)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (TaskService.java:0)\
  8. Dependencies of Slice classification.api.exceptions\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> has parameter of type <pro.taskana.classification.api.models.Classification> in (ClassificationAlreadyExistException.java:0)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> has parameter of type <pro.taskana.classification.api.models.Classification> in (ClassificationInUseException.java:0)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationAlreadyExistException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationAlreadyExistException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getId()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:33)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:35)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:37)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:38)\
  9. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice monitor.api.reports.header -> \
                Slice monitor.api.reports.item -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Class <pro.taskana.classification.api.ClassificationQueryColumnName> implements interface <pro.taskana.common.api.QueryColumnName> in (ClassificationQueryColumnName.java:0)\
    - Interface <pro.taskana.classification.api.ClassificationQuery> extends interface <pro.taskana.common.api.BaseQuery> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.createdWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.modifiedWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByApplicationEntryPoint(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByCategory(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByDomain(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByName(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByParentId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByParentKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByPriority(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByServiceLevel(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
  2. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  3. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  4. Dependencies of Slice monitor.api.reports\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report$Builder> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.ColumnHeader> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.ColumnHeader> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimeIntervalReportBuilder.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TimestampReport$Builder, pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.WorkbasketReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (WorkbasketReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (WorkbasketReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.ClassificationCategoryReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    (8 further dependencies have been omitted...)\
  5. Dependencies of Slice monitor.api.reports.header\
    - Class <pro.taskana.monitor.api.reports.header.ColumnHeader> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (ColumnHeader.java:0)\
    - Class <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> has generic interface <pro.taskana.monitor.api.reports.header.ColumnHeader<pro.taskana.monitor.api.reports.item.PriorityQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.PriorityQueryItem> in (PriorityColumnHeader.java:0)\
    - Class <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> has generic interface <pro.taskana.monitor.api.reports.header.ColumnHeader<pro.taskana.monitor.api.reports.item.TaskQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TaskQueryItem> in (TaskStatusColumnHeader.java:0)\
    - Class <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> has generic interface <pro.taskana.monitor.api.reports.header.ColumnHeader<pro.taskana.monitor.api.reports.item.AgeQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.AgeQueryItem> in (TimeIntervalColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.ColumnHeader.fits(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (ColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.PriorityColumnHeader.fits(pro.taskana.monitor.api.reports.item.PriorityQueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.PriorityQueryItem> in (PriorityColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.PriorityColumnHeader.fits(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (PriorityColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.fits(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (TaskStatusColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.fits(pro.taskana.monitor.api.reports.item.TaskQueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.TaskQueryItem> in (TaskStatusColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader.fits(pro.taskana.monitor.api.reports.item.AgeQueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.AgeQueryItem> in (TimeIntervalColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader.fits(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (TimeIntervalColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.fits(pro.taskana.monitor.api.reports.item.TaskQueryItem)> calls method <pro.taskana.monitor.api.reports.item.TaskQueryItem.getState()> in (TaskStatusColumnHeader.java:22)\
    - Method <pro.taskana.monitor.api.reports.header.PriorityColumnHeader.fits(pro.taskana.monitor.api.reports.item.PriorityQueryItem)> calls method <pro.taskana.monitor.api.reports.item.PriorityQueryItem.getPriority()> in (PriorityColumnHeader.java:28)\
    - Method <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader.fits(pro.taskana.monitor.api.reports.item.AgeQueryItem)> calls method <pro.taskana.monitor.api.reports.item.AgeQueryItem.getAgeInDays()> in (TimeIntervalColumnHeader.java:62)\
  6. Dependencies of Slice monitor.api.reports.item\
    - Field <pro.taskana.monitor.api.reports.item.TaskQueryItem.state> has type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.getState()> has return type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.setState(pro.taskana.task.api.TaskState)> has parameter of type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
  7. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  8. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.Attachment.setClassificationSummary(pro.taskana.classification.api.models.ClassificationSummary)> has parameter of type <pro.taskana.classification.api.models.ClassificationSummary> in (Attachment.java:0)\
    - Method <pro.taskana.task.api.models.AttachmentSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (AttachmentSummary.java:0)\
    - Method <pro.taskana.task.api.models.TaskSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (TaskSummary.java:0)\
  9. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice monitor.api.reports.header -> \
                Slice task.api -> \
                Slice classification.api.exceptions -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Class <pro.taskana.classification.api.ClassificationQueryColumnName> implements interface <pro.taskana.common.api.QueryColumnName> in (ClassificationQueryColumnName.java:0)\
    - Interface <pro.taskana.classification.api.ClassificationQuery> extends interface <pro.taskana.common.api.BaseQuery> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.createdWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.modifiedWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByApplicationEntryPoint(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByCategory(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByDomain(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByName(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByParentId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByParentKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByPriority(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByServiceLevel(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
  2. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  3. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  4. Dependencies of Slice monitor.api.reports\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report$Builder> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.ColumnHeader> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.ColumnHeader> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimeIntervalReportBuilder.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TimestampReport$Builder, pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.WorkbasketReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (WorkbasketReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (WorkbasketReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.ClassificationCategoryReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    (8 further dependencies have been omitted...)\
  5. Dependencies of Slice monitor.api.reports.header\
    - Constructor <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.<init>(pro.taskana.task.api.TaskState)> has parameter of type <pro.taskana.task.api.TaskState> in (TaskStatusColumnHeader.java:0)\
    - Field <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.state> has type <pro.taskana.task.api.TaskState> in (TaskStatusColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.getDisplayName()> calls method <pro.taskana.task.api.TaskState.name()> in (TaskStatusColumnHeader.java:17)\
  6. Dependencies of Slice task.api\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.updateTask(pro.taskana.task.api.models.Task)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (TaskService.java:0)\
  7. Dependencies of Slice classification.api.exceptions\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> has parameter of type <pro.taskana.classification.api.models.Classification> in (ClassificationAlreadyExistException.java:0)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> has parameter of type <pro.taskana.classification.api.models.Classification> in (ClassificationInUseException.java:0)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationAlreadyExistException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationAlreadyExistException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getId()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:33)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:35)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:37)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:38)\
  8. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice monitor.api.reports.header -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Class <pro.taskana.classification.api.ClassificationQueryColumnName> implements interface <pro.taskana.common.api.QueryColumnName> in (ClassificationQueryColumnName.java:0)\
    - Interface <pro.taskana.classification.api.ClassificationQuery> extends interface <pro.taskana.common.api.BaseQuery> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.createdWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.modifiedWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByApplicationEntryPoint(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByCategory(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByDomain(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByName(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByParentId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByParentKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByPriority(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByServiceLevel(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
  2. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  3. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  4. Dependencies of Slice monitor.api.reports\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report$Builder> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.ColumnHeader> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.ColumnHeader> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimeIntervalReportBuilder.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TimestampReport$Builder, pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.WorkbasketReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (WorkbasketReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (WorkbasketReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.ClassificationCategoryReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    (8 further dependencies have been omitted...)\
  5. Dependencies of Slice monitor.api.reports.header\
    - Constructor <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.<init>(pro.taskana.task.api.TaskState)> has parameter of type <pro.taskana.task.api.TaskState> in (TaskStatusColumnHeader.java:0)\
    - Field <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.state> has type <pro.taskana.task.api.TaskState> in (TaskStatusColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.getDisplayName()> calls method <pro.taskana.task.api.TaskState.name()> in (TaskStatusColumnHeader.java:17)\
  6. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  7. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.Attachment.setClassificationSummary(pro.taskana.classification.api.models.ClassificationSummary)> has parameter of type <pro.taskana.classification.api.models.ClassificationSummary> in (Attachment.java:0)\
    - Method <pro.taskana.task.api.models.AttachmentSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (AttachmentSummary.java:0)\
    - Method <pro.taskana.task.api.models.TaskSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (TaskSummary.java:0)\
  8. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice monitor.api.reports.item -> \
                Slice task.api -> \
                Slice classification.api.exceptions -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Class <pro.taskana.classification.api.ClassificationQueryColumnName> implements interface <pro.taskana.common.api.QueryColumnName> in (ClassificationQueryColumnName.java:0)\
    - Interface <pro.taskana.classification.api.ClassificationQuery> extends interface <pro.taskana.common.api.BaseQuery> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.createdWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.modifiedWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByApplicationEntryPoint(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByCategory(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByDomain(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByName(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByParentId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByParentKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByPriority(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByServiceLevel(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
  2. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  3. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  4. Dependencies of Slice monitor.api.reports\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report$Builder> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.TaskQueryItem> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.TaskQueryItem> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.AgeQueryItem> in (TimeIntervalReportBuilder.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TimestampReport$Builder, pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.PriorityQueryItem> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.PriorityQueryItem> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.WorkbasketReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (WorkbasketReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (WorkbasketReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem, pro.taskana.monitor.api.reports.item.QueryItemPreprocessor)> has generic parameter type <pro.taskana.monitor.api.reports.item.QueryItemPreprocessor<I>> with type argument depending on <pro.taskana.monitor.api.reports.item.QueryItemPreprocessor> in (Report.java:0)\
    (8 further dependencies have been omitted...)\
  5. Dependencies of Slice monitor.api.reports.item\
    - Field <pro.taskana.monitor.api.reports.item.TaskQueryItem.state> has type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.getState()> has return type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.setState(pro.taskana.task.api.TaskState)> has parameter of type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
  6. Dependencies of Slice task.api\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.updateTask(pro.taskana.task.api.models.Task)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (TaskService.java:0)\
  7. Dependencies of Slice classification.api.exceptions\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> has parameter of type <pro.taskana.classification.api.models.Classification> in (ClassificationAlreadyExistException.java:0)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> has parameter of type <pro.taskana.classification.api.models.Classification> in (ClassificationInUseException.java:0)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationAlreadyExistException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationAlreadyExistException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getId()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:33)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:35)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:37)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:38)\
  8. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice monitor.api.reports.item -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Class <pro.taskana.classification.api.ClassificationQueryColumnName> implements interface <pro.taskana.common.api.QueryColumnName> in (ClassificationQueryColumnName.java:0)\
    - Interface <pro.taskana.classification.api.ClassificationQuery> extends interface <pro.taskana.common.api.BaseQuery> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.createdWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.modifiedWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByApplicationEntryPoint(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByCategory(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByDomain(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByName(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByParentId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByParentKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByPriority(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByServiceLevel(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
  2. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  3. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  4. Dependencies of Slice monitor.api.reports\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report$Builder> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.TaskQueryItem> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.TaskQueryItem> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.AgeQueryItem> in (TimeIntervalReportBuilder.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TimestampReport$Builder, pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.PriorityQueryItem> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.PriorityQueryItem> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.WorkbasketReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (WorkbasketReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (WorkbasketReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem, pro.taskana.monitor.api.reports.item.QueryItemPreprocessor)> has generic parameter type <pro.taskana.monitor.api.reports.item.QueryItemPreprocessor<I>> with type argument depending on <pro.taskana.monitor.api.reports.item.QueryItemPreprocessor> in (Report.java:0)\
    (8 further dependencies have been omitted...)\
  5. Dependencies of Slice monitor.api.reports.item\
    - Field <pro.taskana.monitor.api.reports.item.TaskQueryItem.state> has type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.getState()> has return type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.setState(pro.taskana.task.api.TaskState)> has parameter of type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
  6. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  7. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.Attachment.setClassificationSummary(pro.taskana.classification.api.models.ClassificationSummary)> has parameter of type <pro.taskana.classification.api.models.ClassificationSummary> in (Attachment.java:0)\
    - Method <pro.taskana.task.api.models.AttachmentSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (AttachmentSummary.java:0)\
    - Method <pro.taskana.task.api.models.TaskSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (TaskSummary.java:0)\
  8. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice monitor.api.reports.row -> \
                Slice monitor.api.reports.item -> \
                Slice task.api -> \
                Slice classification.api.exceptions -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Class <pro.taskana.classification.api.ClassificationQueryColumnName> implements interface <pro.taskana.common.api.QueryColumnName> in (ClassificationQueryColumnName.java:0)\
    - Interface <pro.taskana.classification.api.ClassificationQuery> extends interface <pro.taskana.common.api.BaseQuery> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.createdWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.modifiedWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByApplicationEntryPoint(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByCategory(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByDomain(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByName(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByParentId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByParentKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByPriority(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByServiceLevel(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
  2. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  3. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  4. Dependencies of Slice monitor.api.reports\
    - Field <pro.taskana.monitor.api.reports.Report.reportRows> has generic type <java.util.Map<java.lang.String, pro.taskana.monitor.api.reports.row.Row<I>>> with type argument depending on <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Field <pro.taskana.monitor.api.reports.Report.sumRow> has type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.DetailedClassificationRow> in (ClassificationReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.Row> in (ClassificationReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.DetailedClassificationRow> in (ClassificationReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.Row> in (ClassificationReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.createRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.getRows()> has generic return type <java.util.Map<java.lang.String, pro.taskana.monitor.api.reports.row.Row<I>>> with type argument depending on <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.getSumRow()> has return type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.lambda$5(java.util.Map, pro.taskana.monitor.api.reports.row.Row)> has parameter of type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.Row> in (TimestampReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.TimestampRow> in (TimestampReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.Row> in (TimestampReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.TimestampRow> in (TimestampReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.createRow(java.lang.String, int)> calls constructor <pro.taskana.monitor.api.reports.row.TimestampRow.<init>(java.lang.String, int)> in (TimestampReport.java:39)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem)> calls method <pro.taskana.monitor.api.reports.row.Row.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> in (Report.java:74)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem)> calls method <pro.taskana.monitor.api.reports.row.Row.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> in (Report.java:75)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem)> calls method <pro.taskana.monitor.api.reports.row.Row.addItem(pro.taskana.monitor.api.reports.item.QueryItem, int)> in (Report.java:82)\
    (5 further dependencies have been omitted...)\
  5. Dependencies of Slice monitor.api.reports.row\
    - Class <pro.taskana.monitor.api.reports.row.DetailedClassificationRow> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (DetailedClassificationRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.FoldableRow> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (FoldableRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.Row> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (Row.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.SingleRow> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (SingleRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel1Row> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel2Row> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel3Row> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.TimestampRow> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.DetailedClassificationRow.buildRow(java.lang.String, int)> has generic return type <pro.taskana.monitor.api.reports.row.Row<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (DetailedClassificationRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.DetailedClassificationRow.getFoldableRow(java.lang.String)> has generic return type <pro.taskana.monitor.api.reports.row.SingleRow<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (DetailedClassificationRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.DetailedClassificationRow.lambda$0(pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (DetailedClassificationRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.FoldableRow.addItem(pro.taskana.monitor.api.reports.item.QueryItem, int)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (FoldableRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.FoldableRow.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (FoldableRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.Row.addItem(pro.taskana.monitor.api.reports.item.QueryItem, int)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (Row.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.Row.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (Row.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.SingleRow.addItem(pro.taskana.monitor.api.reports.item.QueryItem, int)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (SingleRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.SingleRow.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (SingleRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel3Row.buildRow(java.lang.String, int)> has generic return type <pro.taskana.monitor.api.reports.row.Row<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel3Row.getFoldableRow(java.lang.String)> has generic return type <pro.taskana.monitor.api.reports.row.SingleRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.row.TimestampRow.<init>(java.lang.String, int)> references method <pro.taskana.monitor.api.reports.item.TimestampQueryItem.getOrgLevel1()> in (TimestampRow.java:13)\
    (7 further dependencies have been omitted...)\
  6. Dependencies of Slice monitor.api.reports.item\
    - Field <pro.taskana.monitor.api.reports.item.TaskQueryItem.state> has type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.getState()> has return type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.setState(pro.taskana.task.api.TaskState)> has parameter of type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
  7. Dependencies of Slice task.api\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.updateTask(pro.taskana.task.api.models.Task)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (TaskService.java:0)\
  8. Dependencies of Slice classification.api.exceptions\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> has parameter of type <pro.taskana.classification.api.models.Classification> in (ClassificationAlreadyExistException.java:0)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> has parameter of type <pro.taskana.classification.api.models.Classification> in (ClassificationInUseException.java:0)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationAlreadyExistException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationAlreadyExistException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getId()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:33)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:35)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:37)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:38)\
  9. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice monitor.api.reports.row -> \
                Slice monitor.api.reports.item -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Class <pro.taskana.classification.api.ClassificationQueryColumnName> implements interface <pro.taskana.common.api.QueryColumnName> in (ClassificationQueryColumnName.java:0)\
    - Interface <pro.taskana.classification.api.ClassificationQuery> extends interface <pro.taskana.common.api.BaseQuery> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.createdWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.modifiedWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByApplicationEntryPoint(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByCategory(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByDomain(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByName(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByParentId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByParentKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByPriority(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByServiceLevel(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
  2. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  3. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  4. Dependencies of Slice monitor.api.reports\
    - Field <pro.taskana.monitor.api.reports.Report.reportRows> has generic type <java.util.Map<java.lang.String, pro.taskana.monitor.api.reports.row.Row<I>>> with type argument depending on <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Field <pro.taskana.monitor.api.reports.Report.sumRow> has type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.DetailedClassificationRow> in (ClassificationReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.Row> in (ClassificationReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.DetailedClassificationRow> in (ClassificationReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.Row> in (ClassificationReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.createRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.getRows()> has generic return type <java.util.Map<java.lang.String, pro.taskana.monitor.api.reports.row.Row<I>>> with type argument depending on <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.getSumRow()> has return type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.lambda$5(java.util.Map, pro.taskana.monitor.api.reports.row.Row)> has parameter of type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.Row> in (TimestampReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.TimestampRow> in (TimestampReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.Row> in (TimestampReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.TimestampRow> in (TimestampReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.createRow(java.lang.String, int)> calls constructor <pro.taskana.monitor.api.reports.row.TimestampRow.<init>(java.lang.String, int)> in (TimestampReport.java:39)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem)> calls method <pro.taskana.monitor.api.reports.row.Row.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> in (Report.java:74)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem)> calls method <pro.taskana.monitor.api.reports.row.Row.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> in (Report.java:75)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem)> calls method <pro.taskana.monitor.api.reports.row.Row.addItem(pro.taskana.monitor.api.reports.item.QueryItem, int)> in (Report.java:82)\
    (5 further dependencies have been omitted...)\
  5. Dependencies of Slice monitor.api.reports.row\
    - Class <pro.taskana.monitor.api.reports.row.DetailedClassificationRow> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (DetailedClassificationRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.FoldableRow> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (FoldableRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.Row> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (Row.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.SingleRow> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (SingleRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel1Row> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel2Row> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel3Row> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.TimestampRow> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.DetailedClassificationRow.buildRow(java.lang.String, int)> has generic return type <pro.taskana.monitor.api.reports.row.Row<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (DetailedClassificationRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.DetailedClassificationRow.getFoldableRow(java.lang.String)> has generic return type <pro.taskana.monitor.api.reports.row.SingleRow<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (DetailedClassificationRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.DetailedClassificationRow.lambda$0(pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (DetailedClassificationRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.FoldableRow.addItem(pro.taskana.monitor.api.reports.item.QueryItem, int)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (FoldableRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.FoldableRow.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (FoldableRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.Row.addItem(pro.taskana.monitor.api.reports.item.QueryItem, int)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (Row.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.Row.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (Row.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.SingleRow.addItem(pro.taskana.monitor.api.reports.item.QueryItem, int)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (SingleRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.SingleRow.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (SingleRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel3Row.buildRow(java.lang.String, int)> has generic return type <pro.taskana.monitor.api.reports.row.Row<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel3Row.getFoldableRow(java.lang.String)> has generic return type <pro.taskana.monitor.api.reports.row.SingleRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.row.TimestampRow.<init>(java.lang.String, int)> references method <pro.taskana.monitor.api.reports.item.TimestampQueryItem.getOrgLevel1()> in (TimestampRow.java:13)\
    (7 further dependencies have been omitted...)\
  6. Dependencies of Slice monitor.api.reports.item\
    - Field <pro.taskana.monitor.api.reports.item.TaskQueryItem.state> has type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.getState()> has return type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.setState(pro.taskana.task.api.TaskState)> has parameter of type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
  7. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  8. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.Attachment.setClassificationSummary(pro.taskana.classification.api.models.ClassificationSummary)> has parameter of type <pro.taskana.classification.api.models.ClassificationSummary> in (Attachment.java:0)\
    - Method <pro.taskana.task.api.models.AttachmentSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (AttachmentSummary.java:0)\
    - Method <pro.taskana.task.api.models.TaskSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (TaskSummary.java:0)\
  9. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice task.api -> \
                Slice classification.api.exceptions -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Class <pro.taskana.classification.api.ClassificationQueryColumnName> implements interface <pro.taskana.common.api.QueryColumnName> in (ClassificationQueryColumnName.java:0)\
    - Interface <pro.taskana.classification.api.ClassificationQuery> extends interface <pro.taskana.common.api.BaseQuery> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.createdWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.modifiedWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByApplicationEntryPoint(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByCategory(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByDomain(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByName(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByParentId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByParentKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByPriority(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByServiceLevel(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
  2. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  3. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  4. Dependencies of Slice monitor.api.reports\
    - Constructor <pro.taskana.monitor.api.reports.TaskStatusReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.task.api.TaskState>> with type argument depending on <pro.taskana.task.api.TaskState> in (TaskStatusReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TaskStatusReport$Builder.stateIn(java.util.List)> has generic parameter type <java.util.List<pro.taskana.task.api.TaskState>> with type argument depending on <pro.taskana.task.api.TaskState> in (TaskStatusReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.customAttributeIn(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.customAttributeLike(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.customAttributeNotIn(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.listCustomAttributeValuesForCustomAttributeName(pro.taskana.task.api.TaskCustomField)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.stateIn(java.util.List)> has generic parameter type <java.util.List<pro.taskana.task.api.TaskState>> with type argument depending on <pro.taskana.task.api.TaskState> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder.customAttributeIn(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (WorkbasketPriorityReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder.customAttributeLike(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (WorkbasketPriorityReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder.customAttributeNotIn(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (WorkbasketPriorityReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder.stateIn(java.util.List)> has generic parameter type <java.util.List<pro.taskana.task.api.TaskState>> with type argument depending on <pro.taskana.task.api.TaskState> in (WorkbasketPriorityReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.TaskStatusReport.<init>(java.util.List)> calls method <pro.taskana.task.api.TaskState.values()> in (TaskStatusReport.java:27)\
  5. Dependencies of Slice task.api\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.updateTask(pro.taskana.task.api.models.Task)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (TaskService.java:0)\
  6. Dependencies of Slice classification.api.exceptions\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> has parameter of type <pro.taskana.classification.api.models.Classification> in (ClassificationAlreadyExistException.java:0)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> has parameter of type <pro.taskana.classification.api.models.Classification> in (ClassificationInUseException.java:0)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationAlreadyExistException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationAlreadyExistException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getId()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:33)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:35)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:37)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:38)\
  7. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Class <pro.taskana.classification.api.ClassificationQueryColumnName> implements interface <pro.taskana.common.api.QueryColumnName> in (ClassificationQueryColumnName.java:0)\
    - Interface <pro.taskana.classification.api.ClassificationQuery> extends interface <pro.taskana.common.api.BaseQuery> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.createdWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.modifiedWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByApplicationEntryPoint(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByCategory(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByDomain(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByName(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByParentId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByParentKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByPriority(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByServiceLevel(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
  2. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  3. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  4. Dependencies of Slice monitor.api.reports\
    - Constructor <pro.taskana.monitor.api.reports.TaskStatusReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.task.api.TaskState>> with type argument depending on <pro.taskana.task.api.TaskState> in (TaskStatusReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TaskStatusReport$Builder.stateIn(java.util.List)> has generic parameter type <java.util.List<pro.taskana.task.api.TaskState>> with type argument depending on <pro.taskana.task.api.TaskState> in (TaskStatusReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.customAttributeIn(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.customAttributeLike(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.customAttributeNotIn(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.listCustomAttributeValuesForCustomAttributeName(pro.taskana.task.api.TaskCustomField)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.stateIn(java.util.List)> has generic parameter type <java.util.List<pro.taskana.task.api.TaskState>> with type argument depending on <pro.taskana.task.api.TaskState> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder.customAttributeIn(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (WorkbasketPriorityReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder.customAttributeLike(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (WorkbasketPriorityReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder.customAttributeNotIn(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (WorkbasketPriorityReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder.stateIn(java.util.List)> has generic parameter type <java.util.List<pro.taskana.task.api.TaskState>> with type argument depending on <pro.taskana.task.api.TaskState> in (WorkbasketPriorityReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.TaskStatusReport.<init>(java.util.List)> calls method <pro.taskana.task.api.TaskState.values()> in (TaskStatusReport.java:27)\
  5. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  6. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.Attachment.setClassificationSummary(pro.taskana.classification.api.models.ClassificationSummary)> has parameter of type <pro.taskana.classification.api.models.ClassificationSummary> in (Attachment.java:0)\
    - Method <pro.taskana.task.api.models.AttachmentSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (AttachmentSummary.java:0)\
    - Method <pro.taskana.task.api.models.TaskSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (TaskSummary.java:0)\
  7. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice common.api -> \
                Slice monitor.api -> \
                Slice task.api -> \
                Slice classification.api.exceptions -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Class <pro.taskana.classification.api.ClassificationQueryColumnName> implements interface <pro.taskana.common.api.QueryColumnName> in (ClassificationQueryColumnName.java:0)\
    - Interface <pro.taskana.classification.api.ClassificationQuery> extends interface <pro.taskana.common.api.BaseQuery> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.createdWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.modifiedWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByApplicationEntryPoint(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByCategory(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByDomain(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByName(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByParentId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByParentKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByPriority(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByServiceLevel(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
  2. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  3. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (MonitorService.java:0)\
  4. Dependencies of Slice task.api\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.updateTask(pro.taskana.task.api.models.Task)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (TaskService.java:0)\
  5. Dependencies of Slice classification.api.exceptions\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> has parameter of type <pro.taskana.classification.api.models.Classification> in (ClassificationAlreadyExistException.java:0)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> has parameter of type <pro.taskana.classification.api.models.Classification> in (ClassificationInUseException.java:0)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationAlreadyExistException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationAlreadyExistException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getId()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:33)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:35)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:37)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:38)\
  6. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice common.api -> \
                Slice monitor.api -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Class <pro.taskana.classification.api.ClassificationQueryColumnName> implements interface <pro.taskana.common.api.QueryColumnName> in (ClassificationQueryColumnName.java:0)\
    - Interface <pro.taskana.classification.api.ClassificationQuery> extends interface <pro.taskana.common.api.BaseQuery> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.createdWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.modifiedWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByApplicationEntryPoint(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByCategory(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByDomain(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByName(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByParentId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByParentKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByPriority(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByServiceLevel(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
  2. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  3. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (MonitorService.java:0)\
  4. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  5. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.Attachment.setClassificationSummary(pro.taskana.classification.api.models.ClassificationSummary)> has parameter of type <pro.taskana.classification.api.models.ClassificationSummary> in (Attachment.java:0)\
    - Method <pro.taskana.task.api.models.AttachmentSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (AttachmentSummary.java:0)\
    - Method <pro.taskana.task.api.models.TaskSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (TaskSummary.java:0)\
  6. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice common.api -> \
                Slice task.api -> \
                Slice classification.api.exceptions -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Class <pro.taskana.classification.api.ClassificationQueryColumnName> implements interface <pro.taskana.common.api.QueryColumnName> in (ClassificationQueryColumnName.java:0)\
    - Interface <pro.taskana.classification.api.ClassificationQuery> extends interface <pro.taskana.common.api.BaseQuery> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.createdWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.modifiedWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByApplicationEntryPoint(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByCategory(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByDomain(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByName(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByParentId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByParentKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByPriority(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByServiceLevel(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
  2. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getTaskService()> has return type <pro.taskana.task.api.TaskService> in (TaskanaEngine.java:0)\
  3. Dependencies of Slice task.api\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.updateTask(pro.taskana.task.api.models.Task)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (TaskService.java:0)\
  4. Dependencies of Slice classification.api.exceptions\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> has parameter of type <pro.taskana.classification.api.models.Classification> in (ClassificationAlreadyExistException.java:0)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> has parameter of type <pro.taskana.classification.api.models.Classification> in (ClassificationInUseException.java:0)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationAlreadyExistException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationAlreadyExistException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getId()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:33)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:35)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:37)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:38)\
  5. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice common.api -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Class <pro.taskana.classification.api.ClassificationQueryColumnName> implements interface <pro.taskana.common.api.QueryColumnName> in (ClassificationQueryColumnName.java:0)\
    - Interface <pro.taskana.classification.api.ClassificationQuery> extends interface <pro.taskana.common.api.BaseQuery> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.createdWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.modifiedWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByApplicationEntryPoint(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByCategory(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByDomain(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByName(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByParentId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByParentKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByPriority(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.orderByServiceLevel(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (ClassificationQuery.java:0)\
  2. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getTaskService()> has return type <pro.taskana.task.api.TaskService> in (TaskanaEngine.java:0)\
  3. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  4. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.Attachment.setClassificationSummary(pro.taskana.classification.api.models.ClassificationSummary)> has parameter of type <pro.taskana.classification.api.models.ClassificationSummary> in (Attachment.java:0)\
    - Method <pro.taskana.task.api.models.AttachmentSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (AttachmentSummary.java:0)\
    - Method <pro.taskana.task.api.models.TaskSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (TaskSummary.java:0)\
  5. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice common.api.exceptions -> \
                Slice common.api -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Method <pro.taskana.classification.api.ClassificationQuery.customAttributeIn(pro.taskana.classification.api.ClassificationCustomField, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.customAttributeLike(pro.taskana.classification.api.ClassificationCustomField, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.DomainNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.ConcurrencyException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
  2. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
  3. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getClassificationService()> has return type <pro.taskana.classification.api.ClassificationService> in (TaskanaEngine.java:0)
Cycle detected: Slice classification.api -> \
                Slice common.api.exceptions -> \
                Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice monitor.api.reports.header -> \
                Slice monitor.api.reports.item -> \
                Slice task.api -> \
                Slice classification.api.exceptions -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Method <pro.taskana.classification.api.ClassificationQuery.customAttributeIn(pro.taskana.classification.api.ClassificationCustomField, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.customAttributeLike(pro.taskana.classification.api.ClassificationCustomField, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.DomainNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.ConcurrencyException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
  2. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
  3. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  4. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  5. Dependencies of Slice monitor.api.reports\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report$Builder> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.ColumnHeader> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.ColumnHeader> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimeIntervalReportBuilder.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TimestampReport$Builder, pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.WorkbasketReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (WorkbasketReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (WorkbasketReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.ClassificationCategoryReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    (8 further dependencies have been omitted...)\
  6. Dependencies of Slice monitor.api.reports.header\
    - Class <pro.taskana.monitor.api.reports.header.ColumnHeader> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (ColumnHeader.java:0)\
    - Class <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> has generic interface <pro.taskana.monitor.api.reports.header.ColumnHeader<pro.taskana.monitor.api.reports.item.PriorityQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.PriorityQueryItem> in (PriorityColumnHeader.java:0)\
    - Class <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> has generic interface <pro.taskana.monitor.api.reports.header.ColumnHeader<pro.taskana.monitor.api.reports.item.TaskQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TaskQueryItem> in (TaskStatusColumnHeader.java:0)\
    - Class <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> has generic interface <pro.taskana.monitor.api.reports.header.ColumnHeader<pro.taskana.monitor.api.reports.item.AgeQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.AgeQueryItem> in (TimeIntervalColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.ColumnHeader.fits(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (ColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.PriorityColumnHeader.fits(pro.taskana.monitor.api.reports.item.PriorityQueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.PriorityQueryItem> in (PriorityColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.PriorityColumnHeader.fits(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (PriorityColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.fits(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (TaskStatusColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.fits(pro.taskana.monitor.api.reports.item.TaskQueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.TaskQueryItem> in (TaskStatusColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader.fits(pro.taskana.monitor.api.reports.item.AgeQueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.AgeQueryItem> in (TimeIntervalColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader.fits(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (TimeIntervalColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.fits(pro.taskana.monitor.api.reports.item.TaskQueryItem)> calls method <pro.taskana.monitor.api.reports.item.TaskQueryItem.getState()> in (TaskStatusColumnHeader.java:22)\
    - Method <pro.taskana.monitor.api.reports.header.PriorityColumnHeader.fits(pro.taskana.monitor.api.reports.item.PriorityQueryItem)> calls method <pro.taskana.monitor.api.reports.item.PriorityQueryItem.getPriority()> in (PriorityColumnHeader.java:28)\
    - Method <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader.fits(pro.taskana.monitor.api.reports.item.AgeQueryItem)> calls method <pro.taskana.monitor.api.reports.item.AgeQueryItem.getAgeInDays()> in (TimeIntervalColumnHeader.java:62)\
  7. Dependencies of Slice monitor.api.reports.item\
    - Field <pro.taskana.monitor.api.reports.item.TaskQueryItem.state> has type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.getState()> has return type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.setState(pro.taskana.task.api.TaskState)> has parameter of type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
  8. Dependencies of Slice task.api\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.updateTask(pro.taskana.task.api.models.Task)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (TaskService.java:0)\
  9. Dependencies of Slice classification.api.exceptions\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> has parameter of type <pro.taskana.classification.api.models.Classification> in (ClassificationAlreadyExistException.java:0)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> has parameter of type <pro.taskana.classification.api.models.Classification> in (ClassificationInUseException.java:0)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationAlreadyExistException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationAlreadyExistException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getId()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:33)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:35)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:37)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:38)\
  10. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice common.api.exceptions -> \
                Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice monitor.api.reports.header -> \
                Slice monitor.api.reports.item -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Method <pro.taskana.classification.api.ClassificationQuery.customAttributeIn(pro.taskana.classification.api.ClassificationCustomField, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.customAttributeLike(pro.taskana.classification.api.ClassificationCustomField, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.DomainNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.ConcurrencyException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
  2. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
  3. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  4. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  5. Dependencies of Slice monitor.api.reports\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report$Builder> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.ColumnHeader> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.ColumnHeader> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimeIntervalReportBuilder.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TimestampReport$Builder, pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.WorkbasketReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (WorkbasketReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (WorkbasketReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.ClassificationCategoryReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    (8 further dependencies have been omitted...)\
  6. Dependencies of Slice monitor.api.reports.header\
    - Class <pro.taskana.monitor.api.reports.header.ColumnHeader> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (ColumnHeader.java:0)\
    - Class <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> has generic interface <pro.taskana.monitor.api.reports.header.ColumnHeader<pro.taskana.monitor.api.reports.item.PriorityQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.PriorityQueryItem> in (PriorityColumnHeader.java:0)\
    - Class <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> has generic interface <pro.taskana.monitor.api.reports.header.ColumnHeader<pro.taskana.monitor.api.reports.item.TaskQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TaskQueryItem> in (TaskStatusColumnHeader.java:0)\
    - Class <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> has generic interface <pro.taskana.monitor.api.reports.header.ColumnHeader<pro.taskana.monitor.api.reports.item.AgeQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.AgeQueryItem> in (TimeIntervalColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.ColumnHeader.fits(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (ColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.PriorityColumnHeader.fits(pro.taskana.monitor.api.reports.item.PriorityQueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.PriorityQueryItem> in (PriorityColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.PriorityColumnHeader.fits(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (PriorityColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.fits(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (TaskStatusColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.fits(pro.taskana.monitor.api.reports.item.TaskQueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.TaskQueryItem> in (TaskStatusColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader.fits(pro.taskana.monitor.api.reports.item.AgeQueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.AgeQueryItem> in (TimeIntervalColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader.fits(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (TimeIntervalColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.fits(pro.taskana.monitor.api.reports.item.TaskQueryItem)> calls method <pro.taskana.monitor.api.reports.item.TaskQueryItem.getState()> in (TaskStatusColumnHeader.java:22)\
    - Method <pro.taskana.monitor.api.reports.header.PriorityColumnHeader.fits(pro.taskana.monitor.api.reports.item.PriorityQueryItem)> calls method <pro.taskana.monitor.api.reports.item.PriorityQueryItem.getPriority()> in (PriorityColumnHeader.java:28)\
    - Method <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader.fits(pro.taskana.monitor.api.reports.item.AgeQueryItem)> calls method <pro.taskana.monitor.api.reports.item.AgeQueryItem.getAgeInDays()> in (TimeIntervalColumnHeader.java:62)\
  7. Dependencies of Slice monitor.api.reports.item\
    - Field <pro.taskana.monitor.api.reports.item.TaskQueryItem.state> has type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.getState()> has return type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.setState(pro.taskana.task.api.TaskState)> has parameter of type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
  8. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  9. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.Attachment.setClassificationSummary(pro.taskana.classification.api.models.ClassificationSummary)> has parameter of type <pro.taskana.classification.api.models.ClassificationSummary> in (Attachment.java:0)\
    - Method <pro.taskana.task.api.models.AttachmentSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (AttachmentSummary.java:0)\
    - Method <pro.taskana.task.api.models.TaskSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (TaskSummary.java:0)\
  10. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice common.api.exceptions -> \
                Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice monitor.api.reports.header -> \
                Slice task.api -> \
                Slice classification.api.exceptions -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Method <pro.taskana.classification.api.ClassificationQuery.customAttributeIn(pro.taskana.classification.api.ClassificationCustomField, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.customAttributeLike(pro.taskana.classification.api.ClassificationCustomField, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.DomainNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.ConcurrencyException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
  2. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
  3. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  4. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  5. Dependencies of Slice monitor.api.reports\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report$Builder> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.ColumnHeader> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.ColumnHeader> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimeIntervalReportBuilder.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TimestampReport$Builder, pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.WorkbasketReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (WorkbasketReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (WorkbasketReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.ClassificationCategoryReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    (8 further dependencies have been omitted...)\
  6. Dependencies of Slice monitor.api.reports.header\
    - Constructor <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.<init>(pro.taskana.task.api.TaskState)> has parameter of type <pro.taskana.task.api.TaskState> in (TaskStatusColumnHeader.java:0)\
    - Field <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.state> has type <pro.taskana.task.api.TaskState> in (TaskStatusColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.getDisplayName()> calls method <pro.taskana.task.api.TaskState.name()> in (TaskStatusColumnHeader.java:17)\
  7. Dependencies of Slice task.api\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.updateTask(pro.taskana.task.api.models.Task)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (TaskService.java:0)\
  8. Dependencies of Slice classification.api.exceptions\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> has parameter of type <pro.taskana.classification.api.models.Classification> in (ClassificationAlreadyExistException.java:0)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> has parameter of type <pro.taskana.classification.api.models.Classification> in (ClassificationInUseException.java:0)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationAlreadyExistException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationAlreadyExistException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getId()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:33)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:35)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:37)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:38)\
  9. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice common.api.exceptions -> \
                Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice monitor.api.reports.header -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Method <pro.taskana.classification.api.ClassificationQuery.customAttributeIn(pro.taskana.classification.api.ClassificationCustomField, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.customAttributeLike(pro.taskana.classification.api.ClassificationCustomField, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.DomainNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.ConcurrencyException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
  2. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
  3. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  4. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  5. Dependencies of Slice monitor.api.reports\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report$Builder> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.ColumnHeader> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.ColumnHeader> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimeIntervalReportBuilder.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TimestampReport$Builder, pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.WorkbasketReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (WorkbasketReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (WorkbasketReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.ClassificationCategoryReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    (8 further dependencies have been omitted...)\
  6. Dependencies of Slice monitor.api.reports.header\
    - Constructor <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.<init>(pro.taskana.task.api.TaskState)> has parameter of type <pro.taskana.task.api.TaskState> in (TaskStatusColumnHeader.java:0)\
    - Field <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.state> has type <pro.taskana.task.api.TaskState> in (TaskStatusColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.getDisplayName()> calls method <pro.taskana.task.api.TaskState.name()> in (TaskStatusColumnHeader.java:17)\
  7. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  8. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.Attachment.setClassificationSummary(pro.taskana.classification.api.models.ClassificationSummary)> has parameter of type <pro.taskana.classification.api.models.ClassificationSummary> in (Attachment.java:0)\
    - Method <pro.taskana.task.api.models.AttachmentSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (AttachmentSummary.java:0)\
    - Method <pro.taskana.task.api.models.TaskSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (TaskSummary.java:0)\
  9. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice common.api.exceptions -> \
                Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice monitor.api.reports.item -> \
                Slice task.api -> \
                Slice classification.api.exceptions -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Method <pro.taskana.classification.api.ClassificationQuery.customAttributeIn(pro.taskana.classification.api.ClassificationCustomField, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.customAttributeLike(pro.taskana.classification.api.ClassificationCustomField, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.DomainNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.ConcurrencyException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
  2. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
  3. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  4. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  5. Dependencies of Slice monitor.api.reports\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report$Builder> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.TaskQueryItem> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.TaskQueryItem> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.AgeQueryItem> in (TimeIntervalReportBuilder.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TimestampReport$Builder, pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.PriorityQueryItem> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.PriorityQueryItem> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.WorkbasketReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (WorkbasketReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (WorkbasketReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem, pro.taskana.monitor.api.reports.item.QueryItemPreprocessor)> has generic parameter type <pro.taskana.monitor.api.reports.item.QueryItemPreprocessor<I>> with type argument depending on <pro.taskana.monitor.api.reports.item.QueryItemPreprocessor> in (Report.java:0)\
    (8 further dependencies have been omitted...)\
  6. Dependencies of Slice monitor.api.reports.item\
    - Field <pro.taskana.monitor.api.reports.item.TaskQueryItem.state> has type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.getState()> has return type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.setState(pro.taskana.task.api.TaskState)> has parameter of type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
  7. Dependencies of Slice task.api\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.updateTask(pro.taskana.task.api.models.Task)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (TaskService.java:0)\
  8. Dependencies of Slice classification.api.exceptions\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> has parameter of type <pro.taskana.classification.api.models.Classification> in (ClassificationAlreadyExistException.java:0)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> has parameter of type <pro.taskana.classification.api.models.Classification> in (ClassificationInUseException.java:0)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationAlreadyExistException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationAlreadyExistException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getId()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:33)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:35)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:37)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:38)\
  9. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice common.api.exceptions -> \
                Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice monitor.api.reports.item -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Method <pro.taskana.classification.api.ClassificationQuery.customAttributeIn(pro.taskana.classification.api.ClassificationCustomField, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.customAttributeLike(pro.taskana.classification.api.ClassificationCustomField, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.DomainNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.ConcurrencyException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
  2. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
  3. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  4. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  5. Dependencies of Slice monitor.api.reports\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report$Builder> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.TaskQueryItem> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.TaskQueryItem> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.AgeQueryItem> in (TimeIntervalReportBuilder.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TimestampReport$Builder, pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.PriorityQueryItem> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.PriorityQueryItem> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.WorkbasketReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (WorkbasketReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (WorkbasketReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem, pro.taskana.monitor.api.reports.item.QueryItemPreprocessor)> has generic parameter type <pro.taskana.monitor.api.reports.item.QueryItemPreprocessor<I>> with type argument depending on <pro.taskana.monitor.api.reports.item.QueryItemPreprocessor> in (Report.java:0)\
    (8 further dependencies have been omitted...)\
  6. Dependencies of Slice monitor.api.reports.item\
    - Field <pro.taskana.monitor.api.reports.item.TaskQueryItem.state> has type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.getState()> has return type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.setState(pro.taskana.task.api.TaskState)> has parameter of type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
  7. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  8. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.Attachment.setClassificationSummary(pro.taskana.classification.api.models.ClassificationSummary)> has parameter of type <pro.taskana.classification.api.models.ClassificationSummary> in (Attachment.java:0)\
    - Method <pro.taskana.task.api.models.AttachmentSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (AttachmentSummary.java:0)\
    - Method <pro.taskana.task.api.models.TaskSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (TaskSummary.java:0)\
  9. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice common.api.exceptions -> \
                Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice monitor.api.reports.row -> \
                Slice monitor.api.reports.item -> \
                Slice task.api -> \
                Slice classification.api.exceptions -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Method <pro.taskana.classification.api.ClassificationQuery.customAttributeIn(pro.taskana.classification.api.ClassificationCustomField, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.customAttributeLike(pro.taskana.classification.api.ClassificationCustomField, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.DomainNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.ConcurrencyException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
  2. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
  3. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  4. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  5. Dependencies of Slice monitor.api.reports\
    - Field <pro.taskana.monitor.api.reports.Report.reportRows> has generic type <java.util.Map<java.lang.String, pro.taskana.monitor.api.reports.row.Row<I>>> with type argument depending on <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Field <pro.taskana.monitor.api.reports.Report.sumRow> has type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.DetailedClassificationRow> in (ClassificationReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.Row> in (ClassificationReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.DetailedClassificationRow> in (ClassificationReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.Row> in (ClassificationReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.createRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.getRows()> has generic return type <java.util.Map<java.lang.String, pro.taskana.monitor.api.reports.row.Row<I>>> with type argument depending on <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.getSumRow()> has return type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.lambda$5(java.util.Map, pro.taskana.monitor.api.reports.row.Row)> has parameter of type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.Row> in (TimestampReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.TimestampRow> in (TimestampReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.Row> in (TimestampReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.TimestampRow> in (TimestampReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.createRow(java.lang.String, int)> calls constructor <pro.taskana.monitor.api.reports.row.TimestampRow.<init>(java.lang.String, int)> in (TimestampReport.java:39)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem)> calls method <pro.taskana.monitor.api.reports.row.Row.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> in (Report.java:74)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem)> calls method <pro.taskana.monitor.api.reports.row.Row.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> in (Report.java:75)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem)> calls method <pro.taskana.monitor.api.reports.row.Row.addItem(pro.taskana.monitor.api.reports.item.QueryItem, int)> in (Report.java:82)\
    (5 further dependencies have been omitted...)\
  6. Dependencies of Slice monitor.api.reports.row\
    - Class <pro.taskana.monitor.api.reports.row.DetailedClassificationRow> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (DetailedClassificationRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.FoldableRow> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (FoldableRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.Row> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (Row.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.SingleRow> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (SingleRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel1Row> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel2Row> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel3Row> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.TimestampRow> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.DetailedClassificationRow.buildRow(java.lang.String, int)> has generic return type <pro.taskana.monitor.api.reports.row.Row<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (DetailedClassificationRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.DetailedClassificationRow.getFoldableRow(java.lang.String)> has generic return type <pro.taskana.monitor.api.reports.row.SingleRow<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (DetailedClassificationRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.DetailedClassificationRow.lambda$0(pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (DetailedClassificationRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.FoldableRow.addItem(pro.taskana.monitor.api.reports.item.QueryItem, int)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (FoldableRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.FoldableRow.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (FoldableRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.Row.addItem(pro.taskana.monitor.api.reports.item.QueryItem, int)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (Row.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.Row.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (Row.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.SingleRow.addItem(pro.taskana.monitor.api.reports.item.QueryItem, int)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (SingleRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.SingleRow.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (SingleRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel3Row.buildRow(java.lang.String, int)> has generic return type <pro.taskana.monitor.api.reports.row.Row<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel3Row.getFoldableRow(java.lang.String)> has generic return type <pro.taskana.monitor.api.reports.row.SingleRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.row.TimestampRow.<init>(java.lang.String, int)> references method <pro.taskana.monitor.api.reports.item.TimestampQueryItem.getOrgLevel1()> in (TimestampRow.java:13)\
    (7 further dependencies have been omitted...)\
  7. Dependencies of Slice monitor.api.reports.item\
    - Field <pro.taskana.monitor.api.reports.item.TaskQueryItem.state> has type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.getState()> has return type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.setState(pro.taskana.task.api.TaskState)> has parameter of type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
  8. Dependencies of Slice task.api\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.updateTask(pro.taskana.task.api.models.Task)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (TaskService.java:0)\
  9. Dependencies of Slice classification.api.exceptions\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> has parameter of type <pro.taskana.classification.api.models.Classification> in (ClassificationAlreadyExistException.java:0)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> has parameter of type <pro.taskana.classification.api.models.Classification> in (ClassificationInUseException.java:0)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationAlreadyExistException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationAlreadyExistException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getId()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:33)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:35)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:37)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:38)\
  10. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice common.api.exceptions -> \
                Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice monitor.api.reports.row -> \
                Slice monitor.api.reports.item -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Method <pro.taskana.classification.api.ClassificationQuery.customAttributeIn(pro.taskana.classification.api.ClassificationCustomField, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.customAttributeLike(pro.taskana.classification.api.ClassificationCustomField, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.DomainNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.ConcurrencyException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
  2. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
  3. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  4. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  5. Dependencies of Slice monitor.api.reports\
    - Field <pro.taskana.monitor.api.reports.Report.reportRows> has generic type <java.util.Map<java.lang.String, pro.taskana.monitor.api.reports.row.Row<I>>> with type argument depending on <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Field <pro.taskana.monitor.api.reports.Report.sumRow> has type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.DetailedClassificationRow> in (ClassificationReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.Row> in (ClassificationReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.DetailedClassificationRow> in (ClassificationReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.Row> in (ClassificationReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.createRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.getRows()> has generic return type <java.util.Map<java.lang.String, pro.taskana.monitor.api.reports.row.Row<I>>> with type argument depending on <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.getSumRow()> has return type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.lambda$5(java.util.Map, pro.taskana.monitor.api.reports.row.Row)> has parameter of type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.Row> in (TimestampReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.TimestampRow> in (TimestampReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.Row> in (TimestampReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.TimestampRow> in (TimestampReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.createRow(java.lang.String, int)> calls constructor <pro.taskana.monitor.api.reports.row.TimestampRow.<init>(java.lang.String, int)> in (TimestampReport.java:39)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem)> calls method <pro.taskana.monitor.api.reports.row.Row.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> in (Report.java:74)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem)> calls method <pro.taskana.monitor.api.reports.row.Row.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> in (Report.java:75)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem)> calls method <pro.taskana.monitor.api.reports.row.Row.addItem(pro.taskana.monitor.api.reports.item.QueryItem, int)> in (Report.java:82)\
    (5 further dependencies have been omitted...)\
  6. Dependencies of Slice monitor.api.reports.row\
    - Class <pro.taskana.monitor.api.reports.row.DetailedClassificationRow> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (DetailedClassificationRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.FoldableRow> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (FoldableRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.Row> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (Row.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.SingleRow> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (SingleRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel1Row> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel2Row> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel3Row> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.TimestampRow> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.DetailedClassificationRow.buildRow(java.lang.String, int)> has generic return type <pro.taskana.monitor.api.reports.row.Row<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (DetailedClassificationRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.DetailedClassificationRow.getFoldableRow(java.lang.String)> has generic return type <pro.taskana.monitor.api.reports.row.SingleRow<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (DetailedClassificationRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.DetailedClassificationRow.lambda$0(pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (DetailedClassificationRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.FoldableRow.addItem(pro.taskana.monitor.api.reports.item.QueryItem, int)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (FoldableRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.FoldableRow.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (FoldableRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.Row.addItem(pro.taskana.monitor.api.reports.item.QueryItem, int)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (Row.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.Row.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (Row.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.SingleRow.addItem(pro.taskana.monitor.api.reports.item.QueryItem, int)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (SingleRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.SingleRow.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (SingleRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel3Row.buildRow(java.lang.String, int)> has generic return type <pro.taskana.monitor.api.reports.row.Row<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel3Row.getFoldableRow(java.lang.String)> has generic return type <pro.taskana.monitor.api.reports.row.SingleRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.row.TimestampRow.<init>(java.lang.String, int)> references method <pro.taskana.monitor.api.reports.item.TimestampQueryItem.getOrgLevel1()> in (TimestampRow.java:13)\
    (7 further dependencies have been omitted...)\
  7. Dependencies of Slice monitor.api.reports.item\
    - Field <pro.taskana.monitor.api.reports.item.TaskQueryItem.state> has type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.getState()> has return type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.setState(pro.taskana.task.api.TaskState)> has parameter of type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
  8. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  9. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.Attachment.setClassificationSummary(pro.taskana.classification.api.models.ClassificationSummary)> has parameter of type <pro.taskana.classification.api.models.ClassificationSummary> in (Attachment.java:0)\
    - Method <pro.taskana.task.api.models.AttachmentSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (AttachmentSummary.java:0)\
    - Method <pro.taskana.task.api.models.TaskSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (TaskSummary.java:0)\
  10. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice common.api.exceptions -> \
                Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice task.api -> \
                Slice classification.api.exceptions -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Method <pro.taskana.classification.api.ClassificationQuery.customAttributeIn(pro.taskana.classification.api.ClassificationCustomField, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.customAttributeLike(pro.taskana.classification.api.ClassificationCustomField, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.DomainNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.ConcurrencyException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
  2. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
  3. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  4. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  5. Dependencies of Slice monitor.api.reports\
    - Constructor <pro.taskana.monitor.api.reports.TaskStatusReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.task.api.TaskState>> with type argument depending on <pro.taskana.task.api.TaskState> in (TaskStatusReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TaskStatusReport$Builder.stateIn(java.util.List)> has generic parameter type <java.util.List<pro.taskana.task.api.TaskState>> with type argument depending on <pro.taskana.task.api.TaskState> in (TaskStatusReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.customAttributeIn(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.customAttributeLike(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.customAttributeNotIn(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.listCustomAttributeValuesForCustomAttributeName(pro.taskana.task.api.TaskCustomField)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.stateIn(java.util.List)> has generic parameter type <java.util.List<pro.taskana.task.api.TaskState>> with type argument depending on <pro.taskana.task.api.TaskState> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder.customAttributeIn(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (WorkbasketPriorityReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder.customAttributeLike(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (WorkbasketPriorityReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder.customAttributeNotIn(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (WorkbasketPriorityReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder.stateIn(java.util.List)> has generic parameter type <java.util.List<pro.taskana.task.api.TaskState>> with type argument depending on <pro.taskana.task.api.TaskState> in (WorkbasketPriorityReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.TaskStatusReport.<init>(java.util.List)> calls method <pro.taskana.task.api.TaskState.values()> in (TaskStatusReport.java:27)\
  6. Dependencies of Slice task.api\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.updateTask(pro.taskana.task.api.models.Task)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (TaskService.java:0)\
  7. Dependencies of Slice classification.api.exceptions\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> has parameter of type <pro.taskana.classification.api.models.Classification> in (ClassificationAlreadyExistException.java:0)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> has parameter of type <pro.taskana.classification.api.models.Classification> in (ClassificationInUseException.java:0)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationAlreadyExistException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationAlreadyExistException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getId()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:33)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:35)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:37)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:38)\
  8. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice common.api.exceptions -> \
                Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Method <pro.taskana.classification.api.ClassificationQuery.customAttributeIn(pro.taskana.classification.api.ClassificationCustomField, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.customAttributeLike(pro.taskana.classification.api.ClassificationCustomField, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.DomainNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.ConcurrencyException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
  2. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
  3. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  4. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  5. Dependencies of Slice monitor.api.reports\
    - Constructor <pro.taskana.monitor.api.reports.TaskStatusReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.task.api.TaskState>> with type argument depending on <pro.taskana.task.api.TaskState> in (TaskStatusReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TaskStatusReport$Builder.stateIn(java.util.List)> has generic parameter type <java.util.List<pro.taskana.task.api.TaskState>> with type argument depending on <pro.taskana.task.api.TaskState> in (TaskStatusReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.customAttributeIn(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.customAttributeLike(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.customAttributeNotIn(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.listCustomAttributeValuesForCustomAttributeName(pro.taskana.task.api.TaskCustomField)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.stateIn(java.util.List)> has generic parameter type <java.util.List<pro.taskana.task.api.TaskState>> with type argument depending on <pro.taskana.task.api.TaskState> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder.customAttributeIn(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (WorkbasketPriorityReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder.customAttributeLike(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (WorkbasketPriorityReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder.customAttributeNotIn(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (WorkbasketPriorityReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder.stateIn(java.util.List)> has generic parameter type <java.util.List<pro.taskana.task.api.TaskState>> with type argument depending on <pro.taskana.task.api.TaskState> in (WorkbasketPriorityReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.TaskStatusReport.<init>(java.util.List)> calls method <pro.taskana.task.api.TaskState.values()> in (TaskStatusReport.java:27)\
  6. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  7. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.Attachment.setClassificationSummary(pro.taskana.classification.api.models.ClassificationSummary)> has parameter of type <pro.taskana.classification.api.models.ClassificationSummary> in (Attachment.java:0)\
    - Method <pro.taskana.task.api.models.AttachmentSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (AttachmentSummary.java:0)\
    - Method <pro.taskana.task.api.models.TaskSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (TaskSummary.java:0)\
  8. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice common.api.exceptions -> \
                Slice common.api -> \
                Slice monitor.api -> \
                Slice task.api -> \
                Slice classification.api.exceptions -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Method <pro.taskana.classification.api.ClassificationQuery.customAttributeIn(pro.taskana.classification.api.ClassificationCustomField, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.customAttributeLike(pro.taskana.classification.api.ClassificationCustomField, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.DomainNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.ConcurrencyException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
  2. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
  3. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  4. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (MonitorService.java:0)\
  5. Dependencies of Slice task.api\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.updateTask(pro.taskana.task.api.models.Task)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (TaskService.java:0)\
  6. Dependencies of Slice classification.api.exceptions\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> has parameter of type <pro.taskana.classification.api.models.Classification> in (ClassificationAlreadyExistException.java:0)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> has parameter of type <pro.taskana.classification.api.models.Classification> in (ClassificationInUseException.java:0)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationAlreadyExistException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationAlreadyExistException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getId()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:33)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:35)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:37)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:38)\
  7. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice common.api.exceptions -> \
                Slice common.api -> \
                Slice monitor.api -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Method <pro.taskana.classification.api.ClassificationQuery.customAttributeIn(pro.taskana.classification.api.ClassificationCustomField, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.customAttributeLike(pro.taskana.classification.api.ClassificationCustomField, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.DomainNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.ConcurrencyException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
  2. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
  3. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  4. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (MonitorService.java:0)\
  5. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  6. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.Attachment.setClassificationSummary(pro.taskana.classification.api.models.ClassificationSummary)> has parameter of type <pro.taskana.classification.api.models.ClassificationSummary> in (Attachment.java:0)\
    - Method <pro.taskana.task.api.models.AttachmentSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (AttachmentSummary.java:0)\
    - Method <pro.taskana.task.api.models.TaskSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (TaskSummary.java:0)\
  7. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice common.api.exceptions -> \
                Slice common.api -> \
                Slice task.api -> \
                Slice classification.api.exceptions -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Method <pro.taskana.classification.api.ClassificationQuery.customAttributeIn(pro.taskana.classification.api.ClassificationCustomField, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.customAttributeLike(pro.taskana.classification.api.ClassificationCustomField, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.DomainNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.ConcurrencyException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
  2. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
  3. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getTaskService()> has return type <pro.taskana.task.api.TaskService> in (TaskanaEngine.java:0)\
  4. Dependencies of Slice task.api\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.updateTask(pro.taskana.task.api.models.Task)> throws type <pro.taskana.classification.api.exceptions.ClassificationNotFoundException> in (TaskService.java:0)\
  5. Dependencies of Slice classification.api.exceptions\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> has parameter of type <pro.taskana.classification.api.models.Classification> in (ClassificationAlreadyExistException.java:0)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> has parameter of type <pro.taskana.classification.api.models.Classification> in (ClassificationInUseException.java:0)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationAlreadyExistException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationAlreadyExistException.<init>(pro.taskana.classification.api.models.Classification)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationAlreadyExistException.java:20)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getId()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:28)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:33)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:35)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getKey()> in (ClassificationInUseException.java:37)\
    - Constructor <pro.taskana.classification.api.exceptions.ClassificationInUseException.<init>(pro.taskana.classification.api.models.Classification, java.lang.Throwable)> calls method <pro.taskana.classification.api.models.Classification.getDomain()> in (ClassificationInUseException.java:38)\
  6. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.api -> \
                Slice common.api.exceptions -> \
                Slice common.api -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice classification.api.models -> \
                Slice classification.api\
  1. Dependencies of Slice classification.api\
    - Method <pro.taskana.classification.api.ClassificationQuery.customAttributeIn(pro.taskana.classification.api.ClassificationCustomField, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationQuery.customAttributeLike(pro.taskana.classification.api.ClassificationCustomField, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationQuery.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.DomainNotFoundException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.createClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.deleteClassification(java.lang.String, java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.ConcurrencyException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (ClassificationService.java:0)\
    - Method <pro.taskana.classification.api.ClassificationService.updateClassification(pro.taskana.classification.api.models.Classification)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (ClassificationService.java:0)\
  2. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
  3. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getTaskService()> has return type <pro.taskana.task.api.TaskService> in (TaskanaEngine.java:0)\
  4. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  5. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.Attachment.setClassificationSummary(pro.taskana.classification.api.models.ClassificationSummary)> has parameter of type <pro.taskana.classification.api.models.ClassificationSummary> in (Attachment.java:0)\
    - Method <pro.taskana.task.api.models.AttachmentSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (AttachmentSummary.java:0)\
    - Method <pro.taskana.task.api.models.TaskSummary.getClassificationSummary()> has return type <pro.taskana.classification.api.models.ClassificationSummary> in (TaskSummary.java:0)\
  6. Dependencies of Slice classification.api.models\
    - Method <pro.taskana.classification.api.models.Classification.setCustomAttribute(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.Classification.setCustomField(pro.taskana.classification.api.ClassificationCustomField, java.lang.String)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (Classification.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomAttribute(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)\
    - Method <pro.taskana.classification.api.models.ClassificationSummary.getCustomField(pro.taskana.classification.api.ClassificationCustomField)> has parameter of type <pro.taskana.classification.api.ClassificationCustomField> in (ClassificationSummary.java:0)
Cycle detected: Slice classification.internal -> \
                Slice classification.internal.jobs -> \
                Slice common.internal -> \
                Slice classification.internal\
  1. Dependencies of Slice classification.internal\
    - Method <pro.taskana.classification.internal.ClassificationServiceImpl.createJobIfPriorityOrServiceLevelHasChanged(pro.taskana.classification.api.models.Classification, pro.taskana.classification.internal.models.ClassificationImpl)> references class object <pro.taskana.classification.internal.jobs.ClassificationChangedJob> in (ClassificationServiceImpl.java:593)\
  2. Dependencies of Slice classification.internal.jobs\
    - Method <pro.taskana.classification.internal.jobs.ClassificationChangedJob.execute()> calls method <pro.taskana.common.internal.TaskanaEngineImpl.getTaskService()> in (ClassificationChangedJob.java:48)\
    - Method <pro.taskana.classification.internal.jobs.ClassificationChangedJob.scheduleTaskRefreshJobs(java.util.List)> calls method <pro.taskana.common.internal.TaskanaEngineImpl.getConfiguration()> in (ClassificationChangedJob.java:66)\
    - Method <pro.taskana.classification.internal.jobs.ClassificationChangedJob.scheduleTaskRefreshJobs(java.util.List)> calls method <pro.taskana.common.internal.TaskanaEngineImpl.getJobService()> in (ClassificationChangedJob.java:87)\
  3. Dependencies of Slice common.internal\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getClassificationService()> calls constructor <pro.taskana.classification.internal.ClassificationServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.spi.priority.internal.PriorityServiceManager, pro.taskana.classification.internal.ClassificationMapper, pro.taskana.task.internal.TaskMapper)> in (TaskanaEngineImpl.java:169)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getClassificationService()> references class object <pro.taskana.classification.internal.ClassificationMapper> in (TaskanaEngineImpl.java:172)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.classification.internal.ClassificationMapper> in (TaskanaEngineImpl.java:343)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.classification.internal.ClassificationQueryMapper> in (TaskanaEngineImpl.java:350)
Cycle detected: Slice classification.internal -> \
                Slice classification.internal.jobs -> \
                Slice common.internal.jobs -> \
                Slice common.internal -> \
                Slice classification.internal\
  1. Dependencies of Slice classification.internal\
    - Method <pro.taskana.classification.internal.ClassificationServiceImpl.createJobIfPriorityOrServiceLevelHasChanged(pro.taskana.classification.api.models.Classification, pro.taskana.classification.internal.models.ClassificationImpl)> references class object <pro.taskana.classification.internal.jobs.ClassificationChangedJob> in (ClassificationServiceImpl.java:593)\
  2. Dependencies of Slice classification.internal.jobs\
    - Class <pro.taskana.classification.internal.jobs.ClassificationChangedJob> extends class <pro.taskana.common.internal.jobs.AbstractTaskanaJob> in (ClassificationChangedJob.java:0)\
    - Constructor <pro.taskana.classification.internal.jobs.ClassificationChangedJob.<init>(pro.taskana.common.api.TaskanaEngine, pro.taskana.common.internal.transaction.TaskanaTransactionProvider, pro.taskana.common.api.ScheduledJob)> calls constructor <pro.taskana.common.internal.jobs.AbstractTaskanaJob.<init>(pro.taskana.common.api.TaskanaEngine, pro.taskana.common.internal.transaction.TaskanaTransactionProvider, pro.taskana.common.api.ScheduledJob, boolean)> in (ClassificationChangedJob.java:37)\
  3. Dependencies of Slice common.internal.jobs\
    - Field <pro.taskana.common.internal.jobs.AbstractTaskanaJob.taskanaEngineImpl> has type <pro.taskana.common.internal.TaskanaEngineImpl> in (AbstractTaskanaJob.java:0)\
    - Field <pro.taskana.common.internal.jobs.JobRunner.jobService> has type <pro.taskana.common.internal.JobServiceImpl> in (JobRunner.java:0)\
    - Constructor <pro.taskana.common.internal.jobs.AbstractTaskanaJob.<init>(pro.taskana.common.api.TaskanaEngine, pro.taskana.common.internal.transaction.TaskanaTransactionProvider, pro.taskana.common.api.ScheduledJob, boolean)> calls method <pro.taskana.common.internal.TaskanaEngineImpl.getConfiguration()> in (AbstractTaskanaJob.java:32)\
    - Constructor <pro.taskana.common.internal.jobs.AbstractTaskanaJob.<init>(pro.taskana.common.api.TaskanaEngine, pro.taskana.common.internal.transaction.TaskanaTransactionProvider, pro.taskana.common.api.ScheduledJob, boolean)> calls method <pro.taskana.common.internal.TaskanaEngineImpl.getConfiguration()> in (AbstractTaskanaJob.java:33)\
    - Method <pro.taskana.common.internal.jobs.JobRunner.lambda$1()> calls method <pro.taskana.common.internal.JobServiceImpl.findJobsToRun()> in (JobRunner.java:40)\
    - Method <pro.taskana.common.internal.jobs.JobRunner.runJobTransactionally(pro.taskana.common.api.ScheduledJob)> calls method <pro.taskana.common.internal.JobServiceImpl.deleteJob(pro.taskana.common.api.ScheduledJob)> in (JobRunner.java:46)\
    - Method <pro.taskana.common.internal.jobs.JobRunner.lockJob(pro.taskana.common.api.ScheduledJob)> calls method <pro.taskana.common.internal.JobServiceImpl.lockJob(pro.taskana.common.api.ScheduledJob, java.lang.String)> in (JobRunner.java:62)\
    - Method <pro.taskana.common.internal.jobs.AbstractTaskanaJob.scheduleNextJob()> calls method <pro.taskana.common.internal.TaskanaEngineImpl.getJobService()> in (AbstractTaskanaJob.java:78)\
  4. Dependencies of Slice common.internal\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getClassificationService()> calls constructor <pro.taskana.classification.internal.ClassificationServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.spi.priority.internal.PriorityServiceManager, pro.taskana.classification.internal.ClassificationMapper, pro.taskana.task.internal.TaskMapper)> in (TaskanaEngineImpl.java:169)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getClassificationService()> references class object <pro.taskana.classification.internal.ClassificationMapper> in (TaskanaEngineImpl.java:172)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.classification.internal.ClassificationMapper> in (TaskanaEngineImpl.java:343)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.classification.internal.ClassificationQueryMapper> in (TaskanaEngineImpl.java:350)
Cycle detected: Slice classification.internal -> \
                Slice classification.internal.jobs -> \
                Slice task.internal -> \
                Slice common.internal -> \
                Slice classification.internal\
  1. Dependencies of Slice classification.internal\
    - Method <pro.taskana.classification.internal.ClassificationServiceImpl.createJobIfPriorityOrServiceLevelHasChanged(pro.taskana.classification.api.models.Classification, pro.taskana.classification.internal.models.ClassificationImpl)> references class object <pro.taskana.classification.internal.jobs.ClassificationChangedJob> in (ClassificationServiceImpl.java:593)\
  2. Dependencies of Slice classification.internal.jobs\
    - Method <pro.taskana.classification.internal.jobs.ClassificationChangedJob.execute()> calls method <pro.taskana.task.internal.TaskServiceImpl.findTasksIdsAffectedByClassificationChange(java.lang.String)> in (ClassificationChangedJob.java:50)\
  3. Dependencies of Slice task.internal\
    - Constructor <pro.taskana.task.internal.ObjectReferenceQueryImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (ObjectReferenceQueryImpl.java:0)\
    - Constructor <pro.taskana.task.internal.ServiceLevelHandler.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.task.internal.TaskMapper, pro.taskana.task.internal.AttachmentMapper, pro.taskana.task.internal.TaskServiceImpl)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (ServiceLevelHandler.java:0)\
    - Constructor <pro.taskana.task.internal.TaskCommentQueryImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskCommentQueryImpl.java:0)\
    - Constructor <pro.taskana.task.internal.TaskCommentServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.task.internal.TaskCommentMapper, pro.taskana.user.internal.UserMapper, pro.taskana.task.internal.TaskServiceImpl)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskCommentServiceImpl.java:0)\
    - Constructor <pro.taskana.task.internal.TaskQueryImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskQueryImpl.java:0)\
    - Constructor <pro.taskana.task.internal.TaskServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.task.internal.TaskMapper, pro.taskana.task.internal.TaskCommentMapper, pro.taskana.task.internal.AttachmentMapper, pro.taskana.task.internal.ObjectReferenceMapper, pro.taskana.user.internal.UserMapper)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskServiceImpl.java:0)\
    - Constructor <pro.taskana.task.internal.TaskTransferrer.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.task.internal.TaskMapper, pro.taskana.task.internal.TaskServiceImpl)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskTransferrer.java:0)\
    - Field <pro.taskana.task.internal.ObjectReferenceQueryImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (ObjectReferenceQueryImpl.java:0)\
    - Field <pro.taskana.task.internal.ServiceLevelHandler.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (ServiceLevelHandler.java:0)\
    - Field <pro.taskana.task.internal.TaskCommentQueryImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskCommentQueryImpl.java:0)\
    - Field <pro.taskana.task.internal.TaskCommentServiceImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskCommentServiceImpl.java:0)\
    - Field <pro.taskana.task.internal.TaskQueryImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskQueryImpl.java:0)\
    - Field <pro.taskana.task.internal.TaskServiceImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskServiceImpl.java:0)\
    - Field <pro.taskana.task.internal.TaskTransferrer.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskTransferrer.java:0)\
    - Constructor <pro.taskana.task.internal.ServiceLevelHandler.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.task.internal.TaskMapper, pro.taskana.task.internal.AttachmentMapper, pro.taskana.task.internal.TaskServiceImpl)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (ServiceLevelHandler.java:52)\
    - Constructor <pro.taskana.task.internal.TaskTransferrer.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.task.internal.TaskMapper, pro.taskana.task.internal.TaskServiceImpl)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (TaskTransferrer.java:53)\
    - Constructor <pro.taskana.task.internal.TaskTransferrer.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.task.internal.TaskMapper, pro.taskana.task.internal.TaskServiceImpl)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getHistoryEventManager()> in (TaskTransferrer.java:54)\
    - Method <pro.taskana.task.internal.TaskCommentServiceImpl.updateTaskComment(pro.taskana.task.api.models.TaskComment)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (TaskCommentServiceImpl.java:55)\
    - Constructor <pro.taskana.task.internal.TaskCommentQueryImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (TaskCommentQueryImpl.java:61)\
    - Method <pro.taskana.task.internal.TaskCommentServiceImpl.updateTaskComment(pro.taskana.task.api.models.TaskComment)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.openConnection()> in (TaskCommentServiceImpl.java:61)\
    (158 further dependencies have been omitted...)\
  4. Dependencies of Slice common.internal\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getClassificationService()> calls constructor <pro.taskana.classification.internal.ClassificationServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.spi.priority.internal.PriorityServiceManager, pro.taskana.classification.internal.ClassificationMapper, pro.taskana.task.internal.TaskMapper)> in (TaskanaEngineImpl.java:169)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getClassificationService()> references class object <pro.taskana.classification.internal.ClassificationMapper> in (TaskanaEngineImpl.java:172)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.classification.internal.ClassificationMapper> in (TaskanaEngineImpl.java:343)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.classification.internal.ClassificationQueryMapper> in (TaskanaEngineImpl.java:350)
Cycle detected: Slice classification.internal -> \
                Slice classification.internal.jobs -> \
                Slice task.internal -> \
                Slice user.internal -> \
                Slice common.internal -> \
                Slice classification.internal\
  1. Dependencies of Slice classification.internal\
    - Method <pro.taskana.classification.internal.ClassificationServiceImpl.createJobIfPriorityOrServiceLevelHasChanged(pro.taskana.classification.api.models.Classification, pro.taskana.classification.internal.models.ClassificationImpl)> references class object <pro.taskana.classification.internal.jobs.ClassificationChangedJob> in (ClassificationServiceImpl.java:593)\
  2. Dependencies of Slice classification.internal.jobs\
    - Method <pro.taskana.classification.internal.jobs.ClassificationChangedJob.execute()> calls method <pro.taskana.task.internal.TaskServiceImpl.findTasksIdsAffectedByClassificationChange(java.lang.String)> in (ClassificationChangedJob.java:50)\
  3. Dependencies of Slice task.internal\
    - Constructor <pro.taskana.task.internal.TaskCommentServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.task.internal.TaskCommentMapper, pro.taskana.user.internal.UserMapper, pro.taskana.task.internal.TaskServiceImpl)> has parameter of type <pro.taskana.user.internal.UserMapper> in (TaskCommentServiceImpl.java:0)\
    - Constructor <pro.taskana.task.internal.TaskServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.task.internal.TaskMapper, pro.taskana.task.internal.TaskCommentMapper, pro.taskana.task.internal.AttachmentMapper, pro.taskana.task.internal.ObjectReferenceMapper, pro.taskana.user.internal.UserMapper)> has parameter of type <pro.taskana.user.internal.UserMapper> in (TaskServiceImpl.java:0)\
    - Field <pro.taskana.task.internal.TaskCommentServiceImpl.userMapper> has type <pro.taskana.user.internal.UserMapper> in (TaskCommentServiceImpl.java:0)\
    - Field <pro.taskana.task.internal.TaskServiceImpl.userMapper> has type <pro.taskana.user.internal.UserMapper> in (TaskServiceImpl.java:0)\
    - Method <pro.taskana.task.internal.TaskCommentServiceImpl.getTaskComment(java.lang.String)> calls method <pro.taskana.user.internal.UserMapper.findById(java.lang.String)> in (TaskCommentServiceImpl.java:191)\
    - Method <pro.taskana.task.internal.TaskServiceImpl.getTask(java.lang.String)> calls method <pro.taskana.user.internal.UserMapper.findById(java.lang.String)> in (TaskServiceImpl.java:350)\
  4. Dependencies of Slice user.internal\
    - Constructor <pro.taskana.user.internal.UserServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.user.internal.UserMapper)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (UserServiceImpl.java:0)\
    - Field <pro.taskana.user.internal.UserServiceImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (UserServiceImpl.java:0)\
    - Method <pro.taskana.user.internal.UserServiceImpl.getUser(java.lang.String)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.executeInDatabaseConnection(java.util.function.Supplier)> in (UserServiceImpl.java:35)\
    - Method <pro.taskana.user.internal.UserServiceImpl.createUser(pro.taskana.user.api.models.User)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (UserServiceImpl.java:46)\
    - Method <pro.taskana.user.internal.UserServiceImpl.updateUser(pro.taskana.user.api.models.User)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (UserServiceImpl.java:59)\
    - Method <pro.taskana.user.internal.UserServiceImpl.updateUser(pro.taskana.user.api.models.User)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.executeInDatabaseConnection(java.lang.Runnable)> in (UserServiceImpl.java:62)\
    - Method <pro.taskana.user.internal.UserServiceImpl.deleteUser(java.lang.String)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (UserServiceImpl.java:72)\
    - Method <pro.taskana.user.internal.UserServiceImpl.deleteUser(java.lang.String)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.executeInDatabaseConnection(java.lang.Runnable)> in (UserServiceImpl.java:75)\
    - Method <pro.taskana.user.internal.UserServiceImpl.insertIntoDatabase(pro.taskana.user.api.models.User)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.openConnection()> in (UserServiceImpl.java:83)\
    - Method <pro.taskana.user.internal.UserServiceImpl.insertIntoDatabase(pro.taskana.user.api.models.User)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.returnConnection()> in (UserServiceImpl.java:88)\
  5. Dependencies of Slice common.internal\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getClassificationService()> calls constructor <pro.taskana.classification.internal.ClassificationServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.spi.priority.internal.PriorityServiceManager, pro.taskana.classification.internal.ClassificationMapper, pro.taskana.task.internal.TaskMapper)> in (TaskanaEngineImpl.java:169)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getClassificationService()> references class object <pro.taskana.classification.internal.ClassificationMapper> in (TaskanaEngineImpl.java:172)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.classification.internal.ClassificationMapper> in (TaskanaEngineImpl.java:343)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.classification.internal.ClassificationQueryMapper> in (TaskanaEngineImpl.java:350)
Cycle detected: Slice classification.internal -> \
                Slice classification.internal.jobs -> \
                Slice task.internal -> \
                Slice workbasket.internal -> \
                Slice common.internal -> \
                Slice classification.internal\
  1. Dependencies of Slice classification.internal\
    - Method <pro.taskana.classification.internal.ClassificationServiceImpl.createJobIfPriorityOrServiceLevelHasChanged(pro.taskana.classification.api.models.Classification, pro.taskana.classification.internal.models.ClassificationImpl)> references class object <pro.taskana.classification.internal.jobs.ClassificationChangedJob> in (ClassificationServiceImpl.java:593)\
  2. Dependencies of Slice classification.internal.jobs\
    - Method <pro.taskana.classification.internal.jobs.ClassificationChangedJob.execute()> calls method <pro.taskana.task.internal.TaskServiceImpl.findTasksIdsAffectedByClassificationChange(java.lang.String)> in (ClassificationChangedJob.java:50)\
  3. Dependencies of Slice task.internal\
    - Method <pro.taskana.task.internal.TaskTransferrer.getSourceWorkbasketIdsWithTransferPermission(java.util.List)> calls method <pro.taskana.workbasket.internal.WorkbasketQueryImpl.setUsedToAugmentTasks(boolean)> in (TaskTransferrer.java:230)\
    - Method <pro.taskana.task.internal.TaskTransferrer.getSourceWorkbasketIdsWithTransferPermission(java.util.List)> calls method <pro.taskana.workbasket.internal.WorkbasketQueryImpl.callerHasPermission(pro.taskana.workbasket.api.WorkbasketPermission)> in (TaskTransferrer.java:239)\
    - Method <pro.taskana.task.internal.TaskServiceImpl.getTask(java.lang.String)> calls method <pro.taskana.workbasket.internal.WorkbasketQueryImpl.setUsedToAugmentTasks(boolean)> in (TaskServiceImpl.java:311)\
    - Method <pro.taskana.task.internal.TaskServiceImpl.getTask(java.lang.String)> calls method <pro.taskana.workbasket.internal.WorkbasketQueryImpl.idIn([Ljava.lang.String;)> in (TaskServiceImpl.java:313)\
    - Method <pro.taskana.task.internal.TaskCommentQueryImpl.setupAccessIds()> calls method <pro.taskana.workbasket.internal.WorkbasketQueryImpl.lowercaseAccessIds([Ljava.lang.String;)> in (TaskCommentQueryImpl.java:340)\
    - Method <pro.taskana.task.internal.TaskQueryImpl.setupAccessIds()> calls method <pro.taskana.workbasket.internal.WorkbasketQueryImpl.lowercaseAccessIds([Ljava.lang.String;)> in (TaskQueryImpl.java:2168)\
  4. Dependencies of Slice workbasket.internal\
    - Constructor <pro.taskana.workbasket.internal.AbstractWorkbasketAccessItemQueryImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (AbstractWorkbasketAccessItemQueryImpl.java:0)\
    - Constructor <pro.taskana.workbasket.internal.WorkbasketAccessItemQueryImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (WorkbasketAccessItemQueryImpl.java:0)\
    - Constructor <pro.taskana.workbasket.internal.WorkbasketQueryImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (WorkbasketQueryImpl.java:0)\
    - Constructor <pro.taskana.workbasket.internal.WorkbasketServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.spi.history.internal.HistoryEventManager, pro.taskana.workbasket.internal.WorkbasketMapper, pro.taskana.workbasket.internal.DistributionTargetMapper, pro.taskana.workbasket.internal.WorkbasketAccessMapper)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (WorkbasketServiceImpl.java:0)\
    - Field <pro.taskana.workbasket.internal.AbstractWorkbasketAccessItemQueryImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (AbstractWorkbasketAccessItemQueryImpl.java:0)\
    - Field <pro.taskana.workbasket.internal.WorkbasketAccessItemQueryImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (WorkbasketAccessItemQueryImpl.java:0)\
    - Field <pro.taskana.workbasket.internal.WorkbasketQueryImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (WorkbasketQueryImpl.java:0)\
    - Field <pro.taskana.workbasket.internal.WorkbasketServiceImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (WorkbasketServiceImpl.java:0)\
    - Method <pro.taskana.workbasket.internal.AbstractWorkbasketAccessItemQueryImpl.list()> calls method <pro.taskana.common.internal.InternalTaskanaEngine.executeInDatabaseConnection(java.util.function.Supplier)> in (AbstractWorkbasketAccessItemQueryImpl.java:79)\
    - Method <pro.taskana.workbasket.internal.AbstractWorkbasketAccessItemQueryImpl.lambda$0()> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getSqlSession()> in (AbstractWorkbasketAccessItemQueryImpl.java:80)\
    - Method <pro.taskana.workbasket.internal.AbstractWorkbasketAccessItemQueryImpl.list(int, int)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.openConnection()> in (AbstractWorkbasketAccessItemQueryImpl.java:87)\
    - Method <pro.taskana.workbasket.internal.WorkbasketServiceImpl.getWorkbasket(java.lang.String)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.openConnection()> in (WorkbasketServiceImpl.java:88)\
    - Method <pro.taskana.workbasket.internal.AbstractWorkbasketAccessItemQueryImpl.list(int, int)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getSqlSession()> in (AbstractWorkbasketAccessItemQueryImpl.java:90)\
    - Method <pro.taskana.workbasket.internal.WorkbasketServiceImpl.getWorkbasket(java.lang.String)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (WorkbasketServiceImpl.java:96)\
    - Method <pro.taskana.workbasket.internal.WorkbasketAccessItemQueryImpl.list()> calls method <pro.taskana.common.internal.InternalTaskanaEngine.executeInDatabaseConnection(java.util.function.Supplier)> in (WorkbasketAccessItemQueryImpl.java:102)\
    - Method <pro.taskana.workbasket.internal.AbstractWorkbasketAccessItemQueryImpl.list(int, int)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.returnConnection()> in (AbstractWorkbasketAccessItemQueryImpl.java:103)\
    - Method <pro.taskana.workbasket.internal.WorkbasketAccessItemQueryImpl.lambda$0()> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getSqlSession()> in (WorkbasketAccessItemQueryImpl.java:103)\
    - Method <pro.taskana.workbasket.internal.WorkbasketServiceImpl.getWorkbasket(java.lang.String)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.returnConnection()> in (WorkbasketServiceImpl.java:106)\
    - Method <pro.taskana.workbasket.internal.WorkbasketAccessItemQueryImpl.list(int, int)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.openConnection()> in (WorkbasketAccessItemQueryImpl.java:110)\
    - Method <pro.taskana.workbasket.internal.AbstractWorkbasketAccessItemQueryImpl.listValues(pro.taskana.workbasket.api.AccessItemQueryColumnName, pro.taskana.common.api.BaseQuery$SortDirection)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.openConnection()> in (AbstractWorkbasketAccessItemQueryImpl.java:112)\
    (123 further dependencies have been omitted...)\
  5. Dependencies of Slice common.internal\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getClassificationService()> calls constructor <pro.taskana.classification.internal.ClassificationServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.spi.priority.internal.PriorityServiceManager, pro.taskana.classification.internal.ClassificationMapper, pro.taskana.task.internal.TaskMapper)> in (TaskanaEngineImpl.java:169)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getClassificationService()> references class object <pro.taskana.classification.internal.ClassificationMapper> in (TaskanaEngineImpl.java:172)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.classification.internal.ClassificationMapper> in (TaskanaEngineImpl.java:343)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.classification.internal.ClassificationQueryMapper> in (TaskanaEngineImpl.java:350)
Cycle detected: Slice classification.internal -> \
                Slice classification.internal.jobs -> \
                Slice task.internal.jobs -> \
                Slice common.internal -> \
                Slice classification.internal\
  1. Dependencies of Slice classification.internal\
    - Method <pro.taskana.classification.internal.ClassificationServiceImpl.createJobIfPriorityOrServiceLevelHasChanged(pro.taskana.classification.api.models.Classification, pro.taskana.classification.internal.models.ClassificationImpl)> references class object <pro.taskana.classification.internal.jobs.ClassificationChangedJob> in (ClassificationServiceImpl.java:593)\
  2. Dependencies of Slice classification.internal.jobs\
    - Method <pro.taskana.classification.internal.jobs.ClassificationChangedJob.scheduleTaskRefreshJobs(java.util.List)> references class object <pro.taskana.task.internal.jobs.TaskRefreshJob> in (ClassificationChangedJob.java:85)\
  3. Dependencies of Slice task.internal.jobs\
    - Method <pro.taskana.task.internal.jobs.TaskRefreshJob.execute()> calls method <pro.taskana.common.internal.TaskanaEngineImpl.getTaskService()> in (TaskRefreshJob.java:42)\
    - Method <pro.taskana.task.internal.jobs.TaskUpdatePriorityJob.initializeSchedule(pro.taskana.common.api.TaskanaEngine)> calls method <pro.taskana.common.internal.JobServiceImpl.deleteJobs(java.lang.String)> in (TaskUpdatePriorityJob.java:73)\
    - Method <pro.taskana.task.internal.jobs.TaskCleanupJob.initializeSchedule(pro.taskana.common.api.TaskanaEngine)> calls method <pro.taskana.common.internal.JobServiceImpl.deleteJobs(java.lang.String)> in (TaskCleanupJob.java:78)\
    - Method <pro.taskana.task.internal.jobs.TaskCleanupJob.getTasksCompletedBefore(java.time.Instant)> calls method <pro.taskana.common.internal.TaskanaEngineImpl.getTaskService()> in (TaskCleanupJob.java:91)\
    - Method <pro.taskana.task.internal.jobs.TaskCleanupJob.lambda$1(java.util.Map, java.util.Map, pro.taskana.task.api.models.TaskSummary)> calls method <pro.taskana.common.internal.TaskanaEngineImpl.getTaskService()> in (TaskCleanupJob.java:107)\
    - Method <pro.taskana.task.internal.jobs.TaskCleanupJob.deleteTasks(java.util.List)> calls method <pro.taskana.common.internal.TaskanaEngineImpl.getTaskService()> in (TaskCleanupJob.java:154)\
  4. Dependencies of Slice common.internal\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getClassificationService()> calls constructor <pro.taskana.classification.internal.ClassificationServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.spi.priority.internal.PriorityServiceManager, pro.taskana.classification.internal.ClassificationMapper, pro.taskana.task.internal.TaskMapper)> in (TaskanaEngineImpl.java:169)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getClassificationService()> references class object <pro.taskana.classification.internal.ClassificationMapper> in (TaskanaEngineImpl.java:172)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.classification.internal.ClassificationMapper> in (TaskanaEngineImpl.java:343)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.classification.internal.ClassificationQueryMapper> in (TaskanaEngineImpl.java:350)
Cycle detected: Slice classification.internal -> \
                Slice classification.internal.jobs -> \
                Slice task.internal.jobs -> \
                Slice common.internal.jobs -> \
                Slice common.internal -> \
                Slice classification.internal\
  1. Dependencies of Slice classification.internal\
    - Method <pro.taskana.classification.internal.ClassificationServiceImpl.createJobIfPriorityOrServiceLevelHasChanged(pro.taskana.classification.api.models.Classification, pro.taskana.classification.internal.models.ClassificationImpl)> references class object <pro.taskana.classification.internal.jobs.ClassificationChangedJob> in (ClassificationServiceImpl.java:593)\
  2. Dependencies of Slice classification.internal.jobs\
    - Method <pro.taskana.classification.internal.jobs.ClassificationChangedJob.scheduleTaskRefreshJobs(java.util.List)> references class object <pro.taskana.task.internal.jobs.TaskRefreshJob> in (ClassificationChangedJob.java:85)\
  3. Dependencies of Slice task.internal.jobs\
    - Class <pro.taskana.task.internal.jobs.TaskCleanupJob> extends class <pro.taskana.common.internal.jobs.AbstractTaskanaJob> in (TaskCleanupJob.java:0)\
    - Class <pro.taskana.task.internal.jobs.TaskRefreshJob> extends class <pro.taskana.common.internal.jobs.AbstractTaskanaJob> in (TaskRefreshJob.java:0)\
    - Class <pro.taskana.task.internal.jobs.TaskUpdatePriorityJob> extends class <pro.taskana.common.internal.jobs.AbstractTaskanaJob> in (TaskUpdatePriorityJob.java:0)\
    - Constructor <pro.taskana.task.internal.jobs.TaskRefreshJob.<init>(pro.taskana.common.api.TaskanaEngine, pro.taskana.common.internal.transaction.TaskanaTransactionProvider, pro.taskana.common.api.ScheduledJob)> calls constructor <pro.taskana.common.internal.jobs.AbstractTaskanaJob.<init>(pro.taskana.common.api.TaskanaEngine, pro.taskana.common.internal.transaction.TaskanaTransactionProvider, pro.taskana.common.api.ScheduledJob, boolean)> in (TaskRefreshJob.java:30)\
    - Constructor <pro.taskana.task.internal.jobs.TaskUpdatePriorityJob.<init>(pro.taskana.common.api.TaskanaEngine, pro.taskana.common.internal.transaction.TaskanaTransactionProvider, pro.taskana.common.api.ScheduledJob)> calls constructor <pro.taskana.common.internal.jobs.AbstractTaskanaJob.<init>(pro.taskana.common.api.TaskanaEngine, pro.taskana.common.internal.transaction.TaskanaTransactionProvider, pro.taskana.common.api.ScheduledJob, boolean)> in (TaskUpdatePriorityJob.java:32)\
    - Constructor <pro.taskana.task.internal.jobs.TaskCleanupJob.<init>(pro.taskana.common.api.TaskanaEngine, pro.taskana.common.internal.transaction.TaskanaTransactionProvider, pro.taskana.common.api.ScheduledJob)> calls constructor <pro.taskana.common.internal.jobs.AbstractTaskanaJob.<init>(pro.taskana.common.api.TaskanaEngine, pro.taskana.common.internal.transaction.TaskanaTransactionProvider, pro.taskana.common.api.ScheduledJob, boolean)> in (TaskCleanupJob.java:44)\
  4. Dependencies of Slice common.internal.jobs\
    - Field <pro.taskana.common.internal.jobs.AbstractTaskanaJob.taskanaEngineImpl> has type <pro.taskana.common.internal.TaskanaEngineImpl> in (AbstractTaskanaJob.java:0)\
    - Field <pro.taskana.common.internal.jobs.JobRunner.jobService> has type <pro.taskana.common.internal.JobServiceImpl> in (JobRunner.java:0)\
    - Constructor <pro.taskana.common.internal.jobs.AbstractTaskanaJob.<init>(pro.taskana.common.api.TaskanaEngine, pro.taskana.common.internal.transaction.TaskanaTransactionProvider, pro.taskana.common.api.ScheduledJob, boolean)> calls method <pro.taskana.common.internal.TaskanaEngineImpl.getConfiguration()> in (AbstractTaskanaJob.java:32)\
    - Constructor <pro.taskana.common.internal.jobs.AbstractTaskanaJob.<init>(pro.taskana.common.api.TaskanaEngine, pro.taskana.common.internal.transaction.TaskanaTransactionProvider, pro.taskana.common.api.ScheduledJob, boolean)> calls method <pro.taskana.common.internal.TaskanaEngineImpl.getConfiguration()> in (AbstractTaskanaJob.java:33)\
    - Method <pro.taskana.common.internal.jobs.JobRunner.lambda$1()> calls method <pro.taskana.common.internal.JobServiceImpl.findJobsToRun()> in (JobRunner.java:40)\
    - Method <pro.taskana.common.internal.jobs.JobRunner.runJobTransactionally(pro.taskana.common.api.ScheduledJob)> calls method <pro.taskana.common.internal.JobServiceImpl.deleteJob(pro.taskana.common.api.ScheduledJob)> in (JobRunner.java:46)\
    - Method <pro.taskana.common.internal.jobs.JobRunner.lockJob(pro.taskana.common.api.ScheduledJob)> calls method <pro.taskana.common.internal.JobServiceImpl.lockJob(pro.taskana.common.api.ScheduledJob, java.lang.String)> in (JobRunner.java:62)\
    - Method <pro.taskana.common.internal.jobs.AbstractTaskanaJob.scheduleNextJob()> calls method <pro.taskana.common.internal.TaskanaEngineImpl.getJobService()> in (AbstractTaskanaJob.java:78)\
  5. Dependencies of Slice common.internal\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getClassificationService()> calls constructor <pro.taskana.classification.internal.ClassificationServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.spi.priority.internal.PriorityServiceManager, pro.taskana.classification.internal.ClassificationMapper, pro.taskana.task.internal.TaskMapper)> in (TaskanaEngineImpl.java:169)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getClassificationService()> references class object <pro.taskana.classification.internal.ClassificationMapper> in (TaskanaEngineImpl.java:172)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.classification.internal.ClassificationMapper> in (TaskanaEngineImpl.java:343)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.classification.internal.ClassificationQueryMapper> in (TaskanaEngineImpl.java:350)
Cycle detected: Slice classification.internal -> \
                Slice classification.internal.jobs -> \
                Slice task.internal.jobs -> \
                Slice task.internal -> \
                Slice common.internal -> \
                Slice classification.internal\
  1. Dependencies of Slice classification.internal\
    - Method <pro.taskana.classification.internal.ClassificationServiceImpl.createJobIfPriorityOrServiceLevelHasChanged(pro.taskana.classification.api.models.Classification, pro.taskana.classification.internal.models.ClassificationImpl)> references class object <pro.taskana.classification.internal.jobs.ClassificationChangedJob> in (ClassificationServiceImpl.java:593)\
  2. Dependencies of Slice classification.internal.jobs\
    - Method <pro.taskana.classification.internal.jobs.ClassificationChangedJob.scheduleTaskRefreshJobs(java.util.List)> references class object <pro.taskana.task.internal.jobs.TaskRefreshJob> in (ClassificationChangedJob.java:85)\
  3. Dependencies of Slice task.internal.jobs\
    - Method <pro.taskana.task.internal.jobs.TaskRefreshJob.execute()> calls method <pro.taskana.task.internal.TaskServiceImpl.refreshPriorityAndDueDatesOfTasksOnClassificationUpdate(java.util.List, boolean, boolean)> in (TaskRefreshJob.java:43)\
  4. Dependencies of Slice task.internal\
    - Constructor <pro.taskana.task.internal.ObjectReferenceQueryImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (ObjectReferenceQueryImpl.java:0)\
    - Constructor <pro.taskana.task.internal.ServiceLevelHandler.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.task.internal.TaskMapper, pro.taskana.task.internal.AttachmentMapper, pro.taskana.task.internal.TaskServiceImpl)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (ServiceLevelHandler.java:0)\
    - Constructor <pro.taskana.task.internal.TaskCommentQueryImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskCommentQueryImpl.java:0)\
    - Constructor <pro.taskana.task.internal.TaskCommentServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.task.internal.TaskCommentMapper, pro.taskana.user.internal.UserMapper, pro.taskana.task.internal.TaskServiceImpl)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskCommentServiceImpl.java:0)\
    - Constructor <pro.taskana.task.internal.TaskQueryImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskQueryImpl.java:0)\
    - Constructor <pro.taskana.task.internal.TaskServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.task.internal.TaskMapper, pro.taskana.task.internal.TaskCommentMapper, pro.taskana.task.internal.AttachmentMapper, pro.taskana.task.internal.ObjectReferenceMapper, pro.taskana.user.internal.UserMapper)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskServiceImpl.java:0)\
    - Constructor <pro.taskana.task.internal.TaskTransferrer.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.task.internal.TaskMapper, pro.taskana.task.internal.TaskServiceImpl)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskTransferrer.java:0)\
    - Field <pro.taskana.task.internal.ObjectReferenceQueryImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (ObjectReferenceQueryImpl.java:0)\
    - Field <pro.taskana.task.internal.ServiceLevelHandler.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (ServiceLevelHandler.java:0)\
    - Field <pro.taskana.task.internal.TaskCommentQueryImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskCommentQueryImpl.java:0)\
    - Field <pro.taskana.task.internal.TaskCommentServiceImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskCommentServiceImpl.java:0)\
    - Field <pro.taskana.task.internal.TaskQueryImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskQueryImpl.java:0)\
    - Field <pro.taskana.task.internal.TaskServiceImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskServiceImpl.java:0)\
    - Field <pro.taskana.task.internal.TaskTransferrer.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskTransferrer.java:0)\
    - Constructor <pro.taskana.task.internal.ServiceLevelHandler.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.task.internal.TaskMapper, pro.taskana.task.internal.AttachmentMapper, pro.taskana.task.internal.TaskServiceImpl)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (ServiceLevelHandler.java:52)\
    - Constructor <pro.taskana.task.internal.TaskTransferrer.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.task.internal.TaskMapper, pro.taskana.task.internal.TaskServiceImpl)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (TaskTransferrer.java:53)\
    - Constructor <pro.taskana.task.internal.TaskTransferrer.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.task.internal.TaskMapper, pro.taskana.task.internal.TaskServiceImpl)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getHistoryEventManager()> in (TaskTransferrer.java:54)\
    - Method <pro.taskana.task.internal.TaskCommentServiceImpl.updateTaskComment(pro.taskana.task.api.models.TaskComment)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (TaskCommentServiceImpl.java:55)\
    - Constructor <pro.taskana.task.internal.TaskCommentQueryImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (TaskCommentQueryImpl.java:61)\
    - Method <pro.taskana.task.internal.TaskCommentServiceImpl.updateTaskComment(pro.taskana.task.api.models.TaskComment)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.openConnection()> in (TaskCommentServiceImpl.java:61)\
    (158 further dependencies have been omitted...)\
  5. Dependencies of Slice common.internal\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getClassificationService()> calls constructor <pro.taskana.classification.internal.ClassificationServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.spi.priority.internal.PriorityServiceManager, pro.taskana.classification.internal.ClassificationMapper, pro.taskana.task.internal.TaskMapper)> in (TaskanaEngineImpl.java:169)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getClassificationService()> references class object <pro.taskana.classification.internal.ClassificationMapper> in (TaskanaEngineImpl.java:172)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.classification.internal.ClassificationMapper> in (TaskanaEngineImpl.java:343)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.classification.internal.ClassificationQueryMapper> in (TaskanaEngineImpl.java:350)
Cycle detected: Slice classification.internal -> \
                Slice classification.internal.jobs -> \
                Slice task.internal.jobs -> \
                Slice task.internal -> \
                Slice user.internal -> \
                Slice common.internal -> \
                Slice classification.internal\
  1. Dependencies of Slice classification.internal\
    - Method <pro.taskana.classification.internal.ClassificationServiceImpl.createJobIfPriorityOrServiceLevelHasChanged(pro.taskana.classification.api.models.Classification, pro.taskana.classification.internal.models.ClassificationImpl)> references class object <pro.taskana.classification.internal.jobs.ClassificationChangedJob> in (ClassificationServiceImpl.java:593)\
  2. Dependencies of Slice classification.internal.jobs\
    - Method <pro.taskana.classification.internal.jobs.ClassificationChangedJob.scheduleTaskRefreshJobs(java.util.List)> references class object <pro.taskana.task.internal.jobs.TaskRefreshJob> in (ClassificationChangedJob.java:85)\
  3. Dependencies of Slice task.internal.jobs\
    - Method <pro.taskana.task.internal.jobs.TaskRefreshJob.execute()> calls method <pro.taskana.task.internal.TaskServiceImpl.refreshPriorityAndDueDatesOfTasksOnClassificationUpdate(java.util.List, boolean, boolean)> in (TaskRefreshJob.java:43)\
  4. Dependencies of Slice task.internal\
    - Constructor <pro.taskana.task.internal.TaskCommentServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.task.internal.TaskCommentMapper, pro.taskana.user.internal.UserMapper, pro.taskana.task.internal.TaskServiceImpl)> has parameter of type <pro.taskana.user.internal.UserMapper> in (TaskCommentServiceImpl.java:0)\
    - Constructor <pro.taskana.task.internal.TaskServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.task.internal.TaskMapper, pro.taskana.task.internal.TaskCommentMapper, pro.taskana.task.internal.AttachmentMapper, pro.taskana.task.internal.ObjectReferenceMapper, pro.taskana.user.internal.UserMapper)> has parameter of type <pro.taskana.user.internal.UserMapper> in (TaskServiceImpl.java:0)\
    - Field <pro.taskana.task.internal.TaskCommentServiceImpl.userMapper> has type <pro.taskana.user.internal.UserMapper> in (TaskCommentServiceImpl.java:0)\
    - Field <pro.taskana.task.internal.TaskServiceImpl.userMapper> has type <pro.taskana.user.internal.UserMapper> in (TaskServiceImpl.java:0)\
    - Method <pro.taskana.task.internal.TaskCommentServiceImpl.getTaskComment(java.lang.String)> calls method <pro.taskana.user.internal.UserMapper.findById(java.lang.String)> in (TaskCommentServiceImpl.java:191)\
    - Method <pro.taskana.task.internal.TaskServiceImpl.getTask(java.lang.String)> calls method <pro.taskana.user.internal.UserMapper.findById(java.lang.String)> in (TaskServiceImpl.java:350)\
  5. Dependencies of Slice user.internal\
    - Constructor <pro.taskana.user.internal.UserServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.user.internal.UserMapper)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (UserServiceImpl.java:0)\
    - Field <pro.taskana.user.internal.UserServiceImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (UserServiceImpl.java:0)\
    - Method <pro.taskana.user.internal.UserServiceImpl.getUser(java.lang.String)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.executeInDatabaseConnection(java.util.function.Supplier)> in (UserServiceImpl.java:35)\
    - Method <pro.taskana.user.internal.UserServiceImpl.createUser(pro.taskana.user.api.models.User)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (UserServiceImpl.java:46)\
    - Method <pro.taskana.user.internal.UserServiceImpl.updateUser(pro.taskana.user.api.models.User)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (UserServiceImpl.java:59)\
    - Method <pro.taskana.user.internal.UserServiceImpl.updateUser(pro.taskana.user.api.models.User)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.executeInDatabaseConnection(java.lang.Runnable)> in (UserServiceImpl.java:62)\
    - Method <pro.taskana.user.internal.UserServiceImpl.deleteUser(java.lang.String)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (UserServiceImpl.java:72)\
    - Method <pro.taskana.user.internal.UserServiceImpl.deleteUser(java.lang.String)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.executeInDatabaseConnection(java.lang.Runnable)> in (UserServiceImpl.java:75)\
    - Method <pro.taskana.user.internal.UserServiceImpl.insertIntoDatabase(pro.taskana.user.api.models.User)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.openConnection()> in (UserServiceImpl.java:83)\
    - Method <pro.taskana.user.internal.UserServiceImpl.insertIntoDatabase(pro.taskana.user.api.models.User)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.returnConnection()> in (UserServiceImpl.java:88)\
  6. Dependencies of Slice common.internal\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getClassificationService()> calls constructor <pro.taskana.classification.internal.ClassificationServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.spi.priority.internal.PriorityServiceManager, pro.taskana.classification.internal.ClassificationMapper, pro.taskana.task.internal.TaskMapper)> in (TaskanaEngineImpl.java:169)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getClassificationService()> references class object <pro.taskana.classification.internal.ClassificationMapper> in (TaskanaEngineImpl.java:172)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.classification.internal.ClassificationMapper> in (TaskanaEngineImpl.java:343)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.classification.internal.ClassificationQueryMapper> in (TaskanaEngineImpl.java:350)
Cycle detected: Slice classification.internal -> \
                Slice classification.internal.jobs -> \
                Slice task.internal.jobs -> \
                Slice task.internal -> \
                Slice workbasket.internal -> \
                Slice common.internal -> \
                Slice classification.internal\
  1. Dependencies of Slice classification.internal\
    - Method <pro.taskana.classification.internal.ClassificationServiceImpl.createJobIfPriorityOrServiceLevelHasChanged(pro.taskana.classification.api.models.Classification, pro.taskana.classification.internal.models.ClassificationImpl)> references class object <pro.taskana.classification.internal.jobs.ClassificationChangedJob> in (ClassificationServiceImpl.java:593)\
  2. Dependencies of Slice classification.internal.jobs\
    - Method <pro.taskana.classification.internal.jobs.ClassificationChangedJob.scheduleTaskRefreshJobs(java.util.List)> references class object <pro.taskana.task.internal.jobs.TaskRefreshJob> in (ClassificationChangedJob.java:85)\
  3. Dependencies of Slice task.internal.jobs\
    - Method <pro.taskana.task.internal.jobs.TaskRefreshJob.execute()> calls method <pro.taskana.task.internal.TaskServiceImpl.refreshPriorityAndDueDatesOfTasksOnClassificationUpdate(java.util.List, boolean, boolean)> in (TaskRefreshJob.java:43)\
  4. Dependencies of Slice task.internal\
    - Method <pro.taskana.task.internal.TaskTransferrer.getSourceWorkbasketIdsWithTransferPermission(java.util.List)> calls method <pro.taskana.workbasket.internal.WorkbasketQueryImpl.setUsedToAugmentTasks(boolean)> in (TaskTransferrer.java:230)\
    - Method <pro.taskana.task.internal.TaskTransferrer.getSourceWorkbasketIdsWithTransferPermission(java.util.List)> calls method <pro.taskana.workbasket.internal.WorkbasketQueryImpl.callerHasPermission(pro.taskana.workbasket.api.WorkbasketPermission)> in (TaskTransferrer.java:239)\
    - Method <pro.taskana.task.internal.TaskServiceImpl.getTask(java.lang.String)> calls method <pro.taskana.workbasket.internal.WorkbasketQueryImpl.setUsedToAugmentTasks(boolean)> in (TaskServiceImpl.java:311)\
    - Method <pro.taskana.task.internal.TaskServiceImpl.getTask(java.lang.String)> calls method <pro.taskana.workbasket.internal.WorkbasketQueryImpl.idIn([Ljava.lang.String;)> in (TaskServiceImpl.java:313)\
    - Method <pro.taskana.task.internal.TaskCommentQueryImpl.setupAccessIds()> calls method <pro.taskana.workbasket.internal.WorkbasketQueryImpl.lowercaseAccessIds([Ljava.lang.String;)> in (TaskCommentQueryImpl.java:340)\
    - Method <pro.taskana.task.internal.TaskQueryImpl.setupAccessIds()> calls method <pro.taskana.workbasket.internal.WorkbasketQueryImpl.lowercaseAccessIds([Ljava.lang.String;)> in (TaskQueryImpl.java:2168)\
  5. Dependencies of Slice workbasket.internal\
    - Constructor <pro.taskana.workbasket.internal.AbstractWorkbasketAccessItemQueryImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (AbstractWorkbasketAccessItemQueryImpl.java:0)\
    - Constructor <pro.taskana.workbasket.internal.WorkbasketAccessItemQueryImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (WorkbasketAccessItemQueryImpl.java:0)\
    - Constructor <pro.taskana.workbasket.internal.WorkbasketQueryImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (WorkbasketQueryImpl.java:0)\
    - Constructor <pro.taskana.workbasket.internal.WorkbasketServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.spi.history.internal.HistoryEventManager, pro.taskana.workbasket.internal.WorkbasketMapper, pro.taskana.workbasket.internal.DistributionTargetMapper, pro.taskana.workbasket.internal.WorkbasketAccessMapper)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (WorkbasketServiceImpl.java:0)\
    - Field <pro.taskana.workbasket.internal.AbstractWorkbasketAccessItemQueryImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (AbstractWorkbasketAccessItemQueryImpl.java:0)\
    - Field <pro.taskana.workbasket.internal.WorkbasketAccessItemQueryImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (WorkbasketAccessItemQueryImpl.java:0)\
    - Field <pro.taskana.workbasket.internal.WorkbasketQueryImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (WorkbasketQueryImpl.java:0)\
    - Field <pro.taskana.workbasket.internal.WorkbasketServiceImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (WorkbasketServiceImpl.java:0)\
    - Method <pro.taskana.workbasket.internal.AbstractWorkbasketAccessItemQueryImpl.list()> calls method <pro.taskana.common.internal.InternalTaskanaEngine.executeInDatabaseConnection(java.util.function.Supplier)> in (AbstractWorkbasketAccessItemQueryImpl.java:79)\
    - Method <pro.taskana.workbasket.internal.AbstractWorkbasketAccessItemQueryImpl.lambda$0()> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getSqlSession()> in (AbstractWorkbasketAccessItemQueryImpl.java:80)\
    - Method <pro.taskana.workbasket.internal.AbstractWorkbasketAccessItemQueryImpl.list(int, int)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.openConnection()> in (AbstractWorkbasketAccessItemQueryImpl.java:87)\
    - Method <pro.taskana.workbasket.internal.WorkbasketServiceImpl.getWorkbasket(java.lang.String)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.openConnection()> in (WorkbasketServiceImpl.java:88)\
    - Method <pro.taskana.workbasket.internal.AbstractWorkbasketAccessItemQueryImpl.list(int, int)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getSqlSession()> in (AbstractWorkbasketAccessItemQueryImpl.java:90)\
    - Method <pro.taskana.workbasket.internal.WorkbasketServiceImpl.getWorkbasket(java.lang.String)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (WorkbasketServiceImpl.java:96)\
    - Method <pro.taskana.workbasket.internal.WorkbasketAccessItemQueryImpl.list()> calls method <pro.taskana.common.internal.InternalTaskanaEngine.executeInDatabaseConnection(java.util.function.Supplier)> in (WorkbasketAccessItemQueryImpl.java:102)\
    - Method <pro.taskana.workbasket.internal.AbstractWorkbasketAccessItemQueryImpl.list(int, int)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.returnConnection()> in (AbstractWorkbasketAccessItemQueryImpl.java:103)\
    - Method <pro.taskana.workbasket.internal.WorkbasketAccessItemQueryImpl.lambda$0()> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getSqlSession()> in (WorkbasketAccessItemQueryImpl.java:103)\
    - Method <pro.taskana.workbasket.internal.WorkbasketServiceImpl.getWorkbasket(java.lang.String)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.returnConnection()> in (WorkbasketServiceImpl.java:106)\
    - Method <pro.taskana.workbasket.internal.WorkbasketAccessItemQueryImpl.list(int, int)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.openConnection()> in (WorkbasketAccessItemQueryImpl.java:110)\
    - Method <pro.taskana.workbasket.internal.AbstractWorkbasketAccessItemQueryImpl.listValues(pro.taskana.workbasket.api.AccessItemQueryColumnName, pro.taskana.common.api.BaseQuery$SortDirection)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.openConnection()> in (AbstractWorkbasketAccessItemQueryImpl.java:112)\
    (123 further dependencies have been omitted...)\
  6. Dependencies of Slice common.internal\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getClassificationService()> calls constructor <pro.taskana.classification.internal.ClassificationServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.spi.priority.internal.PriorityServiceManager, pro.taskana.classification.internal.ClassificationMapper, pro.taskana.task.internal.TaskMapper)> in (TaskanaEngineImpl.java:169)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getClassificationService()> references class object <pro.taskana.classification.internal.ClassificationMapper> in (TaskanaEngineImpl.java:172)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.classification.internal.ClassificationMapper> in (TaskanaEngineImpl.java:343)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.classification.internal.ClassificationQueryMapper> in (TaskanaEngineImpl.java:350)
Cycle detected: Slice classification.internal -> \
                Slice classification.internal.jobs -> \
                Slice task.internal.jobs -> \
                Slice task.internal.jobs.helper -> \
                Slice common.internal -> \
                Slice classification.internal\
  1. Dependencies of Slice classification.internal\
    - Method <pro.taskana.classification.internal.ClassificationServiceImpl.createJobIfPriorityOrServiceLevelHasChanged(pro.taskana.classification.api.models.Classification, pro.taskana.classification.internal.models.ClassificationImpl)> references class object <pro.taskana.classification.internal.jobs.ClassificationChangedJob> in (ClassificationServiceImpl.java:593)\
  2. Dependencies of Slice classification.internal.jobs\
    - Method <pro.taskana.classification.internal.jobs.ClassificationChangedJob.scheduleTaskRefreshJobs(java.util.List)> references class object <pro.taskana.task.internal.jobs.TaskRefreshJob> in (ClassificationChangedJob.java:85)\
  3. Dependencies of Slice task.internal.jobs\
    - Method <pro.taskana.task.internal.jobs.TaskUpdatePriorityJob.execute()> calls constructor <pro.taskana.task.internal.jobs.helper.TaskUpdatePriorityWorker.<init>(pro.taskana.common.api.TaskanaEngine)> in (TaskUpdatePriorityJob.java:45)\
    - Method <pro.taskana.task.internal.jobs.TaskUpdatePriorityJob.execute()> calls method <pro.taskana.task.internal.jobs.helper.TaskUpdatePriorityWorker.getAllRelevantTaskIds()> in (TaskUpdatePriorityJob.java:48)\
    - Method <pro.taskana.task.internal.jobs.TaskUpdatePriorityJob.execute()> references method <pro.taskana.task.internal.jobs.helper.TaskUpdatePriorityWorker.executeBatch(java.util.List)> in (TaskUpdatePriorityJob.java:49)\
  4. Dependencies of Slice task.internal.jobs.helper\
    - Constructor <pro.taskana.task.internal.jobs.helper.TaskUpdatePriorityWorker.<init>(pro.taskana.common.api.TaskanaEngine)> calls method <pro.taskana.common.internal.TaskanaEngineImpl.getPriorityServiceManager()> in (TaskUpdatePriorityWorker.java:27)\
  5. Dependencies of Slice common.internal\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getClassificationService()> calls constructor <pro.taskana.classification.internal.ClassificationServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.spi.priority.internal.PriorityServiceManager, pro.taskana.classification.internal.ClassificationMapper, pro.taskana.task.internal.TaskMapper)> in (TaskanaEngineImpl.java:169)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getClassificationService()> references class object <pro.taskana.classification.internal.ClassificationMapper> in (TaskanaEngineImpl.java:172)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.classification.internal.ClassificationMapper> in (TaskanaEngineImpl.java:343)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.classification.internal.ClassificationQueryMapper> in (TaskanaEngineImpl.java:350)
Cycle detected: Slice classification.internal -> \
                Slice common.internal -> \
                Slice classification.internal\
  1. Dependencies of Slice classification.internal\
    - Constructor <pro.taskana.classification.internal.ClassificationQueryImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (ClassificationQueryImpl.java:0)\
    - Constructor <pro.taskana.classification.internal.ClassificationServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.spi.priority.internal.PriorityServiceManager, pro.taskana.classification.internal.ClassificationMapper, pro.taskana.task.internal.TaskMapper)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (ClassificationServiceImpl.java:0)\
    - Field <pro.taskana.classification.internal.ClassificationQueryImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (ClassificationQueryImpl.java:0)\
    - Field <pro.taskana.classification.internal.ClassificationServiceImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (ClassificationServiceImpl.java:0)\
    - Constructor <pro.taskana.classification.internal.ClassificationServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.spi.priority.internal.PriorityServiceManager, pro.taskana.classification.internal.ClassificationMapper, pro.taskana.task.internal.TaskMapper)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getHistoryEventManager()> in (ClassificationServiceImpl.java:65)\
    - Method <pro.taskana.classification.internal.ClassificationServiceImpl.getClassification(java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.openConnection()> in (ClassificationServiceImpl.java:77)\
    - Method <pro.taskana.classification.internal.ClassificationServiceImpl.getClassification(java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.returnConnection()> in (ClassificationServiceImpl.java:87)\
    - Method <pro.taskana.classification.internal.ClassificationServiceImpl.getClassification(java.lang.String)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.openConnection()> in (ClassificationServiceImpl.java:98)\
    - Method <pro.taskana.classification.internal.ClassificationServiceImpl.getClassification(java.lang.String)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.returnConnection()> in (ClassificationServiceImpl.java:105)\
    - Method <pro.taskana.classification.internal.ClassificationServiceImpl.deleteClassification(java.lang.String)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (ClassificationServiceImpl.java:112)\
    - Method <pro.taskana.classification.internal.ClassificationServiceImpl.deleteClassification(java.lang.String)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.openConnection()> in (ClassificationServiceImpl.java:114)\
    - Method <pro.taskana.classification.internal.ClassificationServiceImpl.deleteClassification(java.lang.String)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (ClassificationServiceImpl.java:150)\
    - Method <pro.taskana.classification.internal.ClassificationServiceImpl.deleteClassification(java.lang.String)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.returnConnection()> in (ClassificationServiceImpl.java:160)\
    - Method <pro.taskana.classification.internal.ClassificationServiceImpl.deleteClassification(java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (ClassificationServiceImpl.java:167)\
    - Method <pro.taskana.classification.internal.ClassificationServiceImpl.deleteClassification(java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.openConnection()> in (ClassificationServiceImpl.java:169)\
    - Method <pro.taskana.classification.internal.ClassificationServiceImpl.deleteClassification(java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.returnConnection()> in (ClassificationServiceImpl.java:177)\
    - Method <pro.taskana.classification.internal.ClassificationServiceImpl.createClassification(pro.taskana.classification.api.models.Classification)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (ClassificationServiceImpl.java:185)\
    - Method <pro.taskana.classification.internal.ClassificationServiceImpl.createClassification(pro.taskana.classification.api.models.Classification)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.domainExists(java.lang.String)> in (ClassificationServiceImpl.java:186)\
    - Method <pro.taskana.classification.internal.ClassificationServiceImpl.createClassification(pro.taskana.classification.api.models.Classification)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.openConnection()> in (ClassificationServiceImpl.java:193)\
    - Method <pro.taskana.classification.internal.ClassificationServiceImpl.createClassification(pro.taskana.classification.api.models.Classification)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (ClassificationServiceImpl.java:218)\
    (23 further dependencies have been omitted...)\
  2. Dependencies of Slice common.internal\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getClassificationService()> calls constructor <pro.taskana.classification.internal.ClassificationServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.spi.priority.internal.PriorityServiceManager, pro.taskana.classification.internal.ClassificationMapper, pro.taskana.task.internal.TaskMapper)> in (TaskanaEngineImpl.java:169)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getClassificationService()> references class object <pro.taskana.classification.internal.ClassificationMapper> in (TaskanaEngineImpl.java:172)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.classification.internal.ClassificationMapper> in (TaskanaEngineImpl.java:343)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.classification.internal.ClassificationQueryMapper> in (TaskanaEngineImpl.java:350)
Cycle detected: Slice classification.internal -> \
                Slice task.internal -> \
                Slice common.internal -> \
                Slice classification.internal\
  1. Dependencies of Slice classification.internal\
    - Constructor <pro.taskana.classification.internal.ClassificationServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.spi.priority.internal.PriorityServiceManager, pro.taskana.classification.internal.ClassificationMapper, pro.taskana.task.internal.TaskMapper)> has parameter of type <pro.taskana.task.internal.TaskMapper> in (ClassificationServiceImpl.java:0)\
    - Field <pro.taskana.classification.internal.ClassificationServiceImpl.taskMapper> has type <pro.taskana.task.internal.TaskMapper> in (ClassificationServiceImpl.java:0)\
    - Method <pro.taskana.classification.internal.ClassificationServiceImpl.updateCategoryOnAssociatedTasks(pro.taskana.classification.internal.models.ClassificationImpl, pro.taskana.classification.api.models.Classification)> calls method <pro.taskana.task.internal.TaskMapper.updateClassificationCategoryOnChange(java.util.List, java.lang.String)> in (ClassificationServiceImpl.java:547)\
  2. Dependencies of Slice task.internal\
    - Constructor <pro.taskana.task.internal.ObjectReferenceQueryImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (ObjectReferenceQueryImpl.java:0)\
    - Constructor <pro.taskana.task.internal.ServiceLevelHandler.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.task.internal.TaskMapper, pro.taskana.task.internal.AttachmentMapper, pro.taskana.task.internal.TaskServiceImpl)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (ServiceLevelHandler.java:0)\
    - Constructor <pro.taskana.task.internal.TaskCommentQueryImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskCommentQueryImpl.java:0)\
    - Constructor <pro.taskana.task.internal.TaskCommentServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.task.internal.TaskCommentMapper, pro.taskana.user.internal.UserMapper, pro.taskana.task.internal.TaskServiceImpl)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskCommentServiceImpl.java:0)\
    - Constructor <pro.taskana.task.internal.TaskQueryImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskQueryImpl.java:0)\
    - Constructor <pro.taskana.task.internal.TaskServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.task.internal.TaskMapper, pro.taskana.task.internal.TaskCommentMapper, pro.taskana.task.internal.AttachmentMapper, pro.taskana.task.internal.ObjectReferenceMapper, pro.taskana.user.internal.UserMapper)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskServiceImpl.java:0)\
    - Constructor <pro.taskana.task.internal.TaskTransferrer.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.task.internal.TaskMapper, pro.taskana.task.internal.TaskServiceImpl)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskTransferrer.java:0)\
    - Field <pro.taskana.task.internal.ObjectReferenceQueryImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (ObjectReferenceQueryImpl.java:0)\
    - Field <pro.taskana.task.internal.ServiceLevelHandler.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (ServiceLevelHandler.java:0)\
    - Field <pro.taskana.task.internal.TaskCommentQueryImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskCommentQueryImpl.java:0)\
    - Field <pro.taskana.task.internal.TaskCommentServiceImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskCommentServiceImpl.java:0)\
    - Field <pro.taskana.task.internal.TaskQueryImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskQueryImpl.java:0)\
    - Field <pro.taskana.task.internal.TaskServiceImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskServiceImpl.java:0)\
    - Field <pro.taskana.task.internal.TaskTransferrer.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskTransferrer.java:0)\
    - Constructor <pro.taskana.task.internal.ServiceLevelHandler.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.task.internal.TaskMapper, pro.taskana.task.internal.AttachmentMapper, pro.taskana.task.internal.TaskServiceImpl)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (ServiceLevelHandler.java:52)\
    - Constructor <pro.taskana.task.internal.TaskTransferrer.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.task.internal.TaskMapper, pro.taskana.task.internal.TaskServiceImpl)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (TaskTransferrer.java:53)\
    - Constructor <pro.taskana.task.internal.TaskTransferrer.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.task.internal.TaskMapper, pro.taskana.task.internal.TaskServiceImpl)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getHistoryEventManager()> in (TaskTransferrer.java:54)\
    - Method <pro.taskana.task.internal.TaskCommentServiceImpl.updateTaskComment(pro.taskana.task.api.models.TaskComment)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (TaskCommentServiceImpl.java:55)\
    - Constructor <pro.taskana.task.internal.TaskCommentQueryImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (TaskCommentQueryImpl.java:61)\
    - Method <pro.taskana.task.internal.TaskCommentServiceImpl.updateTaskComment(pro.taskana.task.api.models.TaskComment)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.openConnection()> in (TaskCommentServiceImpl.java:61)\
    (158 further dependencies have been omitted...)\
  3. Dependencies of Slice common.internal\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getClassificationService()> calls constructor <pro.taskana.classification.internal.ClassificationServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.spi.priority.internal.PriorityServiceManager, pro.taskana.classification.internal.ClassificationMapper, pro.taskana.task.internal.TaskMapper)> in (TaskanaEngineImpl.java:169)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getClassificationService()> references class object <pro.taskana.classification.internal.ClassificationMapper> in (TaskanaEngineImpl.java:172)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.classification.internal.ClassificationMapper> in (TaskanaEngineImpl.java:343)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.classification.internal.ClassificationQueryMapper> in (TaskanaEngineImpl.java:350)
Cycle detected: Slice classification.internal -> \
                Slice task.internal -> \
                Slice user.internal -> \
                Slice common.internal -> \
                Slice classification.internal\
  1. Dependencies of Slice classification.internal\
    - Constructor <pro.taskana.classification.internal.ClassificationServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.spi.priority.internal.PriorityServiceManager, pro.taskana.classification.internal.ClassificationMapper, pro.taskana.task.internal.TaskMapper)> has parameter of type <pro.taskana.task.internal.TaskMapper> in (ClassificationServiceImpl.java:0)\
    - Field <pro.taskana.classification.internal.ClassificationServiceImpl.taskMapper> has type <pro.taskana.task.internal.TaskMapper> in (ClassificationServiceImpl.java:0)\
    - Method <pro.taskana.classification.internal.ClassificationServiceImpl.updateCategoryOnAssociatedTasks(pro.taskana.classification.internal.models.ClassificationImpl, pro.taskana.classification.api.models.Classification)> calls method <pro.taskana.task.internal.TaskMapper.updateClassificationCategoryOnChange(java.util.List, java.lang.String)> in (ClassificationServiceImpl.java:547)\
  2. Dependencies of Slice task.internal\
    - Constructor <pro.taskana.task.internal.TaskCommentServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.task.internal.TaskCommentMapper, pro.taskana.user.internal.UserMapper, pro.taskana.task.internal.TaskServiceImpl)> has parameter of type <pro.taskana.user.internal.UserMapper> in (TaskCommentServiceImpl.java:0)\
    - Constructor <pro.taskana.task.internal.TaskServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.task.internal.TaskMapper, pro.taskana.task.internal.TaskCommentMapper, pro.taskana.task.internal.AttachmentMapper, pro.taskana.task.internal.ObjectReferenceMapper, pro.taskana.user.internal.UserMapper)> has parameter of type <pro.taskana.user.internal.UserMapper> in (TaskServiceImpl.java:0)\
    - Field <pro.taskana.task.internal.TaskCommentServiceImpl.userMapper> has type <pro.taskana.user.internal.UserMapper> in (TaskCommentServiceImpl.java:0)\
    - Field <pro.taskana.task.internal.TaskServiceImpl.userMapper> has type <pro.taskana.user.internal.UserMapper> in (TaskServiceImpl.java:0)\
    - Method <pro.taskana.task.internal.TaskCommentServiceImpl.getTaskComment(java.lang.String)> calls method <pro.taskana.user.internal.UserMapper.findById(java.lang.String)> in (TaskCommentServiceImpl.java:191)\
    - Method <pro.taskana.task.internal.TaskServiceImpl.getTask(java.lang.String)> calls method <pro.taskana.user.internal.UserMapper.findById(java.lang.String)> in (TaskServiceImpl.java:350)\
  3. Dependencies of Slice user.internal\
    - Constructor <pro.taskana.user.internal.UserServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.user.internal.UserMapper)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (UserServiceImpl.java:0)\
    - Field <pro.taskana.user.internal.UserServiceImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (UserServiceImpl.java:0)\
    - Method <pro.taskana.user.internal.UserServiceImpl.getUser(java.lang.String)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.executeInDatabaseConnection(java.util.function.Supplier)> in (UserServiceImpl.java:35)\
    - Method <pro.taskana.user.internal.UserServiceImpl.createUser(pro.taskana.user.api.models.User)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (UserServiceImpl.java:46)\
    - Method <pro.taskana.user.internal.UserServiceImpl.updateUser(pro.taskana.user.api.models.User)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (UserServiceImpl.java:59)\
    - Method <pro.taskana.user.internal.UserServiceImpl.updateUser(pro.taskana.user.api.models.User)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.executeInDatabaseConnection(java.lang.Runnable)> in (UserServiceImpl.java:62)\
    - Method <pro.taskana.user.internal.UserServiceImpl.deleteUser(java.lang.String)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (UserServiceImpl.java:72)\
    - Method <pro.taskana.user.internal.UserServiceImpl.deleteUser(java.lang.String)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.executeInDatabaseConnection(java.lang.Runnable)> in (UserServiceImpl.java:75)\
    - Method <pro.taskana.user.internal.UserServiceImpl.insertIntoDatabase(pro.taskana.user.api.models.User)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.openConnection()> in (UserServiceImpl.java:83)\
    - Method <pro.taskana.user.internal.UserServiceImpl.insertIntoDatabase(pro.taskana.user.api.models.User)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.returnConnection()> in (UserServiceImpl.java:88)\
  4. Dependencies of Slice common.internal\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getClassificationService()> calls constructor <pro.taskana.classification.internal.ClassificationServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.spi.priority.internal.PriorityServiceManager, pro.taskana.classification.internal.ClassificationMapper, pro.taskana.task.internal.TaskMapper)> in (TaskanaEngineImpl.java:169)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getClassificationService()> references class object <pro.taskana.classification.internal.ClassificationMapper> in (TaskanaEngineImpl.java:172)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.classification.internal.ClassificationMapper> in (TaskanaEngineImpl.java:343)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.classification.internal.ClassificationQueryMapper> in (TaskanaEngineImpl.java:350)
Cycle detected: Slice classification.internal -> \
                Slice task.internal -> \
                Slice workbasket.internal -> \
                Slice common.internal -> \
                Slice classification.internal\
  1. Dependencies of Slice classification.internal\
    - Constructor <pro.taskana.classification.internal.ClassificationServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.spi.priority.internal.PriorityServiceManager, pro.taskana.classification.internal.ClassificationMapper, pro.taskana.task.internal.TaskMapper)> has parameter of type <pro.taskana.task.internal.TaskMapper> in (ClassificationServiceImpl.java:0)\
    - Field <pro.taskana.classification.internal.ClassificationServiceImpl.taskMapper> has type <pro.taskana.task.internal.TaskMapper> in (ClassificationServiceImpl.java:0)\
    - Method <pro.taskana.classification.internal.ClassificationServiceImpl.updateCategoryOnAssociatedTasks(pro.taskana.classification.internal.models.ClassificationImpl, pro.taskana.classification.api.models.Classification)> calls method <pro.taskana.task.internal.TaskMapper.updateClassificationCategoryOnChange(java.util.List, java.lang.String)> in (ClassificationServiceImpl.java:547)\
  2. Dependencies of Slice task.internal\
    - Method <pro.taskana.task.internal.TaskTransferrer.getSourceWorkbasketIdsWithTransferPermission(java.util.List)> calls method <pro.taskana.workbasket.internal.WorkbasketQueryImpl.setUsedToAugmentTasks(boolean)> in (TaskTransferrer.java:230)\
    - Method <pro.taskana.task.internal.TaskTransferrer.getSourceWorkbasketIdsWithTransferPermission(java.util.List)> calls method <pro.taskana.workbasket.internal.WorkbasketQueryImpl.callerHasPermission(pro.taskana.workbasket.api.WorkbasketPermission)> in (TaskTransferrer.java:239)\
    - Method <pro.taskana.task.internal.TaskServiceImpl.getTask(java.lang.String)> calls method <pro.taskana.workbasket.internal.WorkbasketQueryImpl.setUsedToAugmentTasks(boolean)> in (TaskServiceImpl.java:311)\
    - Method <pro.taskana.task.internal.TaskServiceImpl.getTask(java.lang.String)> calls method <pro.taskana.workbasket.internal.WorkbasketQueryImpl.idIn([Ljava.lang.String;)> in (TaskServiceImpl.java:313)\
    - Method <pro.taskana.task.internal.TaskCommentQueryImpl.setupAccessIds()> calls method <pro.taskana.workbasket.internal.WorkbasketQueryImpl.lowercaseAccessIds([Ljava.lang.String;)> in (TaskCommentQueryImpl.java:340)\
    - Method <pro.taskana.task.internal.TaskQueryImpl.setupAccessIds()> calls method <pro.taskana.workbasket.internal.WorkbasketQueryImpl.lowercaseAccessIds([Ljava.lang.String;)> in (TaskQueryImpl.java:2168)\
  3. Dependencies of Slice workbasket.internal\
    - Constructor <pro.taskana.workbasket.internal.AbstractWorkbasketAccessItemQueryImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (AbstractWorkbasketAccessItemQueryImpl.java:0)\
    - Constructor <pro.taskana.workbasket.internal.WorkbasketAccessItemQueryImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (WorkbasketAccessItemQueryImpl.java:0)\
    - Constructor <pro.taskana.workbasket.internal.WorkbasketQueryImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (WorkbasketQueryImpl.java:0)\
    - Constructor <pro.taskana.workbasket.internal.WorkbasketServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.spi.history.internal.HistoryEventManager, pro.taskana.workbasket.internal.WorkbasketMapper, pro.taskana.workbasket.internal.DistributionTargetMapper, pro.taskana.workbasket.internal.WorkbasketAccessMapper)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (WorkbasketServiceImpl.java:0)\
    - Field <pro.taskana.workbasket.internal.AbstractWorkbasketAccessItemQueryImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (AbstractWorkbasketAccessItemQueryImpl.java:0)\
    - Field <pro.taskana.workbasket.internal.WorkbasketAccessItemQueryImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (WorkbasketAccessItemQueryImpl.java:0)\
    - Field <pro.taskana.workbasket.internal.WorkbasketQueryImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (WorkbasketQueryImpl.java:0)\
    - Field <pro.taskana.workbasket.internal.WorkbasketServiceImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (WorkbasketServiceImpl.java:0)\
    - Method <pro.taskana.workbasket.internal.AbstractWorkbasketAccessItemQueryImpl.list()> calls method <pro.taskana.common.internal.InternalTaskanaEngine.executeInDatabaseConnection(java.util.function.Supplier)> in (AbstractWorkbasketAccessItemQueryImpl.java:79)\
    - Method <pro.taskana.workbasket.internal.AbstractWorkbasketAccessItemQueryImpl.lambda$0()> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getSqlSession()> in (AbstractWorkbasketAccessItemQueryImpl.java:80)\
    - Method <pro.taskana.workbasket.internal.AbstractWorkbasketAccessItemQueryImpl.list(int, int)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.openConnection()> in (AbstractWorkbasketAccessItemQueryImpl.java:87)\
    - Method <pro.taskana.workbasket.internal.WorkbasketServiceImpl.getWorkbasket(java.lang.String)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.openConnection()> in (WorkbasketServiceImpl.java:88)\
    - Method <pro.taskana.workbasket.internal.AbstractWorkbasketAccessItemQueryImpl.list(int, int)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getSqlSession()> in (AbstractWorkbasketAccessItemQueryImpl.java:90)\
    - Method <pro.taskana.workbasket.internal.WorkbasketServiceImpl.getWorkbasket(java.lang.String)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (WorkbasketServiceImpl.java:96)\
    - Method <pro.taskana.workbasket.internal.WorkbasketAccessItemQueryImpl.list()> calls method <pro.taskana.common.internal.InternalTaskanaEngine.executeInDatabaseConnection(java.util.function.Supplier)> in (WorkbasketAccessItemQueryImpl.java:102)\
    - Method <pro.taskana.workbasket.internal.AbstractWorkbasketAccessItemQueryImpl.list(int, int)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.returnConnection()> in (AbstractWorkbasketAccessItemQueryImpl.java:103)\
    - Method <pro.taskana.workbasket.internal.WorkbasketAccessItemQueryImpl.lambda$0()> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getSqlSession()> in (WorkbasketAccessItemQueryImpl.java:103)\
    - Method <pro.taskana.workbasket.internal.WorkbasketServiceImpl.getWorkbasket(java.lang.String)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.returnConnection()> in (WorkbasketServiceImpl.java:106)\
    - Method <pro.taskana.workbasket.internal.WorkbasketAccessItemQueryImpl.list(int, int)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.openConnection()> in (WorkbasketAccessItemQueryImpl.java:110)\
    - Method <pro.taskana.workbasket.internal.AbstractWorkbasketAccessItemQueryImpl.listValues(pro.taskana.workbasket.api.AccessItemQueryColumnName, pro.taskana.common.api.BaseQuery$SortDirection)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.openConnection()> in (AbstractWorkbasketAccessItemQueryImpl.java:112)\
    (123 further dependencies have been omitted...)\
  4. Dependencies of Slice common.internal\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getClassificationService()> calls constructor <pro.taskana.classification.internal.ClassificationServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.spi.priority.internal.PriorityServiceManager, pro.taskana.classification.internal.ClassificationMapper, pro.taskana.task.internal.TaskMapper)> in (TaskanaEngineImpl.java:169)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getClassificationService()> references class object <pro.taskana.classification.internal.ClassificationMapper> in (TaskanaEngineImpl.java:172)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.classification.internal.ClassificationMapper> in (TaskanaEngineImpl.java:343)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.classification.internal.ClassificationQueryMapper> in (TaskanaEngineImpl.java:350)
Cycle detected: Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice monitor.api.reports.header -> \
                Slice monitor.api.reports.item -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice workbasket.api.models -> \
                Slice workbasket.api -> \
                Slice common.api\
  1. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  2. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  3. Dependencies of Slice monitor.api.reports\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report$Builder> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.ColumnHeader> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.ColumnHeader> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimeIntervalReportBuilder.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TimestampReport$Builder, pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.WorkbasketReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (WorkbasketReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (WorkbasketReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.ClassificationCategoryReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    (8 further dependencies have been omitted...)\
  4. Dependencies of Slice monitor.api.reports.header\
    - Class <pro.taskana.monitor.api.reports.header.ColumnHeader> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (ColumnHeader.java:0)\
    - Class <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> has generic interface <pro.taskana.monitor.api.reports.header.ColumnHeader<pro.taskana.monitor.api.reports.item.PriorityQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.PriorityQueryItem> in (PriorityColumnHeader.java:0)\
    - Class <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> has generic interface <pro.taskana.monitor.api.reports.header.ColumnHeader<pro.taskana.monitor.api.reports.item.TaskQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TaskQueryItem> in (TaskStatusColumnHeader.java:0)\
    - Class <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> has generic interface <pro.taskana.monitor.api.reports.header.ColumnHeader<pro.taskana.monitor.api.reports.item.AgeQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.AgeQueryItem> in (TimeIntervalColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.ColumnHeader.fits(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (ColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.PriorityColumnHeader.fits(pro.taskana.monitor.api.reports.item.PriorityQueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.PriorityQueryItem> in (PriorityColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.PriorityColumnHeader.fits(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (PriorityColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.fits(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (TaskStatusColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.fits(pro.taskana.monitor.api.reports.item.TaskQueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.TaskQueryItem> in (TaskStatusColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader.fits(pro.taskana.monitor.api.reports.item.AgeQueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.AgeQueryItem> in (TimeIntervalColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader.fits(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (TimeIntervalColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.fits(pro.taskana.monitor.api.reports.item.TaskQueryItem)> calls method <pro.taskana.monitor.api.reports.item.TaskQueryItem.getState()> in (TaskStatusColumnHeader.java:22)\
    - Method <pro.taskana.monitor.api.reports.header.PriorityColumnHeader.fits(pro.taskana.monitor.api.reports.item.PriorityQueryItem)> calls method <pro.taskana.monitor.api.reports.item.PriorityQueryItem.getPriority()> in (PriorityColumnHeader.java:28)\
    - Method <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader.fits(pro.taskana.monitor.api.reports.item.AgeQueryItem)> calls method <pro.taskana.monitor.api.reports.item.AgeQueryItem.getAgeInDays()> in (TimeIntervalColumnHeader.java:62)\
  5. Dependencies of Slice monitor.api.reports.item\
    - Field <pro.taskana.monitor.api.reports.item.TaskQueryItem.state> has type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.getState()> has return type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.setState(pro.taskana.task.api.TaskState)> has parameter of type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
  6. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  7. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.TaskSummary.getWorkbasketSummary()> has return type <pro.taskana.workbasket.api.models.WorkbasketSummary> in (TaskSummary.java:0)\
  8. Dependencies of Slice workbasket.api.models\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomField(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setType(pro.taskana.workbasket.api.WorkbasketType)> has parameter of type <pro.taskana.workbasket.api.WorkbasketType> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.getPermission(pro.taskana.workbasket.api.WorkbasketPermission)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.setPermission(pro.taskana.workbasket.api.WorkbasketPermission, boolean)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomField(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getType()> has return type <pro.taskana.workbasket.api.WorkbasketType> in (WorkbasketSummary.java:0)\
  9. Dependencies of Slice workbasket.api\
    - Class <pro.taskana.workbasket.api.AccessItemQueryColumnName> implements interface <pro.taskana.common.api.QueryColumnName> in (AccessItemQueryColumnName.java:0)\
    - Class <pro.taskana.workbasket.api.WorkbasketQueryColumnName> implements interface <pro.taskana.common.api.QueryColumnName> in (WorkbasketQueryColumnName.java:0)\
    - Interface <pro.taskana.workbasket.api.AbstractWorkbasketAccessItemQuery> extends interface <pro.taskana.common.api.BaseQuery> in (AbstractWorkbasketAccessItemQuery.java:0)\
    - Interface <pro.taskana.workbasket.api.WorkbasketAccessItemQuery> extends interface <pro.taskana.common.api.BaseQuery> in (WorkbasketAccessItemQuery.java:0)\
    - Interface <pro.taskana.workbasket.api.WorkbasketQuery> extends interface <pro.taskana.common.api.BaseQuery> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.AbstractWorkbasketAccessItemQuery.orderByAccessId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (AbstractWorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.AbstractWorkbasketAccessItemQuery.orderById(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (AbstractWorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.AbstractWorkbasketAccessItemQuery.orderByWorkbasketId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (AbstractWorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketAccessItemQuery.orderByAccessId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketAccessItemQuery.orderById(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketAccessItemQuery.orderByWorkbasketId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketAccessItemQuery.orderByWorkbasketKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.createdWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.modifiedWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField, pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByDescription(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByDomain(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByName(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByOrgLevel1(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    (6 further dependencies have been omitted...)
Cycle detected: Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice monitor.api.reports.header -> \
                Slice monitor.api.reports.item -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice workbasket.api.models -> \
                Slice workbasket.api -> \
                Slice common.api.exceptions -> \
                Slice common.api\
  1. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  2. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  3. Dependencies of Slice monitor.api.reports\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report$Builder> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.ColumnHeader> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.ColumnHeader> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimeIntervalReportBuilder.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TimestampReport$Builder, pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.WorkbasketReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (WorkbasketReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (WorkbasketReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.ClassificationCategoryReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    (8 further dependencies have been omitted...)\
  4. Dependencies of Slice monitor.api.reports.header\
    - Class <pro.taskana.monitor.api.reports.header.ColumnHeader> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (ColumnHeader.java:0)\
    - Class <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> has generic interface <pro.taskana.monitor.api.reports.header.ColumnHeader<pro.taskana.monitor.api.reports.item.PriorityQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.PriorityQueryItem> in (PriorityColumnHeader.java:0)\
    - Class <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> has generic interface <pro.taskana.monitor.api.reports.header.ColumnHeader<pro.taskana.monitor.api.reports.item.TaskQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TaskQueryItem> in (TaskStatusColumnHeader.java:0)\
    - Class <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> has generic interface <pro.taskana.monitor.api.reports.header.ColumnHeader<pro.taskana.monitor.api.reports.item.AgeQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.AgeQueryItem> in (TimeIntervalColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.ColumnHeader.fits(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (ColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.PriorityColumnHeader.fits(pro.taskana.monitor.api.reports.item.PriorityQueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.PriorityQueryItem> in (PriorityColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.PriorityColumnHeader.fits(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (PriorityColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.fits(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (TaskStatusColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.fits(pro.taskana.monitor.api.reports.item.TaskQueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.TaskQueryItem> in (TaskStatusColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader.fits(pro.taskana.monitor.api.reports.item.AgeQueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.AgeQueryItem> in (TimeIntervalColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader.fits(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (TimeIntervalColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.fits(pro.taskana.monitor.api.reports.item.TaskQueryItem)> calls method <pro.taskana.monitor.api.reports.item.TaskQueryItem.getState()> in (TaskStatusColumnHeader.java:22)\
    - Method <pro.taskana.monitor.api.reports.header.PriorityColumnHeader.fits(pro.taskana.monitor.api.reports.item.PriorityQueryItem)> calls method <pro.taskana.monitor.api.reports.item.PriorityQueryItem.getPriority()> in (PriorityColumnHeader.java:28)\
    - Method <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader.fits(pro.taskana.monitor.api.reports.item.AgeQueryItem)> calls method <pro.taskana.monitor.api.reports.item.AgeQueryItem.getAgeInDays()> in (TimeIntervalColumnHeader.java:62)\
  5. Dependencies of Slice monitor.api.reports.item\
    - Field <pro.taskana.monitor.api.reports.item.TaskQueryItem.state> has type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.getState()> has return type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.setState(pro.taskana.task.api.TaskState)> has parameter of type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
  6. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  7. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.TaskSummary.getWorkbasketSummary()> has return type <pro.taskana.workbasket.api.models.WorkbasketSummary> in (TaskSummary.java:0)\
  8. Dependencies of Slice workbasket.api.models\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomField(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setType(pro.taskana.workbasket.api.WorkbasketType)> has parameter of type <pro.taskana.workbasket.api.WorkbasketType> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.getPermission(pro.taskana.workbasket.api.WorkbasketPermission)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.setPermission(pro.taskana.workbasket.api.WorkbasketPermission, boolean)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomField(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getType()> has return type <pro.taskana.workbasket.api.WorkbasketType> in (WorkbasketSummary.java:0)\
  9. Dependencies of Slice workbasket.api\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.accessIdsHavePermission(pro.taskana.workbasket.api.WorkbasketPermission, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.accessIdsHavePermission(pro.taskana.workbasket.api.WorkbasketPermission, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.addDistributionTarget(java.lang.String, java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.checkAuthorization(java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.checkAuthorization(java.lang.String, java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.common.api.exceptions.DomainNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItem(pro.taskana.workbasket.api.models.WorkbasketAccessItem)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItem(pro.taskana.workbasket.api.models.WorkbasketAccessItem)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItemQuery()> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasket(java.lang.String)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasket(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasketAccessItem(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasketAccessItemsForAccessId(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbaskets(java.util.List)> has generic return type <pro.taskana.common.api.BulkOperationResults<java.lang.String, pro.taskana.common.api.exceptions.TaskanaException>> with type argument depending on <pro.taskana.common.api.exceptions.TaskanaException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbaskets(java.util.List)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbaskets(java.util.List)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionSources(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionSources(java.lang.String, java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    (14 further dependencies have been omitted...)\
  10. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)
Cycle detected: Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice monitor.api.reports.header -> \
                Slice monitor.api.reports.item -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice workbasket.api.models -> \
                Slice workbasket.api -> \
                Slice workbasket.api.exceptions -> \
                Slice common.api.exceptions -> \
                Slice common.api\
  1. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  2. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  3. Dependencies of Slice monitor.api.reports\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report$Builder> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.ColumnHeader> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.ColumnHeader> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimeIntervalReportBuilder.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TimestampReport$Builder, pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.WorkbasketReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (WorkbasketReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (WorkbasketReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.ClassificationCategoryReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    (8 further dependencies have been omitted...)\
  4. Dependencies of Slice monitor.api.reports.header\
    - Class <pro.taskana.monitor.api.reports.header.ColumnHeader> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (ColumnHeader.java:0)\
    - Class <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> has generic interface <pro.taskana.monitor.api.reports.header.ColumnHeader<pro.taskana.monitor.api.reports.item.PriorityQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.PriorityQueryItem> in (PriorityColumnHeader.java:0)\
    - Class <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> has generic interface <pro.taskana.monitor.api.reports.header.ColumnHeader<pro.taskana.monitor.api.reports.item.TaskQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TaskQueryItem> in (TaskStatusColumnHeader.java:0)\
    - Class <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> has generic interface <pro.taskana.monitor.api.reports.header.ColumnHeader<pro.taskana.monitor.api.reports.item.AgeQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.AgeQueryItem> in (TimeIntervalColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.ColumnHeader.fits(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (ColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.PriorityColumnHeader.fits(pro.taskana.monitor.api.reports.item.PriorityQueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.PriorityQueryItem> in (PriorityColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.PriorityColumnHeader.fits(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (PriorityColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.fits(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (TaskStatusColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.fits(pro.taskana.monitor.api.reports.item.TaskQueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.TaskQueryItem> in (TaskStatusColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader.fits(pro.taskana.monitor.api.reports.item.AgeQueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.AgeQueryItem> in (TimeIntervalColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader.fits(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (TimeIntervalColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.fits(pro.taskana.monitor.api.reports.item.TaskQueryItem)> calls method <pro.taskana.monitor.api.reports.item.TaskQueryItem.getState()> in (TaskStatusColumnHeader.java:22)\
    - Method <pro.taskana.monitor.api.reports.header.PriorityColumnHeader.fits(pro.taskana.monitor.api.reports.item.PriorityQueryItem)> calls method <pro.taskana.monitor.api.reports.item.PriorityQueryItem.getPriority()> in (PriorityColumnHeader.java:28)\
    - Method <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader.fits(pro.taskana.monitor.api.reports.item.AgeQueryItem)> calls method <pro.taskana.monitor.api.reports.item.AgeQueryItem.getAgeInDays()> in (TimeIntervalColumnHeader.java:62)\
  5. Dependencies of Slice monitor.api.reports.item\
    - Field <pro.taskana.monitor.api.reports.item.TaskQueryItem.state> has type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.getState()> has return type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.setState(pro.taskana.task.api.TaskState)> has parameter of type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
  6. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  7. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.TaskSummary.getWorkbasketSummary()> has return type <pro.taskana.workbasket.api.models.WorkbasketSummary> in (TaskSummary.java:0)\
  8. Dependencies of Slice workbasket.api.models\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomField(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setType(pro.taskana.workbasket.api.WorkbasketType)> has parameter of type <pro.taskana.workbasket.api.WorkbasketType> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.getPermission(pro.taskana.workbasket.api.WorkbasketPermission)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.setPermission(pro.taskana.workbasket.api.WorkbasketPermission, boolean)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomField(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getType()> has return type <pro.taskana.workbasket.api.WorkbasketType> in (WorkbasketSummary.java:0)\
  9. Dependencies of Slice workbasket.api\
    - Method <pro.taskana.workbasket.api.WorkbasketService.addDistributionTarget(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.checkAuthorization(java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.checkAuthorization(java.lang.String, java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketAlreadyExistException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItem(pro.taskana.workbasket.api.models.WorkbasketAccessItem)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItem(pro.taskana.workbasket.api.models.WorkbasketAccessItem)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasket(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketInUseException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasket(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionSources(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionSources(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionTargets(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionTargets(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getWorkbasket(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getWorkbasket(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.setDistributionTargets(java.lang.String, java.util.List)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.setWorkbasketAccessItems(java.lang.String, java.util.List)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.setWorkbasketAccessItems(java.lang.String, java.util.List)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.updateWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
  10. Dependencies of Slice workbasket.api.exceptions\
    - Class <pro.taskana.workbasket.api.exceptions.MismatchedWorkbasketPermissionException> extends class <pro.taskana.common.api.exceptions.NotAuthorizedException> in (MismatchedWorkbasketPermissionException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.NotAuthorizedToQueryWorkbasketException> extends class <pro.taskana.common.api.exceptions.TaskanaRuntimeException> in (NotAuthorizedToQueryWorkbasketException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (WorkbasketAccessItemAlreadyExistException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.WorkbasketAlreadyExistException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (WorkbasketAlreadyExistException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.WorkbasketInUseException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (WorkbasketInUseException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.WorkbasketMarkedForDeletionException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (WorkbasketMarkedForDeletionException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> extends class <pro.taskana.common.api.exceptions.NotFoundException> in (WorkbasketNotFoundException.java:0)\
    - Constructor <pro.taskana.workbasket.api.exceptions.NotAuthorizedToQueryWorkbasketException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode, java.lang.Throwable)> has parameter of type <pro.taskana.common.api.exceptions.ErrorCode> in (NotAuthorizedToQueryWorkbasketException.java:0)\
    - Constructor <pro.taskana.workbasket.api.exceptions.NotAuthorizedToQueryWorkbasketException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode, java.lang.Throwable)> calls constructor <pro.taskana.common.api.exceptions.TaskanaRuntimeException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode, java.lang.Throwable)> in (NotAuthorizedToQueryWorkbasketException.java:12)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException.<init>(java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.NotFoundException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketNotFoundException.java:20)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException.<init>(java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (WorkbasketNotFoundException.java:20)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketAlreadyExistException.java:21)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (WorkbasketAlreadyExistException.java:21)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketInUseException.<init>(java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketInUseException.java:22)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketInUseException.<init>(java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (WorkbasketInUseException.java:22)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketMarkedForDeletionException.<init>(java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketMarkedForDeletionException.java:22)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketMarkedForDeletionException.<init>(java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (WorkbasketMarkedForDeletionException.java:22)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketAccessItemAlreadyExistException.java:23)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (WorkbasketAccessItemAlreadyExistException.java:23)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException.<init>(java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.NotFoundException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketNotFoundException.java:29)\
    (5 further dependencies have been omitted...)\
  11. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)
Cycle detected: Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice monitor.api.reports.header -> \
                Slice monitor.api.reports.item -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice workbasket.api.models -> \
                Slice workbasket.api -> \
                Slice workbasket.api.exceptions -> \
                Slice common.internal.util -> \
                Slice common.api.exceptions -> \
                Slice common.api\
  1. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  2. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  3. Dependencies of Slice monitor.api.reports\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report$Builder> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.ColumnHeader> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.ColumnHeader> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimeIntervalReportBuilder.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TimestampReport$Builder, pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.WorkbasketReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (WorkbasketReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (WorkbasketReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.ClassificationCategoryReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    (8 further dependencies have been omitted...)\
  4. Dependencies of Slice monitor.api.reports.header\
    - Class <pro.taskana.monitor.api.reports.header.ColumnHeader> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (ColumnHeader.java:0)\
    - Class <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> has generic interface <pro.taskana.monitor.api.reports.header.ColumnHeader<pro.taskana.monitor.api.reports.item.PriorityQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.PriorityQueryItem> in (PriorityColumnHeader.java:0)\
    - Class <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> has generic interface <pro.taskana.monitor.api.reports.header.ColumnHeader<pro.taskana.monitor.api.reports.item.TaskQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TaskQueryItem> in (TaskStatusColumnHeader.java:0)\
    - Class <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> has generic interface <pro.taskana.monitor.api.reports.header.ColumnHeader<pro.taskana.monitor.api.reports.item.AgeQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.AgeQueryItem> in (TimeIntervalColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.ColumnHeader.fits(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (ColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.PriorityColumnHeader.fits(pro.taskana.monitor.api.reports.item.PriorityQueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.PriorityQueryItem> in (PriorityColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.PriorityColumnHeader.fits(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (PriorityColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.fits(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (TaskStatusColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.fits(pro.taskana.monitor.api.reports.item.TaskQueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.TaskQueryItem> in (TaskStatusColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader.fits(pro.taskana.monitor.api.reports.item.AgeQueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.AgeQueryItem> in (TimeIntervalColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader.fits(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (TimeIntervalColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.fits(pro.taskana.monitor.api.reports.item.TaskQueryItem)> calls method <pro.taskana.monitor.api.reports.item.TaskQueryItem.getState()> in (TaskStatusColumnHeader.java:22)\
    - Method <pro.taskana.monitor.api.reports.header.PriorityColumnHeader.fits(pro.taskana.monitor.api.reports.item.PriorityQueryItem)> calls method <pro.taskana.monitor.api.reports.item.PriorityQueryItem.getPriority()> in (PriorityColumnHeader.java:28)\
    - Method <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader.fits(pro.taskana.monitor.api.reports.item.AgeQueryItem)> calls method <pro.taskana.monitor.api.reports.item.AgeQueryItem.getAgeInDays()> in (TimeIntervalColumnHeader.java:62)\
  5. Dependencies of Slice monitor.api.reports.item\
    - Field <pro.taskana.monitor.api.reports.item.TaskQueryItem.state> has type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.getState()> has return type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.setState(pro.taskana.task.api.TaskState)> has parameter of type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
  6. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  7. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.TaskSummary.getWorkbasketSummary()> has return type <pro.taskana.workbasket.api.models.WorkbasketSummary> in (TaskSummary.java:0)\
  8. Dependencies of Slice workbasket.api.models\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomField(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setType(pro.taskana.workbasket.api.WorkbasketType)> has parameter of type <pro.taskana.workbasket.api.WorkbasketType> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.getPermission(pro.taskana.workbasket.api.WorkbasketPermission)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.setPermission(pro.taskana.workbasket.api.WorkbasketPermission, boolean)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomField(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getType()> has return type <pro.taskana.workbasket.api.WorkbasketType> in (WorkbasketSummary.java:0)\
  9. Dependencies of Slice workbasket.api\
    - Method <pro.taskana.workbasket.api.WorkbasketService.addDistributionTarget(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.checkAuthorization(java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.checkAuthorization(java.lang.String, java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketAlreadyExistException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItem(pro.taskana.workbasket.api.models.WorkbasketAccessItem)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItem(pro.taskana.workbasket.api.models.WorkbasketAccessItem)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasket(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketInUseException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasket(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionSources(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionSources(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionTargets(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionTargets(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getWorkbasket(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getWorkbasket(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.setDistributionTargets(java.lang.String, java.util.List)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.setWorkbasketAccessItems(java.lang.String, java.util.List)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.setWorkbasketAccessItems(java.lang.String, java.util.List)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.updateWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
  10. Dependencies of Slice workbasket.api.exceptions\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException.<init>(java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object)> in (WorkbasketNotFoundException.java:20)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (WorkbasketAlreadyExistException.java:21)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketInUseException.<init>(java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object)> in (WorkbasketInUseException.java:22)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketMarkedForDeletionException.<init>(java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object)> in (WorkbasketMarkedForDeletionException.java:22)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (WorkbasketAccessItemAlreadyExistException.java:23)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (WorkbasketNotFoundException.java:29)\
    - Constructor <pro.taskana.workbasket.api.exceptions.MismatchedWorkbasketPermissionException.<init>(java.lang.String, java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (MismatchedWorkbasketPermissionException.java:33)\
    - Constructor <pro.taskana.workbasket.api.exceptions.MismatchedWorkbasketPermissionException.<init>(java.lang.String, java.lang.String, java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (MismatchedWorkbasketPermissionException.java:60)\
  11. Dependencies of Slice common.internal.util\
    - Method <pro.taskana.common.internal.util.CheckedRunnable.lambda$0(pro.taskana.common.internal.util.CheckedRunnable)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedRunnable.java:13)\
    - Method <pro.taskana.common.internal.util.CheckedConsumer.lambda$0(pro.taskana.common.internal.util.CheckedConsumer, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedConsumer.java:14)\
    - Method <pro.taskana.common.internal.util.CheckedFunction.lambda$0(pro.taskana.common.internal.util.CheckedFunction, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedFunction.java:14)\
    - Method <pro.taskana.common.internal.util.CheckedSupplier.lambda$0(pro.taskana.common.internal.util.CheckedSupplier)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedSupplier.java:15)\
    - Method <pro.taskana.common.internal.util.CheckedFunction.lambda$1(pro.taskana.common.internal.util.CheckedFunction, java.lang.Class, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedFunction.java:28)\
    - Method <pro.taskana.common.internal.util.ObjectAttributeChangeDetector.determineChangesInAttributes(java.lang.Object, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (ObjectAttributeChangeDetector.java:33)\
    - Method <pro.taskana.common.internal.util.FileLoaderUtil.openFileFromClasspathOrSystem(java.lang.String, java.lang.Class)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (FileLoaderUtil.java:36)\
    - Method <pro.taskana.common.internal.util.FileLoaderUtil.openFileFromClasspathOrSystem(java.lang.String, java.lang.Class)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (FileLoaderUtil.java:42)\
    - Method <pro.taskana.common.internal.util.ObjectAttributeChangeDetector.determineChangesInAttributes(java.lang.Object, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (ObjectAttributeChangeDetector.java:45)\
  12. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)
Cycle detected: Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice monitor.api.reports.header -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice workbasket.api.models -> \
                Slice workbasket.api -> \
                Slice common.api\
  1. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  2. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  3. Dependencies of Slice monitor.api.reports\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report$Builder> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.ColumnHeader> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.ColumnHeader> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimeIntervalReportBuilder.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TimestampReport$Builder, pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.WorkbasketReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (WorkbasketReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (WorkbasketReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.ClassificationCategoryReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    (8 further dependencies have been omitted...)\
  4. Dependencies of Slice monitor.api.reports.header\
    - Constructor <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.<init>(pro.taskana.task.api.TaskState)> has parameter of type <pro.taskana.task.api.TaskState> in (TaskStatusColumnHeader.java:0)\
    - Field <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.state> has type <pro.taskana.task.api.TaskState> in (TaskStatusColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.getDisplayName()> calls method <pro.taskana.task.api.TaskState.name()> in (TaskStatusColumnHeader.java:17)\
  5. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  6. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.TaskSummary.getWorkbasketSummary()> has return type <pro.taskana.workbasket.api.models.WorkbasketSummary> in (TaskSummary.java:0)\
  7. Dependencies of Slice workbasket.api.models\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomField(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setType(pro.taskana.workbasket.api.WorkbasketType)> has parameter of type <pro.taskana.workbasket.api.WorkbasketType> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.getPermission(pro.taskana.workbasket.api.WorkbasketPermission)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.setPermission(pro.taskana.workbasket.api.WorkbasketPermission, boolean)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomField(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getType()> has return type <pro.taskana.workbasket.api.WorkbasketType> in (WorkbasketSummary.java:0)\
  8. Dependencies of Slice workbasket.api\
    - Class <pro.taskana.workbasket.api.AccessItemQueryColumnName> implements interface <pro.taskana.common.api.QueryColumnName> in (AccessItemQueryColumnName.java:0)\
    - Class <pro.taskana.workbasket.api.WorkbasketQueryColumnName> implements interface <pro.taskana.common.api.QueryColumnName> in (WorkbasketQueryColumnName.java:0)\
    - Interface <pro.taskana.workbasket.api.AbstractWorkbasketAccessItemQuery> extends interface <pro.taskana.common.api.BaseQuery> in (AbstractWorkbasketAccessItemQuery.java:0)\
    - Interface <pro.taskana.workbasket.api.WorkbasketAccessItemQuery> extends interface <pro.taskana.common.api.BaseQuery> in (WorkbasketAccessItemQuery.java:0)\
    - Interface <pro.taskana.workbasket.api.WorkbasketQuery> extends interface <pro.taskana.common.api.BaseQuery> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.AbstractWorkbasketAccessItemQuery.orderByAccessId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (AbstractWorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.AbstractWorkbasketAccessItemQuery.orderById(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (AbstractWorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.AbstractWorkbasketAccessItemQuery.orderByWorkbasketId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (AbstractWorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketAccessItemQuery.orderByAccessId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketAccessItemQuery.orderById(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketAccessItemQuery.orderByWorkbasketId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketAccessItemQuery.orderByWorkbasketKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.createdWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.modifiedWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField, pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByDescription(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByDomain(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByName(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByOrgLevel1(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    (6 further dependencies have been omitted...)
Cycle detected: Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice monitor.api.reports.header -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice workbasket.api.models -> \
                Slice workbasket.api -> \
                Slice common.api.exceptions -> \
                Slice common.api\
  1. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  2. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  3. Dependencies of Slice monitor.api.reports\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report$Builder> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.ColumnHeader> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.ColumnHeader> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimeIntervalReportBuilder.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TimestampReport$Builder, pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.WorkbasketReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (WorkbasketReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (WorkbasketReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.ClassificationCategoryReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    (8 further dependencies have been omitted...)\
  4. Dependencies of Slice monitor.api.reports.header\
    - Constructor <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.<init>(pro.taskana.task.api.TaskState)> has parameter of type <pro.taskana.task.api.TaskState> in (TaskStatusColumnHeader.java:0)\
    - Field <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.state> has type <pro.taskana.task.api.TaskState> in (TaskStatusColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.getDisplayName()> calls method <pro.taskana.task.api.TaskState.name()> in (TaskStatusColumnHeader.java:17)\
  5. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  6. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.TaskSummary.getWorkbasketSummary()> has return type <pro.taskana.workbasket.api.models.WorkbasketSummary> in (TaskSummary.java:0)\
  7. Dependencies of Slice workbasket.api.models\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomField(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setType(pro.taskana.workbasket.api.WorkbasketType)> has parameter of type <pro.taskana.workbasket.api.WorkbasketType> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.getPermission(pro.taskana.workbasket.api.WorkbasketPermission)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.setPermission(pro.taskana.workbasket.api.WorkbasketPermission, boolean)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomField(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getType()> has return type <pro.taskana.workbasket.api.WorkbasketType> in (WorkbasketSummary.java:0)\
  8. Dependencies of Slice workbasket.api\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.accessIdsHavePermission(pro.taskana.workbasket.api.WorkbasketPermission, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.accessIdsHavePermission(pro.taskana.workbasket.api.WorkbasketPermission, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.addDistributionTarget(java.lang.String, java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.checkAuthorization(java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.checkAuthorization(java.lang.String, java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.common.api.exceptions.DomainNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItem(pro.taskana.workbasket.api.models.WorkbasketAccessItem)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItem(pro.taskana.workbasket.api.models.WorkbasketAccessItem)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItemQuery()> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasket(java.lang.String)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasket(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasketAccessItem(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasketAccessItemsForAccessId(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbaskets(java.util.List)> has generic return type <pro.taskana.common.api.BulkOperationResults<java.lang.String, pro.taskana.common.api.exceptions.TaskanaException>> with type argument depending on <pro.taskana.common.api.exceptions.TaskanaException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbaskets(java.util.List)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbaskets(java.util.List)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionSources(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionSources(java.lang.String, java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    (14 further dependencies have been omitted...)\
  9. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)
Cycle detected: Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice monitor.api.reports.header -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice workbasket.api.models -> \
                Slice workbasket.api -> \
                Slice workbasket.api.exceptions -> \
                Slice common.api.exceptions -> \
                Slice common.api\
  1. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  2. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  3. Dependencies of Slice monitor.api.reports\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report$Builder> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.ColumnHeader> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.ColumnHeader> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimeIntervalReportBuilder.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TimestampReport$Builder, pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.WorkbasketReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (WorkbasketReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (WorkbasketReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.ClassificationCategoryReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    (8 further dependencies have been omitted...)\
  4. Dependencies of Slice monitor.api.reports.header\
    - Constructor <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.<init>(pro.taskana.task.api.TaskState)> has parameter of type <pro.taskana.task.api.TaskState> in (TaskStatusColumnHeader.java:0)\
    - Field <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.state> has type <pro.taskana.task.api.TaskState> in (TaskStatusColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.getDisplayName()> calls method <pro.taskana.task.api.TaskState.name()> in (TaskStatusColumnHeader.java:17)\
  5. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  6. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.TaskSummary.getWorkbasketSummary()> has return type <pro.taskana.workbasket.api.models.WorkbasketSummary> in (TaskSummary.java:0)\
  7. Dependencies of Slice workbasket.api.models\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomField(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setType(pro.taskana.workbasket.api.WorkbasketType)> has parameter of type <pro.taskana.workbasket.api.WorkbasketType> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.getPermission(pro.taskana.workbasket.api.WorkbasketPermission)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.setPermission(pro.taskana.workbasket.api.WorkbasketPermission, boolean)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomField(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getType()> has return type <pro.taskana.workbasket.api.WorkbasketType> in (WorkbasketSummary.java:0)\
  8. Dependencies of Slice workbasket.api\
    - Method <pro.taskana.workbasket.api.WorkbasketService.addDistributionTarget(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.checkAuthorization(java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.checkAuthorization(java.lang.String, java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketAlreadyExistException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItem(pro.taskana.workbasket.api.models.WorkbasketAccessItem)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItem(pro.taskana.workbasket.api.models.WorkbasketAccessItem)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasket(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketInUseException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasket(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionSources(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionSources(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionTargets(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionTargets(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getWorkbasket(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getWorkbasket(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.setDistributionTargets(java.lang.String, java.util.List)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.setWorkbasketAccessItems(java.lang.String, java.util.List)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.setWorkbasketAccessItems(java.lang.String, java.util.List)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.updateWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
  9. Dependencies of Slice workbasket.api.exceptions\
    - Class <pro.taskana.workbasket.api.exceptions.MismatchedWorkbasketPermissionException> extends class <pro.taskana.common.api.exceptions.NotAuthorizedException> in (MismatchedWorkbasketPermissionException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.NotAuthorizedToQueryWorkbasketException> extends class <pro.taskana.common.api.exceptions.TaskanaRuntimeException> in (NotAuthorizedToQueryWorkbasketException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (WorkbasketAccessItemAlreadyExistException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.WorkbasketAlreadyExistException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (WorkbasketAlreadyExistException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.WorkbasketInUseException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (WorkbasketInUseException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.WorkbasketMarkedForDeletionException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (WorkbasketMarkedForDeletionException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> extends class <pro.taskana.common.api.exceptions.NotFoundException> in (WorkbasketNotFoundException.java:0)\
    - Constructor <pro.taskana.workbasket.api.exceptions.NotAuthorizedToQueryWorkbasketException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode, java.lang.Throwable)> has parameter of type <pro.taskana.common.api.exceptions.ErrorCode> in (NotAuthorizedToQueryWorkbasketException.java:0)\
    - Constructor <pro.taskana.workbasket.api.exceptions.NotAuthorizedToQueryWorkbasketException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode, java.lang.Throwable)> calls constructor <pro.taskana.common.api.exceptions.TaskanaRuntimeException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode, java.lang.Throwable)> in (NotAuthorizedToQueryWorkbasketException.java:12)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException.<init>(java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.NotFoundException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketNotFoundException.java:20)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException.<init>(java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (WorkbasketNotFoundException.java:20)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketAlreadyExistException.java:21)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (WorkbasketAlreadyExistException.java:21)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketInUseException.<init>(java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketInUseException.java:22)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketInUseException.<init>(java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (WorkbasketInUseException.java:22)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketMarkedForDeletionException.<init>(java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketMarkedForDeletionException.java:22)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketMarkedForDeletionException.<init>(java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (WorkbasketMarkedForDeletionException.java:22)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketAccessItemAlreadyExistException.java:23)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (WorkbasketAccessItemAlreadyExistException.java:23)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException.<init>(java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.NotFoundException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketNotFoundException.java:29)\
    (5 further dependencies have been omitted...)\
  10. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)
Cycle detected: Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice monitor.api.reports.header -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice workbasket.api.models -> \
                Slice workbasket.api -> \
                Slice workbasket.api.exceptions -> \
                Slice common.internal.util -> \
                Slice common.api.exceptions -> \
                Slice common.api\
  1. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  2. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  3. Dependencies of Slice monitor.api.reports\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report$Builder> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.ColumnHeader> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.ColumnHeader> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder> has type parameter 'H' depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimeIntervalReportBuilder.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TimestampReport$Builder, pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.PriorityColumnHeader> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.WorkbasketReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (WorkbasketReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (WorkbasketReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.ClassificationCategoryReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationCategoryReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader> in (ClassificationReport.java:0)\
    (8 further dependencies have been omitted...)\
  4. Dependencies of Slice monitor.api.reports.header\
    - Constructor <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.<init>(pro.taskana.task.api.TaskState)> has parameter of type <pro.taskana.task.api.TaskState> in (TaskStatusColumnHeader.java:0)\
    - Field <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.state> has type <pro.taskana.task.api.TaskState> in (TaskStatusColumnHeader.java:0)\
    - Method <pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader.getDisplayName()> calls method <pro.taskana.task.api.TaskState.name()> in (TaskStatusColumnHeader.java:17)\
  5. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  6. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.TaskSummary.getWorkbasketSummary()> has return type <pro.taskana.workbasket.api.models.WorkbasketSummary> in (TaskSummary.java:0)\
  7. Dependencies of Slice workbasket.api.models\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomField(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setType(pro.taskana.workbasket.api.WorkbasketType)> has parameter of type <pro.taskana.workbasket.api.WorkbasketType> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.getPermission(pro.taskana.workbasket.api.WorkbasketPermission)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.setPermission(pro.taskana.workbasket.api.WorkbasketPermission, boolean)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomField(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getType()> has return type <pro.taskana.workbasket.api.WorkbasketType> in (WorkbasketSummary.java:0)\
  8. Dependencies of Slice workbasket.api\
    - Method <pro.taskana.workbasket.api.WorkbasketService.addDistributionTarget(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.checkAuthorization(java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.checkAuthorization(java.lang.String, java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketAlreadyExistException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItem(pro.taskana.workbasket.api.models.WorkbasketAccessItem)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItem(pro.taskana.workbasket.api.models.WorkbasketAccessItem)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasket(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketInUseException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasket(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionSources(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionSources(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionTargets(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionTargets(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getWorkbasket(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getWorkbasket(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.setDistributionTargets(java.lang.String, java.util.List)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.setWorkbasketAccessItems(java.lang.String, java.util.List)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.setWorkbasketAccessItems(java.lang.String, java.util.List)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.updateWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
  9. Dependencies of Slice workbasket.api.exceptions\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException.<init>(java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object)> in (WorkbasketNotFoundException.java:20)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (WorkbasketAlreadyExistException.java:21)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketInUseException.<init>(java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object)> in (WorkbasketInUseException.java:22)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketMarkedForDeletionException.<init>(java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object)> in (WorkbasketMarkedForDeletionException.java:22)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (WorkbasketAccessItemAlreadyExistException.java:23)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (WorkbasketNotFoundException.java:29)\
    - Constructor <pro.taskana.workbasket.api.exceptions.MismatchedWorkbasketPermissionException.<init>(java.lang.String, java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (MismatchedWorkbasketPermissionException.java:33)\
    - Constructor <pro.taskana.workbasket.api.exceptions.MismatchedWorkbasketPermissionException.<init>(java.lang.String, java.lang.String, java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (MismatchedWorkbasketPermissionException.java:60)\
  10. Dependencies of Slice common.internal.util\
    - Method <pro.taskana.common.internal.util.CheckedRunnable.lambda$0(pro.taskana.common.internal.util.CheckedRunnable)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedRunnable.java:13)\
    - Method <pro.taskana.common.internal.util.CheckedConsumer.lambda$0(pro.taskana.common.internal.util.CheckedConsumer, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedConsumer.java:14)\
    - Method <pro.taskana.common.internal.util.CheckedFunction.lambda$0(pro.taskana.common.internal.util.CheckedFunction, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedFunction.java:14)\
    - Method <pro.taskana.common.internal.util.CheckedSupplier.lambda$0(pro.taskana.common.internal.util.CheckedSupplier)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedSupplier.java:15)\
    - Method <pro.taskana.common.internal.util.CheckedFunction.lambda$1(pro.taskana.common.internal.util.CheckedFunction, java.lang.Class, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedFunction.java:28)\
    - Method <pro.taskana.common.internal.util.ObjectAttributeChangeDetector.determineChangesInAttributes(java.lang.Object, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (ObjectAttributeChangeDetector.java:33)\
    - Method <pro.taskana.common.internal.util.FileLoaderUtil.openFileFromClasspathOrSystem(java.lang.String, java.lang.Class)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (FileLoaderUtil.java:36)\
    - Method <pro.taskana.common.internal.util.FileLoaderUtil.openFileFromClasspathOrSystem(java.lang.String, java.lang.Class)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (FileLoaderUtil.java:42)\
    - Method <pro.taskana.common.internal.util.ObjectAttributeChangeDetector.determineChangesInAttributes(java.lang.Object, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (ObjectAttributeChangeDetector.java:45)\
  11. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)
Cycle detected: Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice monitor.api.reports.item -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice workbasket.api.models -> \
                Slice workbasket.api -> \
                Slice common.api\
  1. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  2. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  3. Dependencies of Slice monitor.api.reports\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report$Builder> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.TaskQueryItem> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.TaskQueryItem> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.AgeQueryItem> in (TimeIntervalReportBuilder.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TimestampReport$Builder, pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.PriorityQueryItem> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.PriorityQueryItem> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.WorkbasketReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (WorkbasketReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (WorkbasketReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem, pro.taskana.monitor.api.reports.item.QueryItemPreprocessor)> has generic parameter type <pro.taskana.monitor.api.reports.item.QueryItemPreprocessor<I>> with type argument depending on <pro.taskana.monitor.api.reports.item.QueryItemPreprocessor> in (Report.java:0)\
    (8 further dependencies have been omitted...)\
  4. Dependencies of Slice monitor.api.reports.item\
    - Field <pro.taskana.monitor.api.reports.item.TaskQueryItem.state> has type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.getState()> has return type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.setState(pro.taskana.task.api.TaskState)> has parameter of type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
  5. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  6. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.TaskSummary.getWorkbasketSummary()> has return type <pro.taskana.workbasket.api.models.WorkbasketSummary> in (TaskSummary.java:0)\
  7. Dependencies of Slice workbasket.api.models\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomField(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setType(pro.taskana.workbasket.api.WorkbasketType)> has parameter of type <pro.taskana.workbasket.api.WorkbasketType> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.getPermission(pro.taskana.workbasket.api.WorkbasketPermission)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.setPermission(pro.taskana.workbasket.api.WorkbasketPermission, boolean)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomField(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getType()> has return type <pro.taskana.workbasket.api.WorkbasketType> in (WorkbasketSummary.java:0)\
  8. Dependencies of Slice workbasket.api\
    - Class <pro.taskana.workbasket.api.AccessItemQueryColumnName> implements interface <pro.taskana.common.api.QueryColumnName> in (AccessItemQueryColumnName.java:0)\
    - Class <pro.taskana.workbasket.api.WorkbasketQueryColumnName> implements interface <pro.taskana.common.api.QueryColumnName> in (WorkbasketQueryColumnName.java:0)\
    - Interface <pro.taskana.workbasket.api.AbstractWorkbasketAccessItemQuery> extends interface <pro.taskana.common.api.BaseQuery> in (AbstractWorkbasketAccessItemQuery.java:0)\
    - Interface <pro.taskana.workbasket.api.WorkbasketAccessItemQuery> extends interface <pro.taskana.common.api.BaseQuery> in (WorkbasketAccessItemQuery.java:0)\
    - Interface <pro.taskana.workbasket.api.WorkbasketQuery> extends interface <pro.taskana.common.api.BaseQuery> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.AbstractWorkbasketAccessItemQuery.orderByAccessId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (AbstractWorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.AbstractWorkbasketAccessItemQuery.orderById(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (AbstractWorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.AbstractWorkbasketAccessItemQuery.orderByWorkbasketId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (AbstractWorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketAccessItemQuery.orderByAccessId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketAccessItemQuery.orderById(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketAccessItemQuery.orderByWorkbasketId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketAccessItemQuery.orderByWorkbasketKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.createdWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.modifiedWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField, pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByDescription(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByDomain(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByName(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByOrgLevel1(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    (6 further dependencies have been omitted...)
Cycle detected: Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice monitor.api.reports.item -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice workbasket.api.models -> \
                Slice workbasket.api -> \
                Slice common.api.exceptions -> \
                Slice common.api\
  1. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  2. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  3. Dependencies of Slice monitor.api.reports\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report$Builder> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.TaskQueryItem> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.TaskQueryItem> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.AgeQueryItem> in (TimeIntervalReportBuilder.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TimestampReport$Builder, pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.PriorityQueryItem> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.PriorityQueryItem> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.WorkbasketReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (WorkbasketReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (WorkbasketReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem, pro.taskana.monitor.api.reports.item.QueryItemPreprocessor)> has generic parameter type <pro.taskana.monitor.api.reports.item.QueryItemPreprocessor<I>> with type argument depending on <pro.taskana.monitor.api.reports.item.QueryItemPreprocessor> in (Report.java:0)\
    (8 further dependencies have been omitted...)\
  4. Dependencies of Slice monitor.api.reports.item\
    - Field <pro.taskana.monitor.api.reports.item.TaskQueryItem.state> has type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.getState()> has return type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.setState(pro.taskana.task.api.TaskState)> has parameter of type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
  5. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  6. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.TaskSummary.getWorkbasketSummary()> has return type <pro.taskana.workbasket.api.models.WorkbasketSummary> in (TaskSummary.java:0)\
  7. Dependencies of Slice workbasket.api.models\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomField(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setType(pro.taskana.workbasket.api.WorkbasketType)> has parameter of type <pro.taskana.workbasket.api.WorkbasketType> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.getPermission(pro.taskana.workbasket.api.WorkbasketPermission)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.setPermission(pro.taskana.workbasket.api.WorkbasketPermission, boolean)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomField(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getType()> has return type <pro.taskana.workbasket.api.WorkbasketType> in (WorkbasketSummary.java:0)\
  8. Dependencies of Slice workbasket.api\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.accessIdsHavePermission(pro.taskana.workbasket.api.WorkbasketPermission, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.accessIdsHavePermission(pro.taskana.workbasket.api.WorkbasketPermission, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.addDistributionTarget(java.lang.String, java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.checkAuthorization(java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.checkAuthorization(java.lang.String, java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.common.api.exceptions.DomainNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItem(pro.taskana.workbasket.api.models.WorkbasketAccessItem)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItem(pro.taskana.workbasket.api.models.WorkbasketAccessItem)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItemQuery()> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasket(java.lang.String)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasket(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasketAccessItem(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasketAccessItemsForAccessId(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbaskets(java.util.List)> has generic return type <pro.taskana.common.api.BulkOperationResults<java.lang.String, pro.taskana.common.api.exceptions.TaskanaException>> with type argument depending on <pro.taskana.common.api.exceptions.TaskanaException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbaskets(java.util.List)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbaskets(java.util.List)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionSources(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionSources(java.lang.String, java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    (14 further dependencies have been omitted...)\
  9. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)
Cycle detected: Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice monitor.api.reports.item -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice workbasket.api.models -> \
                Slice workbasket.api -> \
                Slice workbasket.api.exceptions -> \
                Slice common.api.exceptions -> \
                Slice common.api\
  1. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  2. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  3. Dependencies of Slice monitor.api.reports\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report$Builder> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.TaskQueryItem> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.TaskQueryItem> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.AgeQueryItem> in (TimeIntervalReportBuilder.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TimestampReport$Builder, pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.PriorityQueryItem> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.PriorityQueryItem> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.WorkbasketReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (WorkbasketReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (WorkbasketReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem, pro.taskana.monitor.api.reports.item.QueryItemPreprocessor)> has generic parameter type <pro.taskana.monitor.api.reports.item.QueryItemPreprocessor<I>> with type argument depending on <pro.taskana.monitor.api.reports.item.QueryItemPreprocessor> in (Report.java:0)\
    (8 further dependencies have been omitted...)\
  4. Dependencies of Slice monitor.api.reports.item\
    - Field <pro.taskana.monitor.api.reports.item.TaskQueryItem.state> has type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.getState()> has return type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.setState(pro.taskana.task.api.TaskState)> has parameter of type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
  5. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  6. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.TaskSummary.getWorkbasketSummary()> has return type <pro.taskana.workbasket.api.models.WorkbasketSummary> in (TaskSummary.java:0)\
  7. Dependencies of Slice workbasket.api.models\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomField(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setType(pro.taskana.workbasket.api.WorkbasketType)> has parameter of type <pro.taskana.workbasket.api.WorkbasketType> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.getPermission(pro.taskana.workbasket.api.WorkbasketPermission)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.setPermission(pro.taskana.workbasket.api.WorkbasketPermission, boolean)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomField(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getType()> has return type <pro.taskana.workbasket.api.WorkbasketType> in (WorkbasketSummary.java:0)\
  8. Dependencies of Slice workbasket.api\
    - Method <pro.taskana.workbasket.api.WorkbasketService.addDistributionTarget(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.checkAuthorization(java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.checkAuthorization(java.lang.String, java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketAlreadyExistException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItem(pro.taskana.workbasket.api.models.WorkbasketAccessItem)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItem(pro.taskana.workbasket.api.models.WorkbasketAccessItem)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasket(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketInUseException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasket(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionSources(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionSources(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionTargets(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionTargets(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getWorkbasket(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getWorkbasket(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.setDistributionTargets(java.lang.String, java.util.List)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.setWorkbasketAccessItems(java.lang.String, java.util.List)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.setWorkbasketAccessItems(java.lang.String, java.util.List)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.updateWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
  9. Dependencies of Slice workbasket.api.exceptions\
    - Class <pro.taskana.workbasket.api.exceptions.MismatchedWorkbasketPermissionException> extends class <pro.taskana.common.api.exceptions.NotAuthorizedException> in (MismatchedWorkbasketPermissionException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.NotAuthorizedToQueryWorkbasketException> extends class <pro.taskana.common.api.exceptions.TaskanaRuntimeException> in (NotAuthorizedToQueryWorkbasketException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (WorkbasketAccessItemAlreadyExistException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.WorkbasketAlreadyExistException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (WorkbasketAlreadyExistException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.WorkbasketInUseException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (WorkbasketInUseException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.WorkbasketMarkedForDeletionException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (WorkbasketMarkedForDeletionException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> extends class <pro.taskana.common.api.exceptions.NotFoundException> in (WorkbasketNotFoundException.java:0)\
    - Constructor <pro.taskana.workbasket.api.exceptions.NotAuthorizedToQueryWorkbasketException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode, java.lang.Throwable)> has parameter of type <pro.taskana.common.api.exceptions.ErrorCode> in (NotAuthorizedToQueryWorkbasketException.java:0)\
    - Constructor <pro.taskana.workbasket.api.exceptions.NotAuthorizedToQueryWorkbasketException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode, java.lang.Throwable)> calls constructor <pro.taskana.common.api.exceptions.TaskanaRuntimeException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode, java.lang.Throwable)> in (NotAuthorizedToQueryWorkbasketException.java:12)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException.<init>(java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.NotFoundException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketNotFoundException.java:20)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException.<init>(java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (WorkbasketNotFoundException.java:20)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketAlreadyExistException.java:21)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (WorkbasketAlreadyExistException.java:21)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketInUseException.<init>(java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketInUseException.java:22)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketInUseException.<init>(java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (WorkbasketInUseException.java:22)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketMarkedForDeletionException.<init>(java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketMarkedForDeletionException.java:22)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketMarkedForDeletionException.<init>(java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (WorkbasketMarkedForDeletionException.java:22)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketAccessItemAlreadyExistException.java:23)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (WorkbasketAccessItemAlreadyExistException.java:23)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException.<init>(java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.NotFoundException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketNotFoundException.java:29)\
    (5 further dependencies have been omitted...)\
  10. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)
Cycle detected: Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice monitor.api.reports.item -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice workbasket.api.models -> \
                Slice workbasket.api -> \
                Slice workbasket.api.exceptions -> \
                Slice common.internal.util -> \
                Slice common.api.exceptions -> \
                Slice common.api\
  1. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  2. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  3. Dependencies of Slice monitor.api.reports\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationCategoryReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (ClassificationCategoryReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.ClassificationReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.ClassificationReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (ClassificationReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report$Builder> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.Report> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (Report.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (TaskCustomFieldValueReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.TaskQueryItem> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TaskStatusReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TaskQueryItem, pro.taskana.monitor.api.reports.header.TaskStatusColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.TaskQueryItem> in (TaskStatusReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.AgeQueryItem> in (TimeIntervalReportBuilder.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.TimestampReport$Builder, pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.TimestampReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.TimestampQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> has generic interface <pro.taskana.monitor.api.reports.Report$Builder<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.PriorityQueryItem> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketPriorityReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.PriorityQueryItem, pro.taskana.monitor.api.reports.header.PriorityColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.PriorityQueryItem> in (WorkbasketPriorityReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> has generic interface <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder<pro.taskana.monitor.api.reports.WorkbasketReport$Builder, pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (WorkbasketReport.java:0)\
    - Class <pro.taskana.monitor.api.reports.WorkbasketReport> has generic superclass <pro.taskana.monitor.api.reports.Report<pro.taskana.monitor.api.reports.item.MonitorQueryItem, pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader>> with type argument depending on <pro.taskana.monitor.api.reports.item.MonitorQueryItem> in (WorkbasketReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem, pro.taskana.monitor.api.reports.item.QueryItemPreprocessor)> has generic parameter type <pro.taskana.monitor.api.reports.item.QueryItemPreprocessor<I>> with type argument depending on <pro.taskana.monitor.api.reports.item.QueryItemPreprocessor> in (Report.java:0)\
    (8 further dependencies have been omitted...)\
  4. Dependencies of Slice monitor.api.reports.item\
    - Field <pro.taskana.monitor.api.reports.item.TaskQueryItem.state> has type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.getState()> has return type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.setState(pro.taskana.task.api.TaskState)> has parameter of type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
  5. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  6. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.TaskSummary.getWorkbasketSummary()> has return type <pro.taskana.workbasket.api.models.WorkbasketSummary> in (TaskSummary.java:0)\
  7. Dependencies of Slice workbasket.api.models\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomField(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setType(pro.taskana.workbasket.api.WorkbasketType)> has parameter of type <pro.taskana.workbasket.api.WorkbasketType> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.getPermission(pro.taskana.workbasket.api.WorkbasketPermission)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.setPermission(pro.taskana.workbasket.api.WorkbasketPermission, boolean)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomField(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getType()> has return type <pro.taskana.workbasket.api.WorkbasketType> in (WorkbasketSummary.java:0)\
  8. Dependencies of Slice workbasket.api\
    - Method <pro.taskana.workbasket.api.WorkbasketService.addDistributionTarget(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.checkAuthorization(java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.checkAuthorization(java.lang.String, java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketAlreadyExistException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItem(pro.taskana.workbasket.api.models.WorkbasketAccessItem)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItem(pro.taskana.workbasket.api.models.WorkbasketAccessItem)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasket(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketInUseException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasket(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionSources(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionSources(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionTargets(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionTargets(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getWorkbasket(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getWorkbasket(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.setDistributionTargets(java.lang.String, java.util.List)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.setWorkbasketAccessItems(java.lang.String, java.util.List)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.setWorkbasketAccessItems(java.lang.String, java.util.List)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.updateWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
  9. Dependencies of Slice workbasket.api.exceptions\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException.<init>(java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object)> in (WorkbasketNotFoundException.java:20)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (WorkbasketAlreadyExistException.java:21)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketInUseException.<init>(java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object)> in (WorkbasketInUseException.java:22)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketMarkedForDeletionException.<init>(java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object)> in (WorkbasketMarkedForDeletionException.java:22)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (WorkbasketAccessItemAlreadyExistException.java:23)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (WorkbasketNotFoundException.java:29)\
    - Constructor <pro.taskana.workbasket.api.exceptions.MismatchedWorkbasketPermissionException.<init>(java.lang.String, java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (MismatchedWorkbasketPermissionException.java:33)\
    - Constructor <pro.taskana.workbasket.api.exceptions.MismatchedWorkbasketPermissionException.<init>(java.lang.String, java.lang.String, java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (MismatchedWorkbasketPermissionException.java:60)\
  10. Dependencies of Slice common.internal.util\
    - Method <pro.taskana.common.internal.util.CheckedRunnable.lambda$0(pro.taskana.common.internal.util.CheckedRunnable)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedRunnable.java:13)\
    - Method <pro.taskana.common.internal.util.CheckedConsumer.lambda$0(pro.taskana.common.internal.util.CheckedConsumer, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedConsumer.java:14)\
    - Method <pro.taskana.common.internal.util.CheckedFunction.lambda$0(pro.taskana.common.internal.util.CheckedFunction, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedFunction.java:14)\
    - Method <pro.taskana.common.internal.util.CheckedSupplier.lambda$0(pro.taskana.common.internal.util.CheckedSupplier)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedSupplier.java:15)\
    - Method <pro.taskana.common.internal.util.CheckedFunction.lambda$1(pro.taskana.common.internal.util.CheckedFunction, java.lang.Class, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedFunction.java:28)\
    - Method <pro.taskana.common.internal.util.ObjectAttributeChangeDetector.determineChangesInAttributes(java.lang.Object, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (ObjectAttributeChangeDetector.java:33)\
    - Method <pro.taskana.common.internal.util.FileLoaderUtil.openFileFromClasspathOrSystem(java.lang.String, java.lang.Class)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (FileLoaderUtil.java:36)\
    - Method <pro.taskana.common.internal.util.FileLoaderUtil.openFileFromClasspathOrSystem(java.lang.String, java.lang.Class)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (FileLoaderUtil.java:42)\
    - Method <pro.taskana.common.internal.util.ObjectAttributeChangeDetector.determineChangesInAttributes(java.lang.Object, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (ObjectAttributeChangeDetector.java:45)\
  11. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)
Cycle detected: Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice monitor.api.reports.row -> \
                Slice monitor.api.reports.item -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice workbasket.api.models -> \
                Slice workbasket.api -> \
                Slice common.api\
  1. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  2. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  3. Dependencies of Slice monitor.api.reports\
    - Field <pro.taskana.monitor.api.reports.Report.reportRows> has generic type <java.util.Map<java.lang.String, pro.taskana.monitor.api.reports.row.Row<I>>> with type argument depending on <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Field <pro.taskana.monitor.api.reports.Report.sumRow> has type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.DetailedClassificationRow> in (ClassificationReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.Row> in (ClassificationReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.DetailedClassificationRow> in (ClassificationReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.Row> in (ClassificationReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.createRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.getRows()> has generic return type <java.util.Map<java.lang.String, pro.taskana.monitor.api.reports.row.Row<I>>> with type argument depending on <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.getSumRow()> has return type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.lambda$5(java.util.Map, pro.taskana.monitor.api.reports.row.Row)> has parameter of type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.Row> in (TimestampReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.TimestampRow> in (TimestampReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.Row> in (TimestampReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.TimestampRow> in (TimestampReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.createRow(java.lang.String, int)> calls constructor <pro.taskana.monitor.api.reports.row.TimestampRow.<init>(java.lang.String, int)> in (TimestampReport.java:39)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem)> calls method <pro.taskana.monitor.api.reports.row.Row.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> in (Report.java:74)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem)> calls method <pro.taskana.monitor.api.reports.row.Row.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> in (Report.java:75)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem)> calls method <pro.taskana.monitor.api.reports.row.Row.addItem(pro.taskana.monitor.api.reports.item.QueryItem, int)> in (Report.java:82)\
    (5 further dependencies have been omitted...)\
  4. Dependencies of Slice monitor.api.reports.row\
    - Class <pro.taskana.monitor.api.reports.row.DetailedClassificationRow> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (DetailedClassificationRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.FoldableRow> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (FoldableRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.Row> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (Row.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.SingleRow> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (SingleRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel1Row> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel2Row> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel3Row> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.TimestampRow> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.DetailedClassificationRow.buildRow(java.lang.String, int)> has generic return type <pro.taskana.monitor.api.reports.row.Row<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (DetailedClassificationRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.DetailedClassificationRow.getFoldableRow(java.lang.String)> has generic return type <pro.taskana.monitor.api.reports.row.SingleRow<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (DetailedClassificationRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.DetailedClassificationRow.lambda$0(pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (DetailedClassificationRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.FoldableRow.addItem(pro.taskana.monitor.api.reports.item.QueryItem, int)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (FoldableRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.FoldableRow.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (FoldableRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.Row.addItem(pro.taskana.monitor.api.reports.item.QueryItem, int)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (Row.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.Row.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (Row.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.SingleRow.addItem(pro.taskana.monitor.api.reports.item.QueryItem, int)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (SingleRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.SingleRow.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (SingleRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel3Row.buildRow(java.lang.String, int)> has generic return type <pro.taskana.monitor.api.reports.row.Row<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel3Row.getFoldableRow(java.lang.String)> has generic return type <pro.taskana.monitor.api.reports.row.SingleRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.row.TimestampRow.<init>(java.lang.String, int)> references method <pro.taskana.monitor.api.reports.item.TimestampQueryItem.getOrgLevel1()> in (TimestampRow.java:13)\
    (7 further dependencies have been omitted...)\
  5. Dependencies of Slice monitor.api.reports.item\
    - Field <pro.taskana.monitor.api.reports.item.TaskQueryItem.state> has type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.getState()> has return type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.setState(pro.taskana.task.api.TaskState)> has parameter of type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
  6. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  7. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.TaskSummary.getWorkbasketSummary()> has return type <pro.taskana.workbasket.api.models.WorkbasketSummary> in (TaskSummary.java:0)\
  8. Dependencies of Slice workbasket.api.models\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomField(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setType(pro.taskana.workbasket.api.WorkbasketType)> has parameter of type <pro.taskana.workbasket.api.WorkbasketType> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.getPermission(pro.taskana.workbasket.api.WorkbasketPermission)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.setPermission(pro.taskana.workbasket.api.WorkbasketPermission, boolean)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomField(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getType()> has return type <pro.taskana.workbasket.api.WorkbasketType> in (WorkbasketSummary.java:0)\
  9. Dependencies of Slice workbasket.api\
    - Class <pro.taskana.workbasket.api.AccessItemQueryColumnName> implements interface <pro.taskana.common.api.QueryColumnName> in (AccessItemQueryColumnName.java:0)\
    - Class <pro.taskana.workbasket.api.WorkbasketQueryColumnName> implements interface <pro.taskana.common.api.QueryColumnName> in (WorkbasketQueryColumnName.java:0)\
    - Interface <pro.taskana.workbasket.api.AbstractWorkbasketAccessItemQuery> extends interface <pro.taskana.common.api.BaseQuery> in (AbstractWorkbasketAccessItemQuery.java:0)\
    - Interface <pro.taskana.workbasket.api.WorkbasketAccessItemQuery> extends interface <pro.taskana.common.api.BaseQuery> in (WorkbasketAccessItemQuery.java:0)\
    - Interface <pro.taskana.workbasket.api.WorkbasketQuery> extends interface <pro.taskana.common.api.BaseQuery> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.AbstractWorkbasketAccessItemQuery.orderByAccessId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (AbstractWorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.AbstractWorkbasketAccessItemQuery.orderById(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (AbstractWorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.AbstractWorkbasketAccessItemQuery.orderByWorkbasketId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (AbstractWorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketAccessItemQuery.orderByAccessId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketAccessItemQuery.orderById(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketAccessItemQuery.orderByWorkbasketId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketAccessItemQuery.orderByWorkbasketKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.createdWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.modifiedWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField, pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByDescription(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByDomain(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByName(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByOrgLevel1(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    (6 further dependencies have been omitted...)
Cycle detected: Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice monitor.api.reports.row -> \
                Slice monitor.api.reports.item -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice workbasket.api.models -> \
                Slice workbasket.api -> \
                Slice common.api.exceptions -> \
                Slice common.api\
  1. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  2. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  3. Dependencies of Slice monitor.api.reports\
    - Field <pro.taskana.monitor.api.reports.Report.reportRows> has generic type <java.util.Map<java.lang.String, pro.taskana.monitor.api.reports.row.Row<I>>> with type argument depending on <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Field <pro.taskana.monitor.api.reports.Report.sumRow> has type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.DetailedClassificationRow> in (ClassificationReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.Row> in (ClassificationReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.DetailedClassificationRow> in (ClassificationReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.Row> in (ClassificationReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.createRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.getRows()> has generic return type <java.util.Map<java.lang.String, pro.taskana.monitor.api.reports.row.Row<I>>> with type argument depending on <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.getSumRow()> has return type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.lambda$5(java.util.Map, pro.taskana.monitor.api.reports.row.Row)> has parameter of type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.Row> in (TimestampReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.TimestampRow> in (TimestampReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.Row> in (TimestampReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.TimestampRow> in (TimestampReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.createRow(java.lang.String, int)> calls constructor <pro.taskana.monitor.api.reports.row.TimestampRow.<init>(java.lang.String, int)> in (TimestampReport.java:39)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem)> calls method <pro.taskana.monitor.api.reports.row.Row.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> in (Report.java:74)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem)> calls method <pro.taskana.monitor.api.reports.row.Row.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> in (Report.java:75)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem)> calls method <pro.taskana.monitor.api.reports.row.Row.addItem(pro.taskana.monitor.api.reports.item.QueryItem, int)> in (Report.java:82)\
    (5 further dependencies have been omitted...)\
  4. Dependencies of Slice monitor.api.reports.row\
    - Class <pro.taskana.monitor.api.reports.row.DetailedClassificationRow> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (DetailedClassificationRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.FoldableRow> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (FoldableRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.Row> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (Row.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.SingleRow> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (SingleRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel1Row> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel2Row> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel3Row> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.TimestampRow> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.DetailedClassificationRow.buildRow(java.lang.String, int)> has generic return type <pro.taskana.monitor.api.reports.row.Row<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (DetailedClassificationRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.DetailedClassificationRow.getFoldableRow(java.lang.String)> has generic return type <pro.taskana.monitor.api.reports.row.SingleRow<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (DetailedClassificationRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.DetailedClassificationRow.lambda$0(pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (DetailedClassificationRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.FoldableRow.addItem(pro.taskana.monitor.api.reports.item.QueryItem, int)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (FoldableRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.FoldableRow.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (FoldableRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.Row.addItem(pro.taskana.monitor.api.reports.item.QueryItem, int)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (Row.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.Row.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (Row.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.SingleRow.addItem(pro.taskana.monitor.api.reports.item.QueryItem, int)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (SingleRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.SingleRow.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (SingleRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel3Row.buildRow(java.lang.String, int)> has generic return type <pro.taskana.monitor.api.reports.row.Row<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel3Row.getFoldableRow(java.lang.String)> has generic return type <pro.taskana.monitor.api.reports.row.SingleRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.row.TimestampRow.<init>(java.lang.String, int)> references method <pro.taskana.monitor.api.reports.item.TimestampQueryItem.getOrgLevel1()> in (TimestampRow.java:13)\
    (7 further dependencies have been omitted...)\
  5. Dependencies of Slice monitor.api.reports.item\
    - Field <pro.taskana.monitor.api.reports.item.TaskQueryItem.state> has type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.getState()> has return type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.setState(pro.taskana.task.api.TaskState)> has parameter of type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
  6. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  7. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.TaskSummary.getWorkbasketSummary()> has return type <pro.taskana.workbasket.api.models.WorkbasketSummary> in (TaskSummary.java:0)\
  8. Dependencies of Slice workbasket.api.models\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomField(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setType(pro.taskana.workbasket.api.WorkbasketType)> has parameter of type <pro.taskana.workbasket.api.WorkbasketType> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.getPermission(pro.taskana.workbasket.api.WorkbasketPermission)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.setPermission(pro.taskana.workbasket.api.WorkbasketPermission, boolean)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomField(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getType()> has return type <pro.taskana.workbasket.api.WorkbasketType> in (WorkbasketSummary.java:0)\
  9. Dependencies of Slice workbasket.api\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.accessIdsHavePermission(pro.taskana.workbasket.api.WorkbasketPermission, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.accessIdsHavePermission(pro.taskana.workbasket.api.WorkbasketPermission, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.addDistributionTarget(java.lang.String, java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.checkAuthorization(java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.checkAuthorization(java.lang.String, java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.common.api.exceptions.DomainNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItem(pro.taskana.workbasket.api.models.WorkbasketAccessItem)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItem(pro.taskana.workbasket.api.models.WorkbasketAccessItem)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItemQuery()> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasket(java.lang.String)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasket(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasketAccessItem(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasketAccessItemsForAccessId(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbaskets(java.util.List)> has generic return type <pro.taskana.common.api.BulkOperationResults<java.lang.String, pro.taskana.common.api.exceptions.TaskanaException>> with type argument depending on <pro.taskana.common.api.exceptions.TaskanaException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbaskets(java.util.List)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbaskets(java.util.List)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionSources(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionSources(java.lang.String, java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    (14 further dependencies have been omitted...)\
  10. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)
Cycle detected: Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice monitor.api.reports.row -> \
                Slice monitor.api.reports.item -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice workbasket.api.models -> \
                Slice workbasket.api -> \
                Slice workbasket.api.exceptions -> \
                Slice common.api.exceptions -> \
                Slice common.api\
  1. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  2. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  3. Dependencies of Slice monitor.api.reports\
    - Field <pro.taskana.monitor.api.reports.Report.reportRows> has generic type <java.util.Map<java.lang.String, pro.taskana.monitor.api.reports.row.Row<I>>> with type argument depending on <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Field <pro.taskana.monitor.api.reports.Report.sumRow> has type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.DetailedClassificationRow> in (ClassificationReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.Row> in (ClassificationReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.DetailedClassificationRow> in (ClassificationReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.Row> in (ClassificationReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.createRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.getRows()> has generic return type <java.util.Map<java.lang.String, pro.taskana.monitor.api.reports.row.Row<I>>> with type argument depending on <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.getSumRow()> has return type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.lambda$5(java.util.Map, pro.taskana.monitor.api.reports.row.Row)> has parameter of type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.Row> in (TimestampReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.TimestampRow> in (TimestampReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.Row> in (TimestampReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.TimestampRow> in (TimestampReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.createRow(java.lang.String, int)> calls constructor <pro.taskana.monitor.api.reports.row.TimestampRow.<init>(java.lang.String, int)> in (TimestampReport.java:39)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem)> calls method <pro.taskana.monitor.api.reports.row.Row.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> in (Report.java:74)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem)> calls method <pro.taskana.monitor.api.reports.row.Row.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> in (Report.java:75)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem)> calls method <pro.taskana.monitor.api.reports.row.Row.addItem(pro.taskana.monitor.api.reports.item.QueryItem, int)> in (Report.java:82)\
    (5 further dependencies have been omitted...)\
  4. Dependencies of Slice monitor.api.reports.row\
    - Class <pro.taskana.monitor.api.reports.row.DetailedClassificationRow> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (DetailedClassificationRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.FoldableRow> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (FoldableRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.Row> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (Row.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.SingleRow> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (SingleRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel1Row> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel2Row> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel3Row> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.TimestampRow> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.DetailedClassificationRow.buildRow(java.lang.String, int)> has generic return type <pro.taskana.monitor.api.reports.row.Row<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (DetailedClassificationRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.DetailedClassificationRow.getFoldableRow(java.lang.String)> has generic return type <pro.taskana.monitor.api.reports.row.SingleRow<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (DetailedClassificationRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.DetailedClassificationRow.lambda$0(pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (DetailedClassificationRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.FoldableRow.addItem(pro.taskana.monitor.api.reports.item.QueryItem, int)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (FoldableRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.FoldableRow.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (FoldableRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.Row.addItem(pro.taskana.monitor.api.reports.item.QueryItem, int)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (Row.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.Row.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (Row.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.SingleRow.addItem(pro.taskana.monitor.api.reports.item.QueryItem, int)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (SingleRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.SingleRow.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (SingleRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel3Row.buildRow(java.lang.String, int)> has generic return type <pro.taskana.monitor.api.reports.row.Row<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel3Row.getFoldableRow(java.lang.String)> has generic return type <pro.taskana.monitor.api.reports.row.SingleRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.row.TimestampRow.<init>(java.lang.String, int)> references method <pro.taskana.monitor.api.reports.item.TimestampQueryItem.getOrgLevel1()> in (TimestampRow.java:13)\
    (7 further dependencies have been omitted...)\
  5. Dependencies of Slice monitor.api.reports.item\
    - Field <pro.taskana.monitor.api.reports.item.TaskQueryItem.state> has type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.getState()> has return type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.setState(pro.taskana.task.api.TaskState)> has parameter of type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
  6. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  7. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.TaskSummary.getWorkbasketSummary()> has return type <pro.taskana.workbasket.api.models.WorkbasketSummary> in (TaskSummary.java:0)\
  8. Dependencies of Slice workbasket.api.models\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomField(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setType(pro.taskana.workbasket.api.WorkbasketType)> has parameter of type <pro.taskana.workbasket.api.WorkbasketType> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.getPermission(pro.taskana.workbasket.api.WorkbasketPermission)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.setPermission(pro.taskana.workbasket.api.WorkbasketPermission, boolean)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomField(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getType()> has return type <pro.taskana.workbasket.api.WorkbasketType> in (WorkbasketSummary.java:0)\
  9. Dependencies of Slice workbasket.api\
    - Method <pro.taskana.workbasket.api.WorkbasketService.addDistributionTarget(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.checkAuthorization(java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.checkAuthorization(java.lang.String, java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketAlreadyExistException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItem(pro.taskana.workbasket.api.models.WorkbasketAccessItem)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItem(pro.taskana.workbasket.api.models.WorkbasketAccessItem)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasket(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketInUseException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasket(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionSources(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionSources(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionTargets(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionTargets(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getWorkbasket(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getWorkbasket(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.setDistributionTargets(java.lang.String, java.util.List)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.setWorkbasketAccessItems(java.lang.String, java.util.List)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.setWorkbasketAccessItems(java.lang.String, java.util.List)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.updateWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
  10. Dependencies of Slice workbasket.api.exceptions\
    - Class <pro.taskana.workbasket.api.exceptions.MismatchedWorkbasketPermissionException> extends class <pro.taskana.common.api.exceptions.NotAuthorizedException> in (MismatchedWorkbasketPermissionException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.NotAuthorizedToQueryWorkbasketException> extends class <pro.taskana.common.api.exceptions.TaskanaRuntimeException> in (NotAuthorizedToQueryWorkbasketException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (WorkbasketAccessItemAlreadyExistException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.WorkbasketAlreadyExistException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (WorkbasketAlreadyExistException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.WorkbasketInUseException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (WorkbasketInUseException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.WorkbasketMarkedForDeletionException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (WorkbasketMarkedForDeletionException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> extends class <pro.taskana.common.api.exceptions.NotFoundException> in (WorkbasketNotFoundException.java:0)\
    - Constructor <pro.taskana.workbasket.api.exceptions.NotAuthorizedToQueryWorkbasketException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode, java.lang.Throwable)> has parameter of type <pro.taskana.common.api.exceptions.ErrorCode> in (NotAuthorizedToQueryWorkbasketException.java:0)\
    - Constructor <pro.taskana.workbasket.api.exceptions.NotAuthorizedToQueryWorkbasketException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode, java.lang.Throwable)> calls constructor <pro.taskana.common.api.exceptions.TaskanaRuntimeException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode, java.lang.Throwable)> in (NotAuthorizedToQueryWorkbasketException.java:12)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException.<init>(java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.NotFoundException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketNotFoundException.java:20)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException.<init>(java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (WorkbasketNotFoundException.java:20)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketAlreadyExistException.java:21)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (WorkbasketAlreadyExistException.java:21)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketInUseException.<init>(java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketInUseException.java:22)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketInUseException.<init>(java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (WorkbasketInUseException.java:22)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketMarkedForDeletionException.<init>(java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketMarkedForDeletionException.java:22)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketMarkedForDeletionException.<init>(java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (WorkbasketMarkedForDeletionException.java:22)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketAccessItemAlreadyExistException.java:23)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (WorkbasketAccessItemAlreadyExistException.java:23)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException.<init>(java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.NotFoundException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketNotFoundException.java:29)\
    (5 further dependencies have been omitted...)\
  11. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)
Cycle detected: Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice monitor.api.reports.row -> \
                Slice monitor.api.reports.item -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice workbasket.api.models -> \
                Slice workbasket.api -> \
                Slice workbasket.api.exceptions -> \
                Slice common.internal.util -> \
                Slice common.api.exceptions -> \
                Slice common.api\
  1. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  2. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  3. Dependencies of Slice monitor.api.reports\
    - Field <pro.taskana.monitor.api.reports.Report.reportRows> has generic type <java.util.Map<java.lang.String, pro.taskana.monitor.api.reports.row.Row<I>>> with type argument depending on <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Field <pro.taskana.monitor.api.reports.Report.sumRow> has type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.DetailedClassificationRow> in (ClassificationReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.Row> in (ClassificationReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.DetailedClassificationRow> in (ClassificationReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.ClassificationReport$DetailedClassificationReport.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.Row> in (ClassificationReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.createRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.getRows()> has generic return type <java.util.Map<java.lang.String, pro.taskana.monitor.api.reports.row.Row<I>>> with type argument depending on <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.getSumRow()> has return type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.Report.lambda$5(java.util.Map, pro.taskana.monitor.api.reports.row.Row)> has parameter of type <pro.taskana.monitor.api.reports.row.Row> in (Report.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.Row> in (TimestampReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.createRow(java.lang.String, int)> has return type <pro.taskana.monitor.api.reports.row.TimestampRow> in (TimestampReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.Row> in (TimestampReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.getRow(java.lang.String)> has return type <pro.taskana.monitor.api.reports.row.TimestampRow> in (TimestampReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimestampReport.createRow(java.lang.String, int)> calls constructor <pro.taskana.monitor.api.reports.row.TimestampRow.<init>(java.lang.String, int)> in (TimestampReport.java:39)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem)> calls method <pro.taskana.monitor.api.reports.row.Row.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> in (Report.java:74)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem)> calls method <pro.taskana.monitor.api.reports.row.Row.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> in (Report.java:75)\
    - Method <pro.taskana.monitor.api.reports.Report.addItem(pro.taskana.monitor.api.reports.item.QueryItem)> calls method <pro.taskana.monitor.api.reports.row.Row.addItem(pro.taskana.monitor.api.reports.item.QueryItem, int)> in (Report.java:82)\
    (5 further dependencies have been omitted...)\
  4. Dependencies of Slice monitor.api.reports.row\
    - Class <pro.taskana.monitor.api.reports.row.DetailedClassificationRow> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (DetailedClassificationRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.FoldableRow> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (FoldableRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.Row> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (Row.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.SingleRow> has type parameter 'I' depending on <pro.taskana.monitor.api.reports.item.QueryItem> in (SingleRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel1Row> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel2Row> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel3Row> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Class <pro.taskana.monitor.api.reports.row.TimestampRow> has generic superclass <pro.taskana.monitor.api.reports.row.FoldableRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.DetailedClassificationRow.buildRow(java.lang.String, int)> has generic return type <pro.taskana.monitor.api.reports.row.Row<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (DetailedClassificationRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.DetailedClassificationRow.getFoldableRow(java.lang.String)> has generic return type <pro.taskana.monitor.api.reports.row.SingleRow<pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (DetailedClassificationRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.DetailedClassificationRow.lambda$0(pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.DetailedMonitorQueryItem> in (DetailedClassificationRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.FoldableRow.addItem(pro.taskana.monitor.api.reports.item.QueryItem, int)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (FoldableRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.FoldableRow.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (FoldableRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.Row.addItem(pro.taskana.monitor.api.reports.item.QueryItem, int)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (Row.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.Row.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (Row.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.SingleRow.addItem(pro.taskana.monitor.api.reports.item.QueryItem, int)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (SingleRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.SingleRow.updateTotalValue(pro.taskana.monitor.api.reports.item.QueryItem)> has parameter of type <pro.taskana.monitor.api.reports.item.QueryItem> in (SingleRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel3Row.buildRow(java.lang.String, int)> has generic return type <pro.taskana.monitor.api.reports.row.Row<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Method <pro.taskana.monitor.api.reports.row.TimestampRow$OrgLevel3Row.getFoldableRow(java.lang.String)> has generic return type <pro.taskana.monitor.api.reports.row.SingleRow<pro.taskana.monitor.api.reports.item.TimestampQueryItem>> with type argument depending on <pro.taskana.monitor.api.reports.item.TimestampQueryItem> in (TimestampRow.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.row.TimestampRow.<init>(java.lang.String, int)> references method <pro.taskana.monitor.api.reports.item.TimestampQueryItem.getOrgLevel1()> in (TimestampRow.java:13)\
    (7 further dependencies have been omitted...)\
  5. Dependencies of Slice monitor.api.reports.item\
    - Field <pro.taskana.monitor.api.reports.item.TaskQueryItem.state> has type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.getState()> has return type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
    - Method <pro.taskana.monitor.api.reports.item.TaskQueryItem.setState(pro.taskana.task.api.TaskState)> has parameter of type <pro.taskana.task.api.TaskState> in (TaskQueryItem.java:0)\
  6. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  7. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.TaskSummary.getWorkbasketSummary()> has return type <pro.taskana.workbasket.api.models.WorkbasketSummary> in (TaskSummary.java:0)\
  8. Dependencies of Slice workbasket.api.models\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomField(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setType(pro.taskana.workbasket.api.WorkbasketType)> has parameter of type <pro.taskana.workbasket.api.WorkbasketType> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.getPermission(pro.taskana.workbasket.api.WorkbasketPermission)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.setPermission(pro.taskana.workbasket.api.WorkbasketPermission, boolean)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomField(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getType()> has return type <pro.taskana.workbasket.api.WorkbasketType> in (WorkbasketSummary.java:0)\
  9. Dependencies of Slice workbasket.api\
    - Method <pro.taskana.workbasket.api.WorkbasketService.addDistributionTarget(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.checkAuthorization(java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.checkAuthorization(java.lang.String, java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketAlreadyExistException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItem(pro.taskana.workbasket.api.models.WorkbasketAccessItem)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItem(pro.taskana.workbasket.api.models.WorkbasketAccessItem)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasket(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketInUseException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasket(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionSources(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionSources(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionTargets(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionTargets(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getWorkbasket(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getWorkbasket(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.setDistributionTargets(java.lang.String, java.util.List)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.setWorkbasketAccessItems(java.lang.String, java.util.List)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.setWorkbasketAccessItems(java.lang.String, java.util.List)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.updateWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
  10. Dependencies of Slice workbasket.api.exceptions\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException.<init>(java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object)> in (WorkbasketNotFoundException.java:20)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (WorkbasketAlreadyExistException.java:21)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketInUseException.<init>(java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object)> in (WorkbasketInUseException.java:22)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketMarkedForDeletionException.<init>(java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object)> in (WorkbasketMarkedForDeletionException.java:22)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (WorkbasketAccessItemAlreadyExistException.java:23)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (WorkbasketNotFoundException.java:29)\
    - Constructor <pro.taskana.workbasket.api.exceptions.MismatchedWorkbasketPermissionException.<init>(java.lang.String, java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (MismatchedWorkbasketPermissionException.java:33)\
    - Constructor <pro.taskana.workbasket.api.exceptions.MismatchedWorkbasketPermissionException.<init>(java.lang.String, java.lang.String, java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (MismatchedWorkbasketPermissionException.java:60)\
  11. Dependencies of Slice common.internal.util\
    - Method <pro.taskana.common.internal.util.CheckedRunnable.lambda$0(pro.taskana.common.internal.util.CheckedRunnable)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedRunnable.java:13)\
    - Method <pro.taskana.common.internal.util.CheckedConsumer.lambda$0(pro.taskana.common.internal.util.CheckedConsumer, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedConsumer.java:14)\
    - Method <pro.taskana.common.internal.util.CheckedFunction.lambda$0(pro.taskana.common.internal.util.CheckedFunction, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedFunction.java:14)\
    - Method <pro.taskana.common.internal.util.CheckedSupplier.lambda$0(pro.taskana.common.internal.util.CheckedSupplier)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedSupplier.java:15)\
    - Method <pro.taskana.common.internal.util.CheckedFunction.lambda$1(pro.taskana.common.internal.util.CheckedFunction, java.lang.Class, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedFunction.java:28)\
    - Method <pro.taskana.common.internal.util.ObjectAttributeChangeDetector.determineChangesInAttributes(java.lang.Object, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (ObjectAttributeChangeDetector.java:33)\
    - Method <pro.taskana.common.internal.util.FileLoaderUtil.openFileFromClasspathOrSystem(java.lang.String, java.lang.Class)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (FileLoaderUtil.java:36)\
    - Method <pro.taskana.common.internal.util.FileLoaderUtil.openFileFromClasspathOrSystem(java.lang.String, java.lang.Class)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (FileLoaderUtil.java:42)\
    - Method <pro.taskana.common.internal.util.ObjectAttributeChangeDetector.determineChangesInAttributes(java.lang.Object, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (ObjectAttributeChangeDetector.java:45)\
  12. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)
Cycle detected: Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice workbasket.api.models -> \
                Slice workbasket.api -> \
                Slice common.api\
  1. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  2. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  3. Dependencies of Slice monitor.api.reports\
    - Constructor <pro.taskana.monitor.api.reports.TaskStatusReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.task.api.TaskState>> with type argument depending on <pro.taskana.task.api.TaskState> in (TaskStatusReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TaskStatusReport$Builder.stateIn(java.util.List)> has generic parameter type <java.util.List<pro.taskana.task.api.TaskState>> with type argument depending on <pro.taskana.task.api.TaskState> in (TaskStatusReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.customAttributeIn(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.customAttributeLike(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.customAttributeNotIn(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.listCustomAttributeValuesForCustomAttributeName(pro.taskana.task.api.TaskCustomField)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.stateIn(java.util.List)> has generic parameter type <java.util.List<pro.taskana.task.api.TaskState>> with type argument depending on <pro.taskana.task.api.TaskState> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder.customAttributeIn(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (WorkbasketPriorityReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder.customAttributeLike(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (WorkbasketPriorityReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder.customAttributeNotIn(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (WorkbasketPriorityReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder.stateIn(java.util.List)> has generic parameter type <java.util.List<pro.taskana.task.api.TaskState>> with type argument depending on <pro.taskana.task.api.TaskState> in (WorkbasketPriorityReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.TaskStatusReport.<init>(java.util.List)> calls method <pro.taskana.task.api.TaskState.values()> in (TaskStatusReport.java:27)\
  4. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  5. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.TaskSummary.getWorkbasketSummary()> has return type <pro.taskana.workbasket.api.models.WorkbasketSummary> in (TaskSummary.java:0)\
  6. Dependencies of Slice workbasket.api.models\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomField(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setType(pro.taskana.workbasket.api.WorkbasketType)> has parameter of type <pro.taskana.workbasket.api.WorkbasketType> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.getPermission(pro.taskana.workbasket.api.WorkbasketPermission)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.setPermission(pro.taskana.workbasket.api.WorkbasketPermission, boolean)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomField(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getType()> has return type <pro.taskana.workbasket.api.WorkbasketType> in (WorkbasketSummary.java:0)\
  7. Dependencies of Slice workbasket.api\
    - Class <pro.taskana.workbasket.api.AccessItemQueryColumnName> implements interface <pro.taskana.common.api.QueryColumnName> in (AccessItemQueryColumnName.java:0)\
    - Class <pro.taskana.workbasket.api.WorkbasketQueryColumnName> implements interface <pro.taskana.common.api.QueryColumnName> in (WorkbasketQueryColumnName.java:0)\
    - Interface <pro.taskana.workbasket.api.AbstractWorkbasketAccessItemQuery> extends interface <pro.taskana.common.api.BaseQuery> in (AbstractWorkbasketAccessItemQuery.java:0)\
    - Interface <pro.taskana.workbasket.api.WorkbasketAccessItemQuery> extends interface <pro.taskana.common.api.BaseQuery> in (WorkbasketAccessItemQuery.java:0)\
    - Interface <pro.taskana.workbasket.api.WorkbasketQuery> extends interface <pro.taskana.common.api.BaseQuery> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.AbstractWorkbasketAccessItemQuery.orderByAccessId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (AbstractWorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.AbstractWorkbasketAccessItemQuery.orderById(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (AbstractWorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.AbstractWorkbasketAccessItemQuery.orderByWorkbasketId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (AbstractWorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketAccessItemQuery.orderByAccessId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketAccessItemQuery.orderById(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketAccessItemQuery.orderByWorkbasketId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketAccessItemQuery.orderByWorkbasketKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.createdWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.modifiedWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField, pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByDescription(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByDomain(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByName(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByOrgLevel1(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    (6 further dependencies have been omitted...)
Cycle detected: Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice workbasket.api.models -> \
                Slice workbasket.api -> \
                Slice common.api.exceptions -> \
                Slice common.api\
  1. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  2. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  3. Dependencies of Slice monitor.api.reports\
    - Constructor <pro.taskana.monitor.api.reports.TaskStatusReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.task.api.TaskState>> with type argument depending on <pro.taskana.task.api.TaskState> in (TaskStatusReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TaskStatusReport$Builder.stateIn(java.util.List)> has generic parameter type <java.util.List<pro.taskana.task.api.TaskState>> with type argument depending on <pro.taskana.task.api.TaskState> in (TaskStatusReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.customAttributeIn(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.customAttributeLike(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.customAttributeNotIn(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.listCustomAttributeValuesForCustomAttributeName(pro.taskana.task.api.TaskCustomField)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.stateIn(java.util.List)> has generic parameter type <java.util.List<pro.taskana.task.api.TaskState>> with type argument depending on <pro.taskana.task.api.TaskState> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder.customAttributeIn(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (WorkbasketPriorityReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder.customAttributeLike(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (WorkbasketPriorityReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder.customAttributeNotIn(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (WorkbasketPriorityReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder.stateIn(java.util.List)> has generic parameter type <java.util.List<pro.taskana.task.api.TaskState>> with type argument depending on <pro.taskana.task.api.TaskState> in (WorkbasketPriorityReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.TaskStatusReport.<init>(java.util.List)> calls method <pro.taskana.task.api.TaskState.values()> in (TaskStatusReport.java:27)\
  4. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  5. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.TaskSummary.getWorkbasketSummary()> has return type <pro.taskana.workbasket.api.models.WorkbasketSummary> in (TaskSummary.java:0)\
  6. Dependencies of Slice workbasket.api.models\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomField(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setType(pro.taskana.workbasket.api.WorkbasketType)> has parameter of type <pro.taskana.workbasket.api.WorkbasketType> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.getPermission(pro.taskana.workbasket.api.WorkbasketPermission)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.setPermission(pro.taskana.workbasket.api.WorkbasketPermission, boolean)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomField(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getType()> has return type <pro.taskana.workbasket.api.WorkbasketType> in (WorkbasketSummary.java:0)\
  7. Dependencies of Slice workbasket.api\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.accessIdsHavePermission(pro.taskana.workbasket.api.WorkbasketPermission, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.accessIdsHavePermission(pro.taskana.workbasket.api.WorkbasketPermission, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.addDistributionTarget(java.lang.String, java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.checkAuthorization(java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.checkAuthorization(java.lang.String, java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.common.api.exceptions.DomainNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItem(pro.taskana.workbasket.api.models.WorkbasketAccessItem)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItem(pro.taskana.workbasket.api.models.WorkbasketAccessItem)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItemQuery()> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasket(java.lang.String)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasket(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasketAccessItem(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasketAccessItemsForAccessId(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbaskets(java.util.List)> has generic return type <pro.taskana.common.api.BulkOperationResults<java.lang.String, pro.taskana.common.api.exceptions.TaskanaException>> with type argument depending on <pro.taskana.common.api.exceptions.TaskanaException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbaskets(java.util.List)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbaskets(java.util.List)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionSources(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionSources(java.lang.String, java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    (14 further dependencies have been omitted...)\
  8. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)
Cycle detected: Slice common.api -> \
                Slice monitor.api -> \
                Slice monitor.api.reports -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice workbasket.api.models -> \
                Slice workbasket.api -> \
                Slice workbasket.api.exceptions -> \
                Slice common.api.exceptions -> \
                Slice common.api\
  1. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  2. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationCategoryReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationCategoryReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createClassificationReportBuilder()> has return type <pro.taskana.monitor.api.reports.ClassificationReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has return type <pro.taskana.monitor.api.reports.TaskCustomFieldValueReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskStatusReportBuilder()> has return type <pro.taskana.monitor.api.reports.TaskStatusReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createTimestampReportBuilder()> has return type <pro.taskana.monitor.api.reports.TimestampReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketPriorityReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder> in (MonitorService.java:0)\
    - Method <pro.taskana.monitor.api.MonitorService.createWorkbasketReportBuilder()> has return type <pro.taskana.monitor.api.reports.WorkbasketReport$Builder> in (MonitorService.java:0)\
  3. Dependencies of Slice monitor.api.reports\
    - Constructor <pro.taskana.monitor.api.reports.TaskStatusReport.<init>(java.util.List)> has generic parameter type <java.util.List<pro.taskana.task.api.TaskState>> with type argument depending on <pro.taskana.task.api.TaskState> in (TaskStatusReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TaskStatusReport$Builder.stateIn(java.util.List)> has generic parameter type <java.util.List<pro.taskana.task.api.TaskState>> with type argument depending on <pro.taskana.task.api.TaskState> in (TaskStatusReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.customAttributeIn(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.customAttributeLike(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.customAttributeNotIn(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.listCustomAttributeValuesForCustomAttributeName(pro.taskana.task.api.TaskCustomField)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.TimeIntervalReportBuilder.stateIn(java.util.List)> has generic parameter type <java.util.List<pro.taskana.task.api.TaskState>> with type argument depending on <pro.taskana.task.api.TaskState> in (TimeIntervalReportBuilder.java:0)\
    - Method <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder.customAttributeIn(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (WorkbasketPriorityReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder.customAttributeLike(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (WorkbasketPriorityReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder.customAttributeNotIn(pro.taskana.task.api.TaskCustomField, [Ljava.lang.String;)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (WorkbasketPriorityReport.java:0)\
    - Method <pro.taskana.monitor.api.reports.WorkbasketPriorityReport$Builder.stateIn(java.util.List)> has generic parameter type <java.util.List<pro.taskana.task.api.TaskState>> with type argument depending on <pro.taskana.task.api.TaskState> in (WorkbasketPriorityReport.java:0)\
    - Constructor <pro.taskana.monitor.api.reports.TaskStatusReport.<init>(java.util.List)> calls method <pro.taskana.task.api.TaskState.values()> in (TaskStatusReport.java:27)\
  4. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  5. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.TaskSummary.getWorkbasketSummary()> has return type <pro.taskana.workbasket.api.models.WorkbasketSummary> in (TaskSummary.java:0)\
  6. Dependencies of Slice workbasket.api.models\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomField(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setType(pro.taskana.workbasket.api.WorkbasketType)> has parameter of type <pro.taskana.workbasket.api.WorkbasketType> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.getPermission(pro.taskana.workbasket.api.WorkbasketPermission)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.setPermission(pro.taskana.workbasket.api.WorkbasketPermission, boolean)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomField(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getType()> has return type <pro.taskana.workbasket.api.WorkbasketType> in (WorkbasketSummary.java:0)\
  7. Dependencies of Slice workbasket.api\
    - Method <pro.taskana.workbasket.api.WorkbasketService.addDistributionTarget(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.checkAuthorization(java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.checkAuthorization(java.lang.String, java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketAlreadyExistException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItem(pro.taskana.workbasket.api.models.WorkbasketAccessItem)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItem(pro.taskana.workbasket.api.models.WorkbasketAccessItem)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasket(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketInUseException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasket(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionSources(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionSources(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionTargets(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionTargets(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getWorkbasket(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getWorkbasket(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.setDistributionTargets(java.lang.String, java.util.List)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.setWorkbasketAccessItems(java.lang.String, java.util.List)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.setWorkbasketAccessItems(java.lang.String, java.util.List)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.updateWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
  8. Dependencies of Slice workbasket.api.exceptions\
    - Class <pro.taskana.workbasket.api.exceptions.MismatchedWorkbasketPermissionException> extends class <pro.taskana.common.api.exceptions.NotAuthorizedException> in (MismatchedWorkbasketPermissionException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.NotAuthorizedToQueryWorkbasketException> extends class <pro.taskana.common.api.exceptions.TaskanaRuntimeException> in (NotAuthorizedToQueryWorkbasketException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (WorkbasketAccessItemAlreadyExistException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.WorkbasketAlreadyExistException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (WorkbasketAlreadyExistException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.WorkbasketInUseException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (WorkbasketInUseException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.WorkbasketMarkedForDeletionException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (WorkbasketMarkedForDeletionException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> extends class <pro.taskana.common.api.exceptions.NotFoundException> in (WorkbasketNotFoundException.java:0)\
    - Constructor <pro.taskana.workbasket.api.exceptions.NotAuthorizedToQueryWorkbasketException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode, java.lang.Throwable)> has parameter of type <pro.taskana.common.api.exceptions.ErrorCode> in (NotAuthorizedToQueryWorkbasketException.java:0)\
    - Constructor <pro.taskana.workbasket.api.exceptions.NotAuthorizedToQueryWorkbasketException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode, java.lang.Throwable)> calls constructor <pro.taskana.common.api.exceptions.TaskanaRuntimeException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode, java.lang.Throwable)> in (NotAuthorizedToQueryWorkbasketException.java:12)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException.<init>(java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.NotFoundException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketNotFoundException.java:20)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException.<init>(java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (WorkbasketNotFoundException.java:20)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketAlreadyExistException.java:21)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (WorkbasketAlreadyExistException.java:21)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketInUseException.<init>(java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketInUseException.java:22)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketInUseException.<init>(java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (WorkbasketInUseException.java:22)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketMarkedForDeletionException.<init>(java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketMarkedForDeletionException.java:22)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketMarkedForDeletionException.<init>(java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (WorkbasketMarkedForDeletionException.java:22)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketAccessItemAlreadyExistException.java:23)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (WorkbasketAccessItemAlreadyExistException.java:23)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException.<init>(java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.NotFoundException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketNotFoundException.java:29)\
    (5 further dependencies have been omitted...)\
  9. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)
Cycle detected: Slice common.api -> \
                Slice monitor.api -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice workbasket.api.models -> \
                Slice workbasket.api -> \
                Slice common.api\
  1. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  2. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (MonitorService.java:0)\
  3. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  4. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.TaskSummary.getWorkbasketSummary()> has return type <pro.taskana.workbasket.api.models.WorkbasketSummary> in (TaskSummary.java:0)\
  5. Dependencies of Slice workbasket.api.models\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomField(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setType(pro.taskana.workbasket.api.WorkbasketType)> has parameter of type <pro.taskana.workbasket.api.WorkbasketType> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.getPermission(pro.taskana.workbasket.api.WorkbasketPermission)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.setPermission(pro.taskana.workbasket.api.WorkbasketPermission, boolean)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomField(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getType()> has return type <pro.taskana.workbasket.api.WorkbasketType> in (WorkbasketSummary.java:0)\
  6. Dependencies of Slice workbasket.api\
    - Class <pro.taskana.workbasket.api.AccessItemQueryColumnName> implements interface <pro.taskana.common.api.QueryColumnName> in (AccessItemQueryColumnName.java:0)\
    - Class <pro.taskana.workbasket.api.WorkbasketQueryColumnName> implements interface <pro.taskana.common.api.QueryColumnName> in (WorkbasketQueryColumnName.java:0)\
    - Interface <pro.taskana.workbasket.api.AbstractWorkbasketAccessItemQuery> extends interface <pro.taskana.common.api.BaseQuery> in (AbstractWorkbasketAccessItemQuery.java:0)\
    - Interface <pro.taskana.workbasket.api.WorkbasketAccessItemQuery> extends interface <pro.taskana.common.api.BaseQuery> in (WorkbasketAccessItemQuery.java:0)\
    - Interface <pro.taskana.workbasket.api.WorkbasketQuery> extends interface <pro.taskana.common.api.BaseQuery> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.AbstractWorkbasketAccessItemQuery.orderByAccessId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (AbstractWorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.AbstractWorkbasketAccessItemQuery.orderById(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (AbstractWorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.AbstractWorkbasketAccessItemQuery.orderByWorkbasketId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (AbstractWorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketAccessItemQuery.orderByAccessId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketAccessItemQuery.orderById(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketAccessItemQuery.orderByWorkbasketId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketAccessItemQuery.orderByWorkbasketKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.createdWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.modifiedWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField, pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByDescription(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByDomain(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByName(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByOrgLevel1(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    (6 further dependencies have been omitted...)
Cycle detected: Slice common.api -> \
                Slice monitor.api -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice workbasket.api.models -> \
                Slice workbasket.api -> \
                Slice common.api.exceptions -> \
                Slice common.api\
  1. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  2. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (MonitorService.java:0)\
  3. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  4. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.TaskSummary.getWorkbasketSummary()> has return type <pro.taskana.workbasket.api.models.WorkbasketSummary> in (TaskSummary.java:0)\
  5. Dependencies of Slice workbasket.api.models\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomField(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setType(pro.taskana.workbasket.api.WorkbasketType)> has parameter of type <pro.taskana.workbasket.api.WorkbasketType> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.getPermission(pro.taskana.workbasket.api.WorkbasketPermission)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.setPermission(pro.taskana.workbasket.api.WorkbasketPermission, boolean)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomField(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getType()> has return type <pro.taskana.workbasket.api.WorkbasketType> in (WorkbasketSummary.java:0)\
  6. Dependencies of Slice workbasket.api\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.accessIdsHavePermission(pro.taskana.workbasket.api.WorkbasketPermission, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.accessIdsHavePermission(pro.taskana.workbasket.api.WorkbasketPermission, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.addDistributionTarget(java.lang.String, java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.checkAuthorization(java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.checkAuthorization(java.lang.String, java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.common.api.exceptions.DomainNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItem(pro.taskana.workbasket.api.models.WorkbasketAccessItem)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItem(pro.taskana.workbasket.api.models.WorkbasketAccessItem)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItemQuery()> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasket(java.lang.String)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasket(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasketAccessItem(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasketAccessItemsForAccessId(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbaskets(java.util.List)> has generic return type <pro.taskana.common.api.BulkOperationResults<java.lang.String, pro.taskana.common.api.exceptions.TaskanaException>> with type argument depending on <pro.taskana.common.api.exceptions.TaskanaException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbaskets(java.util.List)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbaskets(java.util.List)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionSources(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionSources(java.lang.String, java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    (14 further dependencies have been omitted...)\
  7. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)
Cycle detected: Slice common.api -> \
                Slice monitor.api -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice workbasket.api.models -> \
                Slice workbasket.api -> \
                Slice workbasket.api.exceptions -> \
                Slice common.api.exceptions -> \
                Slice common.api\
  1. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getMonitorService()> has return type <pro.taskana.monitor.api.MonitorService> in (TaskanaEngine.java:0)\
  2. Dependencies of Slice monitor.api\
    - Method <pro.taskana.monitor.api.MonitorService.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (MonitorService.java:0)\
  3. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  4. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.TaskSummary.getWorkbasketSummary()> has return type <pro.taskana.workbasket.api.models.WorkbasketSummary> in (TaskSummary.java:0)\
  5. Dependencies of Slice workbasket.api.models\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomField(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setType(pro.taskana.workbasket.api.WorkbasketType)> has parameter of type <pro.taskana.workbasket.api.WorkbasketType> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.getPermission(pro.taskana.workbasket.api.WorkbasketPermission)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.setPermission(pro.taskana.workbasket.api.WorkbasketPermission, boolean)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomField(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getType()> has return type <pro.taskana.workbasket.api.WorkbasketType> in (WorkbasketSummary.java:0)\
  6. Dependencies of Slice workbasket.api\
    - Method <pro.taskana.workbasket.api.WorkbasketService.addDistributionTarget(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.checkAuthorization(java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.checkAuthorization(java.lang.String, java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketAlreadyExistException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItem(pro.taskana.workbasket.api.models.WorkbasketAccessItem)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItem(pro.taskana.workbasket.api.models.WorkbasketAccessItem)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasket(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketInUseException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasket(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionSources(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionSources(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionTargets(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionTargets(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getWorkbasket(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getWorkbasket(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.setDistributionTargets(java.lang.String, java.util.List)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.setWorkbasketAccessItems(java.lang.String, java.util.List)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.setWorkbasketAccessItems(java.lang.String, java.util.List)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.updateWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
  7. Dependencies of Slice workbasket.api.exceptions\
    - Class <pro.taskana.workbasket.api.exceptions.MismatchedWorkbasketPermissionException> extends class <pro.taskana.common.api.exceptions.NotAuthorizedException> in (MismatchedWorkbasketPermissionException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.NotAuthorizedToQueryWorkbasketException> extends class <pro.taskana.common.api.exceptions.TaskanaRuntimeException> in (NotAuthorizedToQueryWorkbasketException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (WorkbasketAccessItemAlreadyExistException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.WorkbasketAlreadyExistException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (WorkbasketAlreadyExistException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.WorkbasketInUseException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (WorkbasketInUseException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.WorkbasketMarkedForDeletionException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (WorkbasketMarkedForDeletionException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> extends class <pro.taskana.common.api.exceptions.NotFoundException> in (WorkbasketNotFoundException.java:0)\
    - Constructor <pro.taskana.workbasket.api.exceptions.NotAuthorizedToQueryWorkbasketException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode, java.lang.Throwable)> has parameter of type <pro.taskana.common.api.exceptions.ErrorCode> in (NotAuthorizedToQueryWorkbasketException.java:0)\
    - Constructor <pro.taskana.workbasket.api.exceptions.NotAuthorizedToQueryWorkbasketException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode, java.lang.Throwable)> calls constructor <pro.taskana.common.api.exceptions.TaskanaRuntimeException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode, java.lang.Throwable)> in (NotAuthorizedToQueryWorkbasketException.java:12)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException.<init>(java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.NotFoundException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketNotFoundException.java:20)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException.<init>(java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (WorkbasketNotFoundException.java:20)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketAlreadyExistException.java:21)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (WorkbasketAlreadyExistException.java:21)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketInUseException.<init>(java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketInUseException.java:22)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketInUseException.<init>(java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (WorkbasketInUseException.java:22)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketMarkedForDeletionException.<init>(java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketMarkedForDeletionException.java:22)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketMarkedForDeletionException.<init>(java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (WorkbasketMarkedForDeletionException.java:22)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketAccessItemAlreadyExistException.java:23)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (WorkbasketAccessItemAlreadyExistException.java:23)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException.<init>(java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.NotFoundException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketNotFoundException.java:29)\
    (5 further dependencies have been omitted...)\
  8. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)
Cycle detected: Slice common.api -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice workbasket.api.models -> \
                Slice workbasket.api -> \
                Slice common.api\
  1. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getTaskService()> has return type <pro.taskana.task.api.TaskService> in (TaskanaEngine.java:0)\
  2. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  3. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.TaskSummary.getWorkbasketSummary()> has return type <pro.taskana.workbasket.api.models.WorkbasketSummary> in (TaskSummary.java:0)\
  4. Dependencies of Slice workbasket.api.models\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomField(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setType(pro.taskana.workbasket.api.WorkbasketType)> has parameter of type <pro.taskana.workbasket.api.WorkbasketType> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.getPermission(pro.taskana.workbasket.api.WorkbasketPermission)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.setPermission(pro.taskana.workbasket.api.WorkbasketPermission, boolean)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomField(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getType()> has return type <pro.taskana.workbasket.api.WorkbasketType> in (WorkbasketSummary.java:0)\
  5. Dependencies of Slice workbasket.api\
    - Class <pro.taskana.workbasket.api.AccessItemQueryColumnName> implements interface <pro.taskana.common.api.QueryColumnName> in (AccessItemQueryColumnName.java:0)\
    - Class <pro.taskana.workbasket.api.WorkbasketQueryColumnName> implements interface <pro.taskana.common.api.QueryColumnName> in (WorkbasketQueryColumnName.java:0)\
    - Interface <pro.taskana.workbasket.api.AbstractWorkbasketAccessItemQuery> extends interface <pro.taskana.common.api.BaseQuery> in (AbstractWorkbasketAccessItemQuery.java:0)\
    - Interface <pro.taskana.workbasket.api.WorkbasketAccessItemQuery> extends interface <pro.taskana.common.api.BaseQuery> in (WorkbasketAccessItemQuery.java:0)\
    - Interface <pro.taskana.workbasket.api.WorkbasketQuery> extends interface <pro.taskana.common.api.BaseQuery> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.AbstractWorkbasketAccessItemQuery.orderByAccessId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (AbstractWorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.AbstractWorkbasketAccessItemQuery.orderById(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (AbstractWorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.AbstractWorkbasketAccessItemQuery.orderByWorkbasketId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (AbstractWorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketAccessItemQuery.orderByAccessId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketAccessItemQuery.orderById(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketAccessItemQuery.orderByWorkbasketId(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketAccessItemQuery.orderByWorkbasketKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketAccessItemQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.createdWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.modifiedWithin([Lpro.taskana.common.api.TimeInterval;)> depends on component type <pro.taskana.common.api.TimeInterval> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField, pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByDescription(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByDomain(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByKey(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByName(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.orderByOrgLevel1(pro.taskana.common.api.BaseQuery$SortDirection)> has parameter of type <pro.taskana.common.api.BaseQuery$SortDirection> in (WorkbasketQuery.java:0)\
    (6 further dependencies have been omitted...)
Cycle detected: Slice common.api -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice workbasket.api.models -> \
                Slice workbasket.api -> \
                Slice common.api.exceptions -> \
                Slice common.api\
  1. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getTaskService()> has return type <pro.taskana.task.api.TaskService> in (TaskanaEngine.java:0)\
  2. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  3. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.TaskSummary.getWorkbasketSummary()> has return type <pro.taskana.workbasket.api.models.WorkbasketSummary> in (TaskSummary.java:0)\
  4. Dependencies of Slice workbasket.api.models\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomField(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setType(pro.taskana.workbasket.api.WorkbasketType)> has parameter of type <pro.taskana.workbasket.api.WorkbasketType> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.getPermission(pro.taskana.workbasket.api.WorkbasketPermission)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.setPermission(pro.taskana.workbasket.api.WorkbasketPermission, boolean)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomField(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getType()> has return type <pro.taskana.workbasket.api.WorkbasketType> in (WorkbasketSummary.java:0)\
  5. Dependencies of Slice workbasket.api\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.accessIdsHavePermission(pro.taskana.workbasket.api.WorkbasketPermission, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketQuery.accessIdsHavePermission(pro.taskana.workbasket.api.WorkbasketPermission, [Ljava.lang.String;)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketQuery.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.addDistributionTarget(java.lang.String, java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.checkAuthorization(java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.checkAuthorization(java.lang.String, java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.common.api.exceptions.DomainNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItem(pro.taskana.workbasket.api.models.WorkbasketAccessItem)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItem(pro.taskana.workbasket.api.models.WorkbasketAccessItem)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItemQuery()> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasket(java.lang.String)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasket(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasketAccessItem(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasketAccessItemsForAccessId(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbaskets(java.util.List)> has generic return type <pro.taskana.common.api.BulkOperationResults<java.lang.String, pro.taskana.common.api.exceptions.TaskanaException>> with type argument depending on <pro.taskana.common.api.exceptions.TaskanaException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbaskets(java.util.List)> throws type <pro.taskana.common.api.exceptions.InvalidArgumentException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbaskets(java.util.List)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionSources(java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionSources(java.lang.String, java.lang.String)> throws type <pro.taskana.common.api.exceptions.NotAuthorizedException> in (WorkbasketService.java:0)\
    (14 further dependencies have been omitted...)\
  6. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)
Cycle detected: Slice common.api -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice workbasket.api.models -> \
                Slice workbasket.api -> \
                Slice workbasket.api.exceptions -> \
                Slice common.api.exceptions -> \
                Slice common.api\
  1. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getTaskService()> has return type <pro.taskana.task.api.TaskService> in (TaskanaEngine.java:0)\
  2. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  3. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.TaskSummary.getWorkbasketSummary()> has return type <pro.taskana.workbasket.api.models.WorkbasketSummary> in (TaskSummary.java:0)\
  4. Dependencies of Slice workbasket.api.models\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomField(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setType(pro.taskana.workbasket.api.WorkbasketType)> has parameter of type <pro.taskana.workbasket.api.WorkbasketType> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.getPermission(pro.taskana.workbasket.api.WorkbasketPermission)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.setPermission(pro.taskana.workbasket.api.WorkbasketPermission, boolean)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomField(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getType()> has return type <pro.taskana.workbasket.api.WorkbasketType> in (WorkbasketSummary.java:0)\
  5. Dependencies of Slice workbasket.api\
    - Method <pro.taskana.workbasket.api.WorkbasketService.addDistributionTarget(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.checkAuthorization(java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.checkAuthorization(java.lang.String, java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketAlreadyExistException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItem(pro.taskana.workbasket.api.models.WorkbasketAccessItem)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItem(pro.taskana.workbasket.api.models.WorkbasketAccessItem)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasket(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketInUseException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasket(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionSources(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionSources(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionTargets(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionTargets(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getWorkbasket(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getWorkbasket(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.setDistributionTargets(java.lang.String, java.util.List)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.setWorkbasketAccessItems(java.lang.String, java.util.List)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.setWorkbasketAccessItems(java.lang.String, java.util.List)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.updateWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
  6. Dependencies of Slice workbasket.api.exceptions\
    - Class <pro.taskana.workbasket.api.exceptions.MismatchedWorkbasketPermissionException> extends class <pro.taskana.common.api.exceptions.NotAuthorizedException> in (MismatchedWorkbasketPermissionException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.NotAuthorizedToQueryWorkbasketException> extends class <pro.taskana.common.api.exceptions.TaskanaRuntimeException> in (NotAuthorizedToQueryWorkbasketException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (WorkbasketAccessItemAlreadyExistException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.WorkbasketAlreadyExistException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (WorkbasketAlreadyExistException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.WorkbasketInUseException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (WorkbasketInUseException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.WorkbasketMarkedForDeletionException> extends class <pro.taskana.common.api.exceptions.TaskanaException> in (WorkbasketMarkedForDeletionException.java:0)\
    - Class <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> extends class <pro.taskana.common.api.exceptions.NotFoundException> in (WorkbasketNotFoundException.java:0)\
    - Constructor <pro.taskana.workbasket.api.exceptions.NotAuthorizedToQueryWorkbasketException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode, java.lang.Throwable)> has parameter of type <pro.taskana.common.api.exceptions.ErrorCode> in (NotAuthorizedToQueryWorkbasketException.java:0)\
    - Constructor <pro.taskana.workbasket.api.exceptions.NotAuthorizedToQueryWorkbasketException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode, java.lang.Throwable)> calls constructor <pro.taskana.common.api.exceptions.TaskanaRuntimeException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode, java.lang.Throwable)> in (NotAuthorizedToQueryWorkbasketException.java:12)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException.<init>(java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.NotFoundException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketNotFoundException.java:20)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException.<init>(java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (WorkbasketNotFoundException.java:20)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketAlreadyExistException.java:21)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (WorkbasketAlreadyExistException.java:21)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketInUseException.<init>(java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketInUseException.java:22)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketInUseException.<init>(java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (WorkbasketInUseException.java:22)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketMarkedForDeletionException.<init>(java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketMarkedForDeletionException.java:22)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketMarkedForDeletionException.<init>(java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (WorkbasketMarkedForDeletionException.java:22)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.TaskanaException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketAccessItemAlreadyExistException.java:23)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.api.exceptions.ErrorCode.of(java.lang.String, java.util.Map)> in (WorkbasketAccessItemAlreadyExistException.java:23)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException.<init>(java.lang.String, java.lang.String)> calls constructor <pro.taskana.common.api.exceptions.NotFoundException.<init>(java.lang.String, pro.taskana.common.api.exceptions.ErrorCode)> in (WorkbasketNotFoundException.java:29)\
    (5 further dependencies have been omitted...)\
  7. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)
Cycle detected: Slice common.api -> \
                Slice task.api -> \
                Slice task.api.models -> \
                Slice workbasket.api.models -> \
                Slice workbasket.api -> \
                Slice workbasket.api.exceptions -> \
                Slice common.internal.util -> \
                Slice common.api.exceptions -> \
                Slice common.api\
  1. Dependencies of Slice common.api\
    - Method <pro.taskana.common.api.TaskanaEngine.getTaskService()> has return type <pro.taskana.task.api.TaskService> in (TaskanaEngine.java:0)\
  2. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  3. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.TaskSummary.getWorkbasketSummary()> has return type <pro.taskana.workbasket.api.models.WorkbasketSummary> in (TaskSummary.java:0)\
  4. Dependencies of Slice workbasket.api.models\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setCustomField(pro.taskana.workbasket.api.WorkbasketCustomField, java.lang.String)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.Workbasket.setType(pro.taskana.workbasket.api.WorkbasketType)> has parameter of type <pro.taskana.workbasket.api.WorkbasketType> in (Workbasket.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.getPermission(pro.taskana.workbasket.api.WorkbasketPermission)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketAccessItem.setPermission(pro.taskana.workbasket.api.WorkbasketPermission, boolean)> has parameter of type <pro.taskana.workbasket.api.WorkbasketPermission> in (WorkbasketAccessItem.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomAttribute(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getCustomField(pro.taskana.workbasket.api.WorkbasketCustomField)> has parameter of type <pro.taskana.workbasket.api.WorkbasketCustomField> in (WorkbasketSummary.java:0)\
    - Method <pro.taskana.workbasket.api.models.WorkbasketSummary.getType()> has return type <pro.taskana.workbasket.api.WorkbasketType> in (WorkbasketSummary.java:0)\
  5. Dependencies of Slice workbasket.api\
    - Method <pro.taskana.workbasket.api.WorkbasketService.addDistributionTarget(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.checkAuthorization(java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.checkAuthorization(java.lang.String, java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketAlreadyExistException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItem(pro.taskana.workbasket.api.models.WorkbasketAccessItem)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.createWorkbasketAccessItem(pro.taskana.workbasket.api.models.WorkbasketAccessItem)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasket(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketInUseException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.deleteWorkbasket(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionSources(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionSources(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionTargets(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getDistributionTargets(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getWorkbasket(java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.getWorkbasket(java.lang.String, java.lang.String)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.setDistributionTargets(java.lang.String, java.util.List)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.setWorkbasketAccessItems(java.lang.String, java.util.List)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.setWorkbasketAccessItems(java.lang.String, java.util.List)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
    - Method <pro.taskana.workbasket.api.WorkbasketService.updateWorkbasket(pro.taskana.workbasket.api.models.Workbasket)> throws type <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException> in (WorkbasketService.java:0)\
  6. Dependencies of Slice workbasket.api.exceptions\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException.<init>(java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object)> in (WorkbasketNotFoundException.java:20)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (WorkbasketAlreadyExistException.java:21)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketInUseException.<init>(java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object)> in (WorkbasketInUseException.java:22)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketMarkedForDeletionException.<init>(java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object)> in (WorkbasketMarkedForDeletionException.java:22)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketAccessItemAlreadyExistException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (WorkbasketAccessItemAlreadyExistException.java:23)\
    - Constructor <pro.taskana.workbasket.api.exceptions.WorkbasketNotFoundException.<init>(java.lang.String, java.lang.String)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (WorkbasketNotFoundException.java:29)\
    - Constructor <pro.taskana.workbasket.api.exceptions.MismatchedWorkbasketPermissionException.<init>(java.lang.String, java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (MismatchedWorkbasketPermissionException.java:33)\
    - Constructor <pro.taskana.workbasket.api.exceptions.MismatchedWorkbasketPermissionException.<init>(java.lang.String, java.lang.String, java.lang.String, [Lpro.taskana.workbasket.api.WorkbasketPermission;)> calls method <pro.taskana.common.internal.util.MapCreator.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)> in (MismatchedWorkbasketPermissionException.java:60)\
  7. Dependencies of Slice common.internal.util\
    - Method <pro.taskana.common.internal.util.CheckedRunnable.lambda$0(pro.taskana.common.internal.util.CheckedRunnable)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedRunnable.java:13)\
    - Method <pro.taskana.common.internal.util.CheckedConsumer.lambda$0(pro.taskana.common.internal.util.CheckedConsumer, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedConsumer.java:14)\
    - Method <pro.taskana.common.internal.util.CheckedFunction.lambda$0(pro.taskana.common.internal.util.CheckedFunction, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedFunction.java:14)\
    - Method <pro.taskana.common.internal.util.CheckedSupplier.lambda$0(pro.taskana.common.internal.util.CheckedSupplier)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedSupplier.java:15)\
    - Method <pro.taskana.common.internal.util.CheckedFunction.lambda$1(pro.taskana.common.internal.util.CheckedFunction, java.lang.Class, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String, java.lang.Throwable)> in (CheckedFunction.java:28)\
    - Method <pro.taskana.common.internal.util.ObjectAttributeChangeDetector.determineChangesInAttributes(java.lang.Object, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (ObjectAttributeChangeDetector.java:33)\
    - Method <pro.taskana.common.internal.util.FileLoaderUtil.openFileFromClasspathOrSystem(java.lang.String, java.lang.Class)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (FileLoaderUtil.java:36)\
    - Method <pro.taskana.common.internal.util.FileLoaderUtil.openFileFromClasspathOrSystem(java.lang.String, java.lang.Class)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (FileLoaderUtil.java:42)\
    - Method <pro.taskana.common.internal.util.ObjectAttributeChangeDetector.determineChangesInAttributes(java.lang.Object, java.lang.Object)> calls constructor <pro.taskana.common.api.exceptions.SystemException.<init>(java.lang.String)> in (ObjectAttributeChangeDetector.java:45)\
  8. Dependencies of Slice common.api.exceptions\
    - Constructor <pro.taskana.common.api.exceptions.MismatchedRoleException.<init>(java.lang.String, [Lpro.taskana.common.api.TaskanaRole;)> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Field <pro.taskana.common.api.exceptions.MismatchedRoleException.roles> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)\
    - Method <pro.taskana.common.api.exceptions.MismatchedRoleException.getRoles()> depends on component type <pro.taskana.common.api.TaskanaRole> in (MismatchedRoleException.java:0)
Cycle detected: Slice common.internal -> \
                Slice monitor.internal -> \
                Slice common.internal\
  1. Dependencies of Slice common.internal\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getMonitorService()> calls constructor <pro.taskana.monitor.internal.MonitorServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.monitor.internal.MonitorMapper)> in (TaskanaEngineImpl.java:153)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getMonitorService()> references class object <pro.taskana.monitor.internal.MonitorMapper> in (TaskanaEngineImpl.java:154)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.monitor.internal.MonitorMapper> in (TaskanaEngineImpl.java:340)\
  2. Dependencies of Slice monitor.internal\
    - Constructor <pro.taskana.monitor.internal.MonitorServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.monitor.internal.MonitorMapper)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (MonitorServiceImpl.java:0)\
    - Field <pro.taskana.monitor.internal.MonitorServiceImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (MonitorServiceImpl.java:0)
Cycle detected: Slice common.internal -> \
                Slice monitor.internal -> \
                Slice monitor.internal.reports -> \
                Slice common.internal\
  1. Dependencies of Slice common.internal\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getMonitorService()> calls constructor <pro.taskana.monitor.internal.MonitorServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.monitor.internal.MonitorMapper)> in (TaskanaEngineImpl.java:153)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getMonitorService()> references class object <pro.taskana.monitor.internal.MonitorMapper> in (TaskanaEngineImpl.java:154)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.monitor.internal.MonitorMapper> in (TaskanaEngineImpl.java:340)\
  2. Dependencies of Slice monitor.internal\
    - Method <pro.taskana.monitor.internal.MonitorMapper.getTaskCountByPriority(pro.taskana.monitor.internal.reports.WorkbasketPriorityReportBuilderImpl)> has parameter of type <pro.taskana.monitor.internal.reports.WorkbasketPriorityReportBuilderImpl> in (MonitorMapper.java:0)\
    - Method <pro.taskana.monitor.internal.MonitorServiceImpl.createWorkbasketReportBuilder()> calls constructor <pro.taskana.monitor.internal.reports.WorkbasketReportBuilderImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.monitor.internal.MonitorMapper)> in (MonitorServiceImpl.java:35)\
    - Method <pro.taskana.monitor.internal.MonitorServiceImpl.createWorkbasketPriorityReportBuilder()> calls constructor <pro.taskana.monitor.internal.reports.WorkbasketPriorityReportBuilderImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.monitor.internal.MonitorMapper)> in (MonitorServiceImpl.java:40)\
    - Method <pro.taskana.monitor.internal.MonitorServiceImpl.createClassificationCategoryReportBuilder()> calls constructor <pro.taskana.monitor.internal.reports.ClassificationCategoryReportBuilderImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.monitor.internal.MonitorMapper)> in (MonitorServiceImpl.java:45)\
    - Method <pro.taskana.monitor.internal.MonitorServiceImpl.createClassificationReportBuilder()> calls constructor <pro.taskana.monitor.internal.reports.ClassificationReportBuilderImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.monitor.internal.MonitorMapper)> in (MonitorServiceImpl.java:50)\
    - Method <pro.taskana.monitor.internal.MonitorServiceImpl.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> calls constructor <pro.taskana.monitor.internal.reports.TaskCustomFieldValueReportBuilderImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.monitor.internal.MonitorMapper, pro.taskana.task.api.TaskCustomField)> in (MonitorServiceImpl.java:56)\
    - Method <pro.taskana.monitor.internal.MonitorServiceImpl.createTaskStatusReportBuilder()> calls constructor <pro.taskana.monitor.internal.reports.TaskStatusReportBuilderImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.monitor.internal.MonitorMapper)> in (MonitorServiceImpl.java:61)\
    - Method <pro.taskana.monitor.internal.MonitorServiceImpl.createTimestampReportBuilder()> calls constructor <pro.taskana.monitor.internal.reports.TimestampReportBuilderImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.monitor.internal.MonitorMapper)> in (MonitorServiceImpl.java:66)\
  3. Dependencies of Slice monitor.internal.reports\
    - Constructor <pro.taskana.monitor.internal.reports.ClassificationCategoryReportBuilderImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.monitor.internal.MonitorMapper)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (ClassificationCategoryReportBuilderImpl.java:0)\
    - Constructor <pro.taskana.monitor.internal.reports.ClassificationReportBuilderImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.monitor.internal.MonitorMapper)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (ClassificationReportBuilderImpl.java:0)\
    - Constructor <pro.taskana.monitor.internal.reports.TaskCustomFieldValueReportBuilderImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.monitor.internal.MonitorMapper, pro.taskana.task.api.TaskCustomField)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskCustomFieldValueReportBuilderImpl.java:0)\
    - Constructor <pro.taskana.monitor.internal.reports.TaskStatusReportBuilderImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.monitor.internal.MonitorMapper)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskStatusReportBuilderImpl.java:0)\
    - Constructor <pro.taskana.monitor.internal.reports.TimeIntervalReportBuilderImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.monitor.internal.MonitorMapper)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (TimeIntervalReportBuilderImpl.java:0)\
    - Constructor <pro.taskana.monitor.internal.reports.TimestampReportBuilderImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.monitor.internal.MonitorMapper)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (TimestampReportBuilderImpl.java:0)\
    - Constructor <pro.taskana.monitor.internal.reports.WorkbasketPriorityReportBuilderImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.monitor.internal.MonitorMapper)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (WorkbasketPriorityReportBuilderImpl.java:0)\
    - Constructor <pro.taskana.monitor.internal.reports.WorkbasketReportBuilderImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.monitor.internal.MonitorMapper)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (WorkbasketReportBuilderImpl.java:0)\
    - Field <pro.taskana.monitor.internal.reports.TaskStatusReportBuilderImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskStatusReportBuilderImpl.java:0)\
    - Field <pro.taskana.monitor.internal.reports.TimeIntervalReportBuilderImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (TimeIntervalReportBuilderImpl.java:0)\
    - Field <pro.taskana.monitor.internal.reports.WorkbasketPriorityReportBuilderImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (WorkbasketPriorityReportBuilderImpl.java:0)\
    - Constructor <pro.taskana.monitor.internal.reports.WorkbasketReportBuilderImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.monitor.internal.MonitorMapper)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (WorkbasketReportBuilderImpl.java:33)\
    - Constructor <pro.taskana.monitor.internal.reports.TaskStatusReportBuilderImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.monitor.internal.MonitorMapper)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (TaskStatusReportBuilderImpl.java:34)\
    - Constructor <pro.taskana.monitor.internal.reports.ClassificationReportBuilderImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.monitor.internal.MonitorMapper)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (ClassificationReportBuilderImpl.java:36)\
    - Method <pro.taskana.monitor.internal.reports.ClassificationCategoryReportBuilderImpl.buildReport(pro.taskana.monitor.api.TaskTimestamp)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (ClassificationCategoryReportBuilderImpl.java:37)\
    - Method <pro.taskana.monitor.internal.reports.ClassificationCategoryReportBuilderImpl.buildReport(pro.taskana.monitor.api.TaskTimestamp)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.openConnection()> in (ClassificationCategoryReportBuilderImpl.java:39)\
    - Method <pro.taskana.monitor.internal.reports.TaskStatusReportBuilderImpl.buildReport()> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (TaskStatusReportBuilderImpl.java:39)\
    - Method <pro.taskana.monitor.internal.reports.TaskStatusReportBuilderImpl.buildReport()> calls method <pro.taskana.common.internal.InternalTaskanaEngine.openConnection()> in (TaskStatusReportBuilderImpl.java:41)\
    - Method <pro.taskana.monitor.internal.reports.TaskCustomFieldValueReportBuilderImpl.buildReport(pro.taskana.monitor.api.TaskTimestamp)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (TaskCustomFieldValueReportBuilderImpl.java:43)\
    - Method <pro.taskana.monitor.internal.reports.WorkbasketReportBuilderImpl.buildReport(pro.taskana.monitor.api.TaskTimestamp)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (WorkbasketReportBuilderImpl.java:44)\
    (26 further dependencies have been omitted...)
Cycle detected: Slice common.internal -> \
                Slice task.internal -> \
                Slice common.internal\
  1. Dependencies of Slice common.internal\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getTaskService()> calls constructor <pro.taskana.task.internal.TaskServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.task.internal.TaskMapper, pro.taskana.task.internal.TaskCommentMapper, pro.taskana.task.internal.AttachmentMapper, pro.taskana.task.internal.ObjectReferenceMapper, pro.taskana.user.internal.UserMapper)> in (TaskanaEngineImpl.java:142)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getTaskService()> references class object <pro.taskana.task.internal.TaskMapper> in (TaskanaEngineImpl.java:144)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getTaskService()> references class object <pro.taskana.task.internal.TaskCommentMapper> in (TaskanaEngineImpl.java:145)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getTaskService()> references class object <pro.taskana.task.internal.AttachmentMapper> in (TaskanaEngineImpl.java:146)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getTaskService()> references class object <pro.taskana.task.internal.ObjectReferenceMapper> in (TaskanaEngineImpl.java:147)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getClassificationService()> references class object <pro.taskana.task.internal.TaskMapper> in (TaskanaEngineImpl.java:173)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.task.internal.TaskMapper> in (TaskanaEngineImpl.java:339)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.task.internal.ObjectReferenceMapper> in (TaskanaEngineImpl.java:345)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.task.internal.TaskQueryMapper> in (TaskanaEngineImpl.java:347)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.task.internal.TaskCommentMapper> in (TaskanaEngineImpl.java:348)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.task.internal.TaskCommentQueryMapper> in (TaskanaEngineImpl.java:349)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.task.internal.AttachmentMapper> in (TaskanaEngineImpl.java:351)\
  2. Dependencies of Slice task.internal\
    - Constructor <pro.taskana.task.internal.ObjectReferenceQueryImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (ObjectReferenceQueryImpl.java:0)\
    - Constructor <pro.taskana.task.internal.ServiceLevelHandler.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.task.internal.TaskMapper, pro.taskana.task.internal.AttachmentMapper, pro.taskana.task.internal.TaskServiceImpl)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (ServiceLevelHandler.java:0)\
    - Constructor <pro.taskana.task.internal.TaskCommentQueryImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskCommentQueryImpl.java:0)\
    - Constructor <pro.taskana.task.internal.TaskCommentServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.task.internal.TaskCommentMapper, pro.taskana.user.internal.UserMapper, pro.taskana.task.internal.TaskServiceImpl)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskCommentServiceImpl.java:0)\
    - Constructor <pro.taskana.task.internal.TaskQueryImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskQueryImpl.java:0)\
    - Constructor <pro.taskana.task.internal.TaskServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.task.internal.TaskMapper, pro.taskana.task.internal.TaskCommentMapper, pro.taskana.task.internal.AttachmentMapper, pro.taskana.task.internal.ObjectReferenceMapper, pro.taskana.user.internal.UserMapper)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskServiceImpl.java:0)\
    - Constructor <pro.taskana.task.internal.TaskTransferrer.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.task.internal.TaskMapper, pro.taskana.task.internal.TaskServiceImpl)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskTransferrer.java:0)\
    - Field <pro.taskana.task.internal.ObjectReferenceQueryImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (ObjectReferenceQueryImpl.java:0)\
    - Field <pro.taskana.task.internal.ServiceLevelHandler.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (ServiceLevelHandler.java:0)\
    - Field <pro.taskana.task.internal.TaskCommentQueryImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskCommentQueryImpl.java:0)\
    - Field <pro.taskana.task.internal.TaskCommentServiceImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskCommentServiceImpl.java:0)\
    - Field <pro.taskana.task.internal.TaskQueryImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskQueryImpl.java:0)\
    - Field <pro.taskana.task.internal.TaskServiceImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskServiceImpl.java:0)\
    - Field <pro.taskana.task.internal.TaskTransferrer.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (TaskTransferrer.java:0)\
    - Constructor <pro.taskana.task.internal.ServiceLevelHandler.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.task.internal.TaskMapper, pro.taskana.task.internal.AttachmentMapper, pro.taskana.task.internal.TaskServiceImpl)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (ServiceLevelHandler.java:52)\
    - Constructor <pro.taskana.task.internal.TaskTransferrer.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.task.internal.TaskMapper, pro.taskana.task.internal.TaskServiceImpl)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (TaskTransferrer.java:53)\
    - Constructor <pro.taskana.task.internal.TaskTransferrer.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.task.internal.TaskMapper, pro.taskana.task.internal.TaskServiceImpl)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getHistoryEventManager()> in (TaskTransferrer.java:54)\
    - Method <pro.taskana.task.internal.TaskCommentServiceImpl.updateTaskComment(pro.taskana.task.api.models.TaskComment)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (TaskCommentServiceImpl.java:55)\
    - Constructor <pro.taskana.task.internal.TaskCommentQueryImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (TaskCommentQueryImpl.java:61)\
    - Method <pro.taskana.task.internal.TaskCommentServiceImpl.updateTaskComment(pro.taskana.task.api.models.TaskComment)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.openConnection()> in (TaskCommentServiceImpl.java:61)\
    (158 further dependencies have been omitted...)
Cycle detected: Slice common.internal -> \
                Slice task.internal -> \
                Slice user.internal -> \
                Slice common.internal\
  1. Dependencies of Slice common.internal\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getTaskService()> calls constructor <pro.taskana.task.internal.TaskServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.task.internal.TaskMapper, pro.taskana.task.internal.TaskCommentMapper, pro.taskana.task.internal.AttachmentMapper, pro.taskana.task.internal.ObjectReferenceMapper, pro.taskana.user.internal.UserMapper)> in (TaskanaEngineImpl.java:142)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getTaskService()> references class object <pro.taskana.task.internal.TaskMapper> in (TaskanaEngineImpl.java:144)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getTaskService()> references class object <pro.taskana.task.internal.TaskCommentMapper> in (TaskanaEngineImpl.java:145)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getTaskService()> references class object <pro.taskana.task.internal.AttachmentMapper> in (TaskanaEngineImpl.java:146)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getTaskService()> references class object <pro.taskana.task.internal.ObjectReferenceMapper> in (TaskanaEngineImpl.java:147)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getClassificationService()> references class object <pro.taskana.task.internal.TaskMapper> in (TaskanaEngineImpl.java:173)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.task.internal.TaskMapper> in (TaskanaEngineImpl.java:339)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.task.internal.ObjectReferenceMapper> in (TaskanaEngineImpl.java:345)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.task.internal.TaskQueryMapper> in (TaskanaEngineImpl.java:347)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.task.internal.TaskCommentMapper> in (TaskanaEngineImpl.java:348)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.task.internal.TaskCommentQueryMapper> in (TaskanaEngineImpl.java:349)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.task.internal.AttachmentMapper> in (TaskanaEngineImpl.java:351)\
  2. Dependencies of Slice task.internal\
    - Constructor <pro.taskana.task.internal.TaskCommentServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.task.internal.TaskCommentMapper, pro.taskana.user.internal.UserMapper, pro.taskana.task.internal.TaskServiceImpl)> has parameter of type <pro.taskana.user.internal.UserMapper> in (TaskCommentServiceImpl.java:0)\
    - Constructor <pro.taskana.task.internal.TaskServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.task.internal.TaskMapper, pro.taskana.task.internal.TaskCommentMapper, pro.taskana.task.internal.AttachmentMapper, pro.taskana.task.internal.ObjectReferenceMapper, pro.taskana.user.internal.UserMapper)> has parameter of type <pro.taskana.user.internal.UserMapper> in (TaskServiceImpl.java:0)\
    - Field <pro.taskana.task.internal.TaskCommentServiceImpl.userMapper> has type <pro.taskana.user.internal.UserMapper> in (TaskCommentServiceImpl.java:0)\
    - Field <pro.taskana.task.internal.TaskServiceImpl.userMapper> has type <pro.taskana.user.internal.UserMapper> in (TaskServiceImpl.java:0)\
    - Method <pro.taskana.task.internal.TaskCommentServiceImpl.getTaskComment(java.lang.String)> calls method <pro.taskana.user.internal.UserMapper.findById(java.lang.String)> in (TaskCommentServiceImpl.java:191)\
    - Method <pro.taskana.task.internal.TaskServiceImpl.getTask(java.lang.String)> calls method <pro.taskana.user.internal.UserMapper.findById(java.lang.String)> in (TaskServiceImpl.java:350)\
  3. Dependencies of Slice user.internal\
    - Constructor <pro.taskana.user.internal.UserServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.user.internal.UserMapper)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (UserServiceImpl.java:0)\
    - Field <pro.taskana.user.internal.UserServiceImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (UserServiceImpl.java:0)\
    - Method <pro.taskana.user.internal.UserServiceImpl.getUser(java.lang.String)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.executeInDatabaseConnection(java.util.function.Supplier)> in (UserServiceImpl.java:35)\
    - Method <pro.taskana.user.internal.UserServiceImpl.createUser(pro.taskana.user.api.models.User)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (UserServiceImpl.java:46)\
    - Method <pro.taskana.user.internal.UserServiceImpl.updateUser(pro.taskana.user.api.models.User)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (UserServiceImpl.java:59)\
    - Method <pro.taskana.user.internal.UserServiceImpl.updateUser(pro.taskana.user.api.models.User)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.executeInDatabaseConnection(java.lang.Runnable)> in (UserServiceImpl.java:62)\
    - Method <pro.taskana.user.internal.UserServiceImpl.deleteUser(java.lang.String)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (UserServiceImpl.java:72)\
    - Method <pro.taskana.user.internal.UserServiceImpl.deleteUser(java.lang.String)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.executeInDatabaseConnection(java.lang.Runnable)> in (UserServiceImpl.java:75)\
    - Method <pro.taskana.user.internal.UserServiceImpl.insertIntoDatabase(pro.taskana.user.api.models.User)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.openConnection()> in (UserServiceImpl.java:83)\
    - Method <pro.taskana.user.internal.UserServiceImpl.insertIntoDatabase(pro.taskana.user.api.models.User)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.returnConnection()> in (UserServiceImpl.java:88)
Cycle detected: Slice common.internal -> \
                Slice task.internal -> \
                Slice workbasket.internal -> \
                Slice common.internal\
  1. Dependencies of Slice common.internal\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getTaskService()> calls constructor <pro.taskana.task.internal.TaskServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.task.internal.TaskMapper, pro.taskana.task.internal.TaskCommentMapper, pro.taskana.task.internal.AttachmentMapper, pro.taskana.task.internal.ObjectReferenceMapper, pro.taskana.user.internal.UserMapper)> in (TaskanaEngineImpl.java:142)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getTaskService()> references class object <pro.taskana.task.internal.TaskMapper> in (TaskanaEngineImpl.java:144)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getTaskService()> references class object <pro.taskana.task.internal.TaskCommentMapper> in (TaskanaEngineImpl.java:145)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getTaskService()> references class object <pro.taskana.task.internal.AttachmentMapper> in (TaskanaEngineImpl.java:146)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getTaskService()> references class object <pro.taskana.task.internal.ObjectReferenceMapper> in (TaskanaEngineImpl.java:147)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getClassificationService()> references class object <pro.taskana.task.internal.TaskMapper> in (TaskanaEngineImpl.java:173)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.task.internal.TaskMapper> in (TaskanaEngineImpl.java:339)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.task.internal.ObjectReferenceMapper> in (TaskanaEngineImpl.java:345)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.task.internal.TaskQueryMapper> in (TaskanaEngineImpl.java:347)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.task.internal.TaskCommentMapper> in (TaskanaEngineImpl.java:348)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.task.internal.TaskCommentQueryMapper> in (TaskanaEngineImpl.java:349)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.task.internal.AttachmentMapper> in (TaskanaEngineImpl.java:351)\
  2. Dependencies of Slice task.internal\
    - Method <pro.taskana.task.internal.TaskTransferrer.getSourceWorkbasketIdsWithTransferPermission(java.util.List)> calls method <pro.taskana.workbasket.internal.WorkbasketQueryImpl.setUsedToAugmentTasks(boolean)> in (TaskTransferrer.java:230)\
    - Method <pro.taskana.task.internal.TaskTransferrer.getSourceWorkbasketIdsWithTransferPermission(java.util.List)> calls method <pro.taskana.workbasket.internal.WorkbasketQueryImpl.callerHasPermission(pro.taskana.workbasket.api.WorkbasketPermission)> in (TaskTransferrer.java:239)\
    - Method <pro.taskana.task.internal.TaskServiceImpl.getTask(java.lang.String)> calls method <pro.taskana.workbasket.internal.WorkbasketQueryImpl.setUsedToAugmentTasks(boolean)> in (TaskServiceImpl.java:311)\
    - Method <pro.taskana.task.internal.TaskServiceImpl.getTask(java.lang.String)> calls method <pro.taskana.workbasket.internal.WorkbasketQueryImpl.idIn([Ljava.lang.String;)> in (TaskServiceImpl.java:313)\
    - Method <pro.taskana.task.internal.TaskCommentQueryImpl.setupAccessIds()> calls method <pro.taskana.workbasket.internal.WorkbasketQueryImpl.lowercaseAccessIds([Ljava.lang.String;)> in (TaskCommentQueryImpl.java:340)\
    - Method <pro.taskana.task.internal.TaskQueryImpl.setupAccessIds()> calls method <pro.taskana.workbasket.internal.WorkbasketQueryImpl.lowercaseAccessIds([Ljava.lang.String;)> in (TaskQueryImpl.java:2168)\
  3. Dependencies of Slice workbasket.internal\
    - Constructor <pro.taskana.workbasket.internal.AbstractWorkbasketAccessItemQueryImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (AbstractWorkbasketAccessItemQueryImpl.java:0)\
    - Constructor <pro.taskana.workbasket.internal.WorkbasketAccessItemQueryImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (WorkbasketAccessItemQueryImpl.java:0)\
    - Constructor <pro.taskana.workbasket.internal.WorkbasketQueryImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (WorkbasketQueryImpl.java:0)\
    - Constructor <pro.taskana.workbasket.internal.WorkbasketServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.spi.history.internal.HistoryEventManager, pro.taskana.workbasket.internal.WorkbasketMapper, pro.taskana.workbasket.internal.DistributionTargetMapper, pro.taskana.workbasket.internal.WorkbasketAccessMapper)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (WorkbasketServiceImpl.java:0)\
    - Field <pro.taskana.workbasket.internal.AbstractWorkbasketAccessItemQueryImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (AbstractWorkbasketAccessItemQueryImpl.java:0)\
    - Field <pro.taskana.workbasket.internal.WorkbasketAccessItemQueryImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (WorkbasketAccessItemQueryImpl.java:0)\
    - Field <pro.taskana.workbasket.internal.WorkbasketQueryImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (WorkbasketQueryImpl.java:0)\
    - Field <pro.taskana.workbasket.internal.WorkbasketServiceImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (WorkbasketServiceImpl.java:0)\
    - Method <pro.taskana.workbasket.internal.AbstractWorkbasketAccessItemQueryImpl.list()> calls method <pro.taskana.common.internal.InternalTaskanaEngine.executeInDatabaseConnection(java.util.function.Supplier)> in (AbstractWorkbasketAccessItemQueryImpl.java:79)\
    - Method <pro.taskana.workbasket.internal.AbstractWorkbasketAccessItemQueryImpl.lambda$0()> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getSqlSession()> in (AbstractWorkbasketAccessItemQueryImpl.java:80)\
    - Method <pro.taskana.workbasket.internal.AbstractWorkbasketAccessItemQueryImpl.list(int, int)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.openConnection()> in (AbstractWorkbasketAccessItemQueryImpl.java:87)\
    - Method <pro.taskana.workbasket.internal.WorkbasketServiceImpl.getWorkbasket(java.lang.String)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.openConnection()> in (WorkbasketServiceImpl.java:88)\
    - Method <pro.taskana.workbasket.internal.AbstractWorkbasketAccessItemQueryImpl.list(int, int)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getSqlSession()> in (AbstractWorkbasketAccessItemQueryImpl.java:90)\
    - Method <pro.taskana.workbasket.internal.WorkbasketServiceImpl.getWorkbasket(java.lang.String)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (WorkbasketServiceImpl.java:96)\
    - Method <pro.taskana.workbasket.internal.WorkbasketAccessItemQueryImpl.list()> calls method <pro.taskana.common.internal.InternalTaskanaEngine.executeInDatabaseConnection(java.util.function.Supplier)> in (WorkbasketAccessItemQueryImpl.java:102)\
    - Method <pro.taskana.workbasket.internal.AbstractWorkbasketAccessItemQueryImpl.list(int, int)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.returnConnection()> in (AbstractWorkbasketAccessItemQueryImpl.java:103)\
    - Method <pro.taskana.workbasket.internal.WorkbasketAccessItemQueryImpl.lambda$0()> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getSqlSession()> in (WorkbasketAccessItemQueryImpl.java:103)\
    - Method <pro.taskana.workbasket.internal.WorkbasketServiceImpl.getWorkbasket(java.lang.String)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.returnConnection()> in (WorkbasketServiceImpl.java:106)\
    - Method <pro.taskana.workbasket.internal.WorkbasketAccessItemQueryImpl.list(int, int)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.openConnection()> in (WorkbasketAccessItemQueryImpl.java:110)\
    - Method <pro.taskana.workbasket.internal.AbstractWorkbasketAccessItemQueryImpl.listValues(pro.taskana.workbasket.api.AccessItemQueryColumnName, pro.taskana.common.api.BaseQuery$SortDirection)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.openConnection()> in (AbstractWorkbasketAccessItemQueryImpl.java:112)\
    (123 further dependencies have been omitted...)
Cycle detected: Slice common.internal -> \
                Slice user.internal -> \
                Slice common.internal\
  1. Dependencies of Slice common.internal\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getTaskService()> references class object <pro.taskana.user.internal.UserMapper> in (TaskanaEngineImpl.java:148)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getUserService()> calls constructor <pro.taskana.user.internal.UserServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.user.internal.UserMapper)> in (TaskanaEngineImpl.java:190)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getUserService()> references class object <pro.taskana.user.internal.UserMapper> in (TaskanaEngineImpl.java:191)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.user.internal.UserMapper> in (TaskanaEngineImpl.java:353)\
  2. Dependencies of Slice user.internal\
    - Constructor <pro.taskana.user.internal.UserServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.user.internal.UserMapper)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (UserServiceImpl.java:0)\
    - Field <pro.taskana.user.internal.UserServiceImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (UserServiceImpl.java:0)\
    - Method <pro.taskana.user.internal.UserServiceImpl.getUser(java.lang.String)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.executeInDatabaseConnection(java.util.function.Supplier)> in (UserServiceImpl.java:35)\
    - Method <pro.taskana.user.internal.UserServiceImpl.createUser(pro.taskana.user.api.models.User)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (UserServiceImpl.java:46)\
    - Method <pro.taskana.user.internal.UserServiceImpl.updateUser(pro.taskana.user.api.models.User)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (UserServiceImpl.java:59)\
    - Method <pro.taskana.user.internal.UserServiceImpl.updateUser(pro.taskana.user.api.models.User)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.executeInDatabaseConnection(java.lang.Runnable)> in (UserServiceImpl.java:62)\
    - Method <pro.taskana.user.internal.UserServiceImpl.deleteUser(java.lang.String)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (UserServiceImpl.java:72)\
    - Method <pro.taskana.user.internal.UserServiceImpl.deleteUser(java.lang.String)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.executeInDatabaseConnection(java.lang.Runnable)> in (UserServiceImpl.java:75)\
    - Method <pro.taskana.user.internal.UserServiceImpl.insertIntoDatabase(pro.taskana.user.api.models.User)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.openConnection()> in (UserServiceImpl.java:83)\
    - Method <pro.taskana.user.internal.UserServiceImpl.insertIntoDatabase(pro.taskana.user.api.models.User)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.returnConnection()> in (UserServiceImpl.java:88)
Cycle detected: Slice common.internal -> \
                Slice workbasket.internal -> \
                Slice common.internal\
  1. Dependencies of Slice common.internal\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getWorkbasketService()> calls constructor <pro.taskana.workbasket.internal.WorkbasketServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.spi.history.internal.HistoryEventManager, pro.taskana.workbasket.internal.WorkbasketMapper, pro.taskana.workbasket.internal.DistributionTargetMapper, pro.taskana.workbasket.internal.WorkbasketAccessMapper)> in (TaskanaEngineImpl.java:159)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getWorkbasketService()> references class object <pro.taskana.workbasket.internal.WorkbasketMapper> in (TaskanaEngineImpl.java:162)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getWorkbasketService()> references class object <pro.taskana.workbasket.internal.DistributionTargetMapper> in (TaskanaEngineImpl.java:163)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.getWorkbasketService()> references class object <pro.taskana.workbasket.internal.WorkbasketAccessMapper> in (TaskanaEngineImpl.java:164)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.workbasket.internal.WorkbasketMapper> in (TaskanaEngineImpl.java:341)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.workbasket.internal.DistributionTargetMapper> in (TaskanaEngineImpl.java:342)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.workbasket.internal.WorkbasketAccessMapper> in (TaskanaEngineImpl.java:344)\
    - Method <pro.taskana.common.internal.TaskanaEngineImpl.createSqlSessionManager()> references class object <pro.taskana.workbasket.internal.WorkbasketQueryMapper> in (TaskanaEngineImpl.java:346)\
  2. Dependencies of Slice workbasket.internal\
    - Constructor <pro.taskana.workbasket.internal.AbstractWorkbasketAccessItemQueryImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (AbstractWorkbasketAccessItemQueryImpl.java:0)\
    - Constructor <pro.taskana.workbasket.internal.WorkbasketAccessItemQueryImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (WorkbasketAccessItemQueryImpl.java:0)\
    - Constructor <pro.taskana.workbasket.internal.WorkbasketQueryImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (WorkbasketQueryImpl.java:0)\
    - Constructor <pro.taskana.workbasket.internal.WorkbasketServiceImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.spi.history.internal.HistoryEventManager, pro.taskana.workbasket.internal.WorkbasketMapper, pro.taskana.workbasket.internal.DistributionTargetMapper, pro.taskana.workbasket.internal.WorkbasketAccessMapper)> has parameter of type <pro.taskana.common.internal.InternalTaskanaEngine> in (WorkbasketServiceImpl.java:0)\
    - Field <pro.taskana.workbasket.internal.AbstractWorkbasketAccessItemQueryImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (AbstractWorkbasketAccessItemQueryImpl.java:0)\
    - Field <pro.taskana.workbasket.internal.WorkbasketAccessItemQueryImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (WorkbasketAccessItemQueryImpl.java:0)\
    - Field <pro.taskana.workbasket.internal.WorkbasketQueryImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (WorkbasketQueryImpl.java:0)\
    - Field <pro.taskana.workbasket.internal.WorkbasketServiceImpl.taskanaEngine> has type <pro.taskana.common.internal.InternalTaskanaEngine> in (WorkbasketServiceImpl.java:0)\
    - Method <pro.taskana.workbasket.internal.AbstractWorkbasketAccessItemQueryImpl.list()> calls method <pro.taskana.common.internal.InternalTaskanaEngine.executeInDatabaseConnection(java.util.function.Supplier)> in (AbstractWorkbasketAccessItemQueryImpl.java:79)\
    - Method <pro.taskana.workbasket.internal.AbstractWorkbasketAccessItemQueryImpl.lambda$0()> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getSqlSession()> in (AbstractWorkbasketAccessItemQueryImpl.java:80)\
    - Method <pro.taskana.workbasket.internal.AbstractWorkbasketAccessItemQueryImpl.list(int, int)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.openConnection()> in (AbstractWorkbasketAccessItemQueryImpl.java:87)\
    - Method <pro.taskana.workbasket.internal.WorkbasketServiceImpl.getWorkbasket(java.lang.String)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.openConnection()> in (WorkbasketServiceImpl.java:88)\
    - Method <pro.taskana.workbasket.internal.AbstractWorkbasketAccessItemQueryImpl.list(int, int)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getSqlSession()> in (AbstractWorkbasketAccessItemQueryImpl.java:90)\
    - Method <pro.taskana.workbasket.internal.WorkbasketServiceImpl.getWorkbasket(java.lang.String)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getEngine()> in (WorkbasketServiceImpl.java:96)\
    - Method <pro.taskana.workbasket.internal.WorkbasketAccessItemQueryImpl.list()> calls method <pro.taskana.common.internal.InternalTaskanaEngine.executeInDatabaseConnection(java.util.function.Supplier)> in (WorkbasketAccessItemQueryImpl.java:102)\
    - Method <pro.taskana.workbasket.internal.AbstractWorkbasketAccessItemQueryImpl.list(int, int)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.returnConnection()> in (AbstractWorkbasketAccessItemQueryImpl.java:103)\
    - Method <pro.taskana.workbasket.internal.WorkbasketAccessItemQueryImpl.lambda$0()> calls method <pro.taskana.common.internal.InternalTaskanaEngine.getSqlSession()> in (WorkbasketAccessItemQueryImpl.java:103)\
    - Method <pro.taskana.workbasket.internal.WorkbasketServiceImpl.getWorkbasket(java.lang.String)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.returnConnection()> in (WorkbasketServiceImpl.java:106)\
    - Method <pro.taskana.workbasket.internal.WorkbasketAccessItemQueryImpl.list(int, int)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.openConnection()> in (WorkbasketAccessItemQueryImpl.java:110)\
    - Method <pro.taskana.workbasket.internal.AbstractWorkbasketAccessItemQueryImpl.listValues(pro.taskana.workbasket.api.AccessItemQueryColumnName, pro.taskana.common.api.BaseQuery$SortDirection)> calls method <pro.taskana.common.internal.InternalTaskanaEngine.openConnection()> in (AbstractWorkbasketAccessItemQueryImpl.java:112)\
    (123 further dependencies have been omitted...)
Cycle detected: Slice monitor.internal -> \
                Slice monitor.internal.reports -> \
                Slice monitor.internal\
  1. Dependencies of Slice monitor.internal\
    - Method <pro.taskana.monitor.internal.MonitorMapper.getTaskCountByPriority(pro.taskana.monitor.internal.reports.WorkbasketPriorityReportBuilderImpl)> has parameter of type <pro.taskana.monitor.internal.reports.WorkbasketPriorityReportBuilderImpl> in (MonitorMapper.java:0)\
    - Method <pro.taskana.monitor.internal.MonitorServiceImpl.createWorkbasketReportBuilder()> calls constructor <pro.taskana.monitor.internal.reports.WorkbasketReportBuilderImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.monitor.internal.MonitorMapper)> in (MonitorServiceImpl.java:35)\
    - Method <pro.taskana.monitor.internal.MonitorServiceImpl.createWorkbasketPriorityReportBuilder()> calls constructor <pro.taskana.monitor.internal.reports.WorkbasketPriorityReportBuilderImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.monitor.internal.MonitorMapper)> in (MonitorServiceImpl.java:40)\
    - Method <pro.taskana.monitor.internal.MonitorServiceImpl.createClassificationCategoryReportBuilder()> calls constructor <pro.taskana.monitor.internal.reports.ClassificationCategoryReportBuilderImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.monitor.internal.MonitorMapper)> in (MonitorServiceImpl.java:45)\
    - Method <pro.taskana.monitor.internal.MonitorServiceImpl.createClassificationReportBuilder()> calls constructor <pro.taskana.monitor.internal.reports.ClassificationReportBuilderImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.monitor.internal.MonitorMapper)> in (MonitorServiceImpl.java:50)\
    - Method <pro.taskana.monitor.internal.MonitorServiceImpl.createTaskCustomFieldValueReportBuilder(pro.taskana.task.api.TaskCustomField)> calls constructor <pro.taskana.monitor.internal.reports.TaskCustomFieldValueReportBuilderImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.monitor.internal.MonitorMapper, pro.taskana.task.api.TaskCustomField)> in (MonitorServiceImpl.java:56)\
    - Method <pro.taskana.monitor.internal.MonitorServiceImpl.createTaskStatusReportBuilder()> calls constructor <pro.taskana.monitor.internal.reports.TaskStatusReportBuilderImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.monitor.internal.MonitorMapper)> in (MonitorServiceImpl.java:61)\
    - Method <pro.taskana.monitor.internal.MonitorServiceImpl.createTimestampReportBuilder()> calls constructor <pro.taskana.monitor.internal.reports.TimestampReportBuilderImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.monitor.internal.MonitorMapper)> in (MonitorServiceImpl.java:66)\
  2. Dependencies of Slice monitor.internal.reports\
    - Constructor <pro.taskana.monitor.internal.reports.ClassificationCategoryReportBuilderImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.monitor.internal.MonitorMapper)> has parameter of type <pro.taskana.monitor.internal.MonitorMapper> in (ClassificationCategoryReportBuilderImpl.java:0)\
    - Constructor <pro.taskana.monitor.internal.reports.ClassificationReportBuilderImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.monitor.internal.MonitorMapper)> has parameter of type <pro.taskana.monitor.internal.MonitorMapper> in (ClassificationReportBuilderImpl.java:0)\
    - Constructor <pro.taskana.monitor.internal.reports.TaskCustomFieldValueReportBuilderImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.monitor.internal.MonitorMapper, pro.taskana.task.api.TaskCustomField)> has parameter of type <pro.taskana.monitor.internal.MonitorMapper> in (TaskCustomFieldValueReportBuilderImpl.java:0)\
    - Constructor <pro.taskana.monitor.internal.reports.TaskStatusReportBuilderImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.monitor.internal.MonitorMapper)> has parameter of type <pro.taskana.monitor.internal.MonitorMapper> in (TaskStatusReportBuilderImpl.java:0)\
    - Constructor <pro.taskana.monitor.internal.reports.TimeIntervalReportBuilderImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.monitor.internal.MonitorMapper)> has parameter of type <pro.taskana.monitor.internal.MonitorMapper> in (TimeIntervalReportBuilderImpl.java:0)\
    - Constructor <pro.taskana.monitor.internal.reports.TimestampReportBuilderImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.monitor.internal.MonitorMapper)> has parameter of type <pro.taskana.monitor.internal.MonitorMapper> in (TimestampReportBuilderImpl.java:0)\
    - Constructor <pro.taskana.monitor.internal.reports.WorkbasketPriorityReportBuilderImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.monitor.internal.MonitorMapper)> has parameter of type <pro.taskana.monitor.internal.MonitorMapper> in (WorkbasketPriorityReportBuilderImpl.java:0)\
    - Constructor <pro.taskana.monitor.internal.reports.WorkbasketReportBuilderImpl.<init>(pro.taskana.common.internal.InternalTaskanaEngine, pro.taskana.monitor.internal.MonitorMapper)> has parameter of type <pro.taskana.monitor.internal.MonitorMapper> in (WorkbasketReportBuilderImpl.java:0)\
    - Field <pro.taskana.monitor.internal.reports.TaskStatusReportBuilderImpl.monitorMapper> has type <pro.taskana.monitor.internal.MonitorMapper> in (TaskStatusReportBuilderImpl.java:0)\
    - Field <pro.taskana.monitor.internal.reports.TimeIntervalReportBuilderImpl.monitorMapper> has type <pro.taskana.monitor.internal.MonitorMapper> in (TimeIntervalReportBuilderImpl.java:0)\
    - Field <pro.taskana.monitor.internal.reports.WorkbasketPriorityReportBuilderImpl.monitorMapper> has type <pro.taskana.monitor.internal.MonitorMapper> in (WorkbasketPriorityReportBuilderImpl.java:0)\
    - Method <pro.taskana.monitor.internal.reports.ClassificationCategoryReportBuilderImpl.buildReport(pro.taskana.monitor.api.TaskTimestamp)> calls method <pro.taskana.monitor.internal.MonitorMapper.getTaskCountOfCategories(java.time.Instant, pro.taskana.monitor.api.TaskTimestamp, pro.taskana.monitor.api.reports.TimeIntervalReportBuilder)> in (ClassificationCategoryReportBuilderImpl.java:42)\
    - Method <pro.taskana.monitor.internal.reports.TaskStatusReportBuilderImpl.buildReport()> calls method <pro.taskana.monitor.internal.MonitorMapper.getTasksCountByState([Ljava.lang.String;, [Lpro.taskana.task.api.TaskState;, [Ljava.lang.String;, java.lang.Integer)> in (TaskStatusReportBuilderImpl.java:43)\
    - Method <pro.taskana.monitor.internal.reports.TaskCustomFieldValueReportBuilderImpl.buildReport(pro.taskana.monitor.api.TaskTimestamp)> calls method <pro.taskana.monitor.internal.MonitorMapper.getTaskCountOfTaskCustomFieldValues(java.time.Instant, pro.taskana.monitor.api.TaskTimestamp, pro.taskana.monitor.api.reports.TimeIntervalReportBuilder)> in (TaskCustomFieldValueReportBuilderImpl.java:48)\
    - Method <pro.taskana.monitor.internal.reports.WorkbasketReportBuilderImpl.buildReport(pro.taskana.monitor.api.TaskTimestamp)> calls method <pro.taskana.monitor.internal.MonitorMapper.getTaskCountOfWorkbaskets(java.time.Instant, pro.taskana.monitor.api.TaskTimestamp, pro.taskana.monitor.api.reports.TimeIntervalReportBuilder)> in (WorkbasketReportBuilderImpl.java:49)\
    - Method <pro.taskana.monitor.internal.reports.ClassificationReportBuilderImpl.buildReport(pro.taskana.monitor.api.TaskTimestamp)> calls method <pro.taskana.monitor.internal.MonitorMapper.getTaskCountOfClassifications(java.time.Instant, pro.taskana.monitor.api.TaskTimestamp, pro.taskana.monitor.api.reports.TimeIntervalReportBuilder)> in (ClassificationReportBuilderImpl.java:53)\
    - Method <pro.taskana.monitor.internal.reports.ClassificationReportBuilderImpl.buildDetailedReport(pro.taskana.monitor.api.TaskTimestamp)> calls method <pro.taskana.monitor.internal.MonitorMapper.getTaskCountOfDetailedClassifications(java.time.Instant, pro.taskana.monitor.api.TaskTimestamp, pro.taskana.monitor.api.reports.TimeIntervalReportBuilder)> in (ClassificationReportBuilderImpl.java:92)\
    - Method <pro.taskana.monitor.internal.reports.TimestampReportBuilderImpl.getTasksCountForStatusGroupedByOrgLevel(pro.taskana.monitor.api.TaskTimestamp)> calls method <pro.taskana.monitor.internal.MonitorMapper.getTasksCountForStatusGroupedByOrgLevel(java.time.Instant, pro.taskana.monitor.api.TaskTimestamp, pro.taskana.monitor.api.reports.TimeIntervalReportBuilder)> in (TimestampReportBuilderImpl.java:97)\
    - Method <pro.taskana.monitor.internal.reports.WorkbasketPriorityReportBuilderImpl.lambda$0()> calls method <pro.taskana.monitor.internal.MonitorMapper.getTaskCountByPriority(pro.taskana.monitor.internal.reports.WorkbasketPriorityReportBuilderImpl)> in (WorkbasketPriorityReportBuilderImpl.java:98)\
    - Method <pro.taskana.monitor.internal.reports.TimeIntervalReportBuilderImpl.listTaskIdsForSelectedItems(java.util.List, pro.taskana.monitor.api.TaskTimestamp)> calls method <pro.taskana.monitor.internal.MonitorMapper.getTaskIdsForSelectedItems(java.time.Instant, pro.taskana.monitor.api.reports.TimeIntervalReportBuilder, java.util.List, java.lang.String, pro.taskana.monitor.api.TaskTimestamp, java.util.List, boolean)> in (TimeIntervalReportBuilderImpl.java:380)\
    (1 further dependencies have been omitted...)
Cycle detected: Slice task.api -> \
                Slice task.api.models -> \
                Slice task.api\
  1. Dependencies of Slice task.api\
    - Class <pro.taskana.task.api.ObjectReferenceQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.ObjectReference, pro.taskana.task.api.ObjectReferenceQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.ObjectReference> in (ObjectReferenceQuery.java:0)\
    - Class <pro.taskana.task.api.TaskCommentQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskComment, pro.taskana.task.api.TaskCommentQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskCommentQuery.java:0)\
    - Class <pro.taskana.task.api.TaskQuery> has generic interface <pro.taskana.common.api.BaseQuery<pro.taskana.task.api.models.TaskSummary, pro.taskana.task.api.TaskQueryColumnName>> with type argument depending on <pro.taskana.task.api.models.TaskSummary> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.primaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskQuery.secondaryObjectReferenceIn([Lpro.taskana.task.api.models.ObjectReference;)> depends on component type <pro.taskana.task.api.models.ObjectReference> in (TaskQuery.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.cancelTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.claim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.completeTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has parameter of type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTask(pro.taskana.task.api.models.Task)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has parameter of type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.createTaskComment(pro.taskana.task.api.models.TaskComment)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCancelClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceClaim(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.forceCompleteTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTask(java.lang.String)> has return type <pro.taskana.task.api.models.Task> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComment(java.lang.String)> has return type <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.getTaskComments(java.lang.String)> has generic return type <java.util.List<pro.taskana.task.api.models.TaskComment>> with type argument depending on <pro.taskana.task.api.models.TaskComment> in (TaskService.java:0)\
    - Method <pro.taskana.task.api.TaskService.newAttachment()> has return type <pro.taskana.task.api.models.Attachment> in (TaskService.java:0)\
    (18 further dependencies have been omitted...)\
  2. Dependencies of Slice task.api.models\
    - Method <pro.taskana.task.api.models.Task.setCustomAttribute(pro.taskana.task.api.TaskCustomField, java.lang.String)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (Task.java:0)\
    - Method <pro.taskana.task.api.models.Task.setCustomField(pro.taskana.task.api.TaskCustomField, java.lang.String)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (Task.java:0)\
    - Method <pro.taskana.task.api.models.TaskSummary.getCustomAttribute(pro.taskana.task.api.TaskCustomField)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (TaskSummary.java:0)\
    - Method <pro.taskana.task.api.models.TaskSummary.getCustomField(pro.taskana.task.api.TaskCustomField)> has parameter of type <pro.taskana.task.api.TaskCustomField> in (TaskSummary.java:0)\
    - Method <pro.taskana.task.api.models.TaskSummary.getState()> has return type <pro.taskana.task.api.TaskState> in (TaskSummary.java:0)
Cycle detected: Slice testapi -> \
                Slice testapi.extensions -> \
                Slice testapi\
  1. Dependencies of Slice testapi\
    - Class <pro.taskana.testapi.TaskanaIntegrationTest> has annotation member of type <pro.taskana.testapi.extensions.TaskanaDependencyInjectionExtension> in (TaskanaIntegrationTest.java:0)\
    - Class <pro.taskana.testapi.TaskanaIntegrationTest> has annotation member of type <pro.taskana.testapi.extensions.TaskanaInitializationExtension> in (TaskanaIntegrationTest.java:0)\
    - Class <pro.taskana.testapi.TaskanaIntegrationTest> has annotation member of type <pro.taskana.testapi.extensions.TestContainerExtension> in (TaskanaIntegrationTest.java:0)\
  2. Dependencies of Slice testapi.extensions\
    - Method <pro.taskana.testapi.extensions.TestContainerExtension.interceptTestClassConstructor(org.junit.jupiter.api.extension.InvocationInterceptor$Invocation, org.junit.jupiter.api.extension.ReflectiveInvocationContext, org.junit.jupiter.api.extension.ExtensionContext)> references class object <pro.taskana.testapi.CleanTaskanaContext> in (TestContainerExtension.java:41)\
    - Method <pro.taskana.testapi.extensions.TaskanaDependencyInjectionExtension.postProcessTestInstance(java.lang.Object, org.junit.jupiter.api.extension.ExtensionContext)> references class object <pro.taskana.testapi.TaskanaInject> in (TaskanaDependencyInjectionExtension.java:44)\
    - Method <pro.taskana.testapi.extensions.TestContainerExtension.interceptTestClassConstructor(org.junit.jupiter.api.extension.InvocationInterceptor$Invocation, org.junit.jupiter.api.extension.ReflectiveInvocationContext, org.junit.jupiter.api.extension.ExtensionContext)> calls method <pro.taskana.testapi.DockerContainerCreator.createDockerContainer(pro.taskana.common.internal.configuration.DB)> in (TestContainerExtension.java:46)\
    - Method <pro.taskana.testapi.extensions.TestContainerExtension.lambda$0(org.junit.jupiter.api.extension.ExtensionContext$Store, org.testcontainers.containers.JdbcDatabaseContainer)> calls method <pro.taskana.testapi.DockerContainerCreator.createDataSource(org.testcontainers.containers.JdbcDatabaseContainer)> in (TestContainerExtension.java:50)\
    - Method <pro.taskana.testapi.extensions.TaskanaInitializationExtension.postProcessTestInstance(java.lang.Object, org.junit.jupiter.api.extension.ExtensionContext)> references class object <pro.taskana.testapi.CleanTaskanaContext> in (TaskanaInitializationExtension.java:54)\
    - Method <pro.taskana.testapi.extensions.TaskanaInitializationExtension.postProcessTestInstance(java.lang.Object, org.junit.jupiter.api.extension.ExtensionContext)> references class object <pro.taskana.testapi.WithServiceProvider> in (TaskanaInitializationExtension.java:55)\
    - Method <pro.taskana.testapi.extensions.TestContainerExtension.interceptTestClassConstructor(org.junit.jupiter.api.extension.InvocationInterceptor$Invocation, org.junit.jupiter.api.extension.ReflectiveInvocationContext, org.junit.jupiter.api.extension.ExtensionContext)> references class object <pro.taskana.testapi.TaskanaEngineConfigurationModifier> in (TestContainerExtension.java:55)\
    - Method <pro.taskana.testapi.extensions.TaskanaInitializationExtension.postProcessTestInstance(java.lang.Object, org.junit.jupiter.api.extension.ExtensionContext)> checks instanceof <pro.taskana.testapi.TaskanaEngineConfigurationModifier> in (TaskanaInitializationExtension.java:56)\
    - Method <pro.taskana.testapi.extensions.TestContainerExtension.interceptTestClassConstructor(org.junit.jupiter.api.extension.InvocationInterceptor$Invocation, org.junit.jupiter.api.extension.ReflectiveInvocationContext, org.junit.jupiter.api.extension.ExtensionContext)> references class object <pro.taskana.testapi.WithServiceProvider> in (TestContainerExtension.java:56)\
    - Method <pro.taskana.testapi.extensions.TaskanaInitializationExtension.postProcessTestInstance(java.lang.Object, org.junit.jupiter.api.extension.ExtensionContext)> checks instanceof <pro.taskana.testapi.TaskanaEngineConfigurationModifier> in (TaskanaInitializationExtension.java:61)\
    - Method <pro.taskana.testapi.extensions.TaskanaInitializationExtension.postProcessTestInstance(java.lang.Object, org.junit.jupiter.api.extension.ExtensionContext)> calls method <pro.taskana.testapi.TaskanaEngineConfigurationModifier.modify(pro.taskana.TaskanaEngineConfiguration)> in (TaskanaInitializationExtension.java:64)\
    - Method <pro.taskana.testapi.extensions.TestContainerExtension.afterAll(org.junit.jupiter.api.extension.ExtensionContext)> references class object <pro.taskana.testapi.CleanTaskanaContext> in (TestContainerExtension.java:73)\
    - Method <pro.taskana.testapi.extensions.TaskanaInitializationExtension.generateTaskanaEntityMap(pro.taskana.common.api.TaskanaEngine)> calls constructor <pro.taskana.testapi.TaskanaEngineProxy.<init>(pro.taskana.common.api.TaskanaEngine)> in (TaskanaInitializationExtension.java:97)\
    - Method <pro.taskana.testapi.extensions.TaskanaInitializationExtension.generateTaskanaEntityMap(pro.taskana.common.api.TaskanaEngine)> calls method <pro.taskana.testapi.TaskanaEngineProxy.getSqlSession()> in (TaskanaInitializationExtension.java:103)\
    - Method <pro.taskana.testapi.extensions.TaskanaInitializationExtension.generateTaskanaEntityMap(pro.taskana.common.api.TaskanaEngine)> calls method <pro.taskana.testapi.TaskanaEngineProxy.getEngine()> in (TaskanaInitializationExtension.java:108)
Cycle detected: Slice testapi -> \
                Slice testapi.extensions -> \
                Slice testapi.util -> \
                Slice testapi\
  1. Dependencies of Slice testapi\
    - Class <pro.taskana.testapi.TaskanaIntegrationTest> has annotation member of type <pro.taskana.testapi.extensions.TaskanaDependencyInjectionExtension> in (TaskanaIntegrationTest.java:0)\
    - Class <pro.taskana.testapi.TaskanaIntegrationTest> has annotation member of type <pro.taskana.testapi.extensions.TaskanaInitializationExtension> in (TaskanaIntegrationTest.java:0)\
    - Class <pro.taskana.testapi.TaskanaIntegrationTest> has annotation member of type <pro.taskana.testapi.extensions.TestContainerExtension> in (TaskanaIntegrationTest.java:0)\
  2. Dependencies of Slice testapi.extensions\
    - Method <pro.taskana.testapi.extensions.TestContainerExtension.interceptTestClassConstructor(org.junit.jupiter.api.extension.InvocationInterceptor$Invocation, org.junit.jupiter.api.extension.ReflectiveInvocationContext, org.junit.jupiter.api.extension.ExtensionContext)> calls method <pro.taskana.testapi.util.ExtensionCommunicator.isTopLevelClass(java.lang.Class)> in (TestContainerExtension.java:41)\
    - Method <pro.taskana.testapi.extensions.TestContainerExtension.interceptTestClassConstructor(org.junit.jupiter.api.extension.InvocationInterceptor$Invocation, org.junit.jupiter.api.extension.ReflectiveInvocationContext, org.junit.jupiter.api.extension.ExtensionContext)> calls method <pro.taskana.testapi.util.ExtensionCommunicator.getClassLevelStore(org.junit.jupiter.api.extension.ExtensionContext)> in (TestContainerExtension.java:42)\
    - Method <pro.taskana.testapi.extensions.TaskanaInitializationExtension.postProcessTestInstance(java.lang.Object, org.junit.jupiter.api.extension.ExtensionContext)> calls method <pro.taskana.testapi.util.ExtensionCommunicator.isTopLevelClass(java.lang.Class)> in (TaskanaInitializationExtension.java:53)\
    - Method <pro.taskana.testapi.extensions.TaskanaInitializationExtension.postProcessTestInstance(java.lang.Object, org.junit.jupiter.api.extension.ExtensionContext)> calls method <pro.taskana.testapi.util.ExtensionCommunicator.getClassLevelStore(org.junit.jupiter.api.extension.ExtensionContext)> in (TaskanaInitializationExtension.java:57)\
    - Method <pro.taskana.testapi.extensions.TaskanaDependencyInjectionExtension.getTaskanaEntityMap(org.junit.jupiter.api.extension.ExtensionContext)> calls method <pro.taskana.testapi.util.ExtensionCommunicator.getClassLevelStore(org.junit.jupiter.api.extension.ExtensionContext)> in (TaskanaDependencyInjectionExtension.java:61)\
    - Method <pro.taskana.testapi.extensions.TestContainerExtension.interceptTestClassConstructor(org.junit.jupiter.api.extension.InvocationInterceptor$Invocation, org.junit.jupiter.api.extension.ReflectiveInvocationContext, org.junit.jupiter.api.extension.ExtensionContext)> calls method <pro.taskana.testapi.util.ExtensionCommunicator.getClassLevelStore(org.junit.jupiter.api.extension.ExtensionContext, java.lang.Class)> in (TestContainerExtension.java:61)\
    - Method <pro.taskana.testapi.extensions.TestContainerExtension.interceptTestClassConstructor(org.junit.jupiter.api.extension.InvocationInterceptor$Invocation, org.junit.jupiter.api.extension.ReflectiveInvocationContext, org.junit.jupiter.api.extension.ExtensionContext)> calls method <pro.taskana.testapi.util.ExtensionCommunicator.getClassLevelStore(org.junit.jupiter.api.extension.ExtensionContext)> in (TestContainerExtension.java:62)\
    - Method <pro.taskana.testapi.extensions.TaskanaInitializationExtension.postProcessTestInstance(java.lang.Object, org.junit.jupiter.api.extension.ExtensionContext)> calls method <pro.taskana.testapi.util.ServiceProviderExtractor.extractServiceProviders(java.lang.Class)> in (TaskanaInitializationExtension.java:69)\
    - Method <pro.taskana.testapi.extensions.TestContainerExtension.afterAll(org.junit.jupiter.api.extension.ExtensionContext)> calls method <pro.taskana.testapi.util.ExtensionCommunicator.isTopLevelClass(java.lang.Class)> in (TestContainerExtension.java:72)\
    - Method <pro.taskana.testapi.extensions.TestContainerExtension.afterAll(org.junit.jupiter.api.extension.ExtensionContext)> calls method <pro.taskana.testapi.util.ExtensionCommunicator.getClassLevelStore(org.junit.jupiter.api.extension.ExtensionContext)> in (TestContainerExtension.java:74)\
  3. Dependencies of Slice testapi.util\
    - Method <pro.taskana.testapi.util.ServiceProviderExtractor.groupServiceProvidersByServiceProviderInterface(java.util.List)> has generic parameter type <java.util.List<pro.taskana.testapi.WithServiceProvider>> with type argument depending on <pro.taskana.testapi.WithServiceProvider> in (ServiceProviderExtractor.java:0)\
    - Method <pro.taskana.testapi.util.ServiceProviderExtractor.lambda$5(pro.taskana.testapi.WithServiceProvider)> has parameter of type <pro.taskana.testapi.WithServiceProvider> in (ServiceProviderExtractor.java:0)\
    - Method <pro.taskana.testapi.util.ServiceProviderExtractor.extractServiceProviders(java.lang.Class)> references class object <pro.taskana.testapi.WithServiceProvider> in (ServiceProviderExtractor.java:36)\
    - Method <pro.taskana.testapi.util.ExtensionCommunicator.determineNamespace(java.lang.Class)> references class object <pro.taskana.testapi.CleanTaskanaContext> in (ExtensionCommunicator.java:42)\
    - Method <pro.taskana.testapi.util.ExtensionCommunicator.determineNamespace(java.lang.Class)> references class object <pro.taskana.testapi.CleanTaskanaContext> in (ExtensionCommunicator.java:43)\
    - Method <pro.taskana.testapi.util.ExtensionCommunicator.determineNamespace(java.lang.Class)> references class object <pro.taskana.testapi.WithServiceProvider> in (ExtensionCommunicator.java:44)\
    - Method <pro.taskana.testapi.util.ExtensionCommunicator.determineNamespace(java.lang.Class)> references class object <pro.taskana.testapi.WithServiceProvider> in (ExtensionCommunicator.java:45)\
    - Method <pro.taskana.testapi.util.ExtensionCommunicator.determineNamespace(java.lang.Class)> references class object <pro.taskana.testapi.TaskanaEngineConfigurationModifier> in (ExtensionCommunicator.java:46)\
    - Method <pro.taskana.testapi.util.ExtensionCommunicator.determineNamespace(java.lang.Class)> references class object <pro.taskana.testapi.TaskanaEngineConfigurationModifier> in (ExtensionCommunicator.java:48)\
    - Method <pro.taskana.testapi.util.ServiceProviderExtractor.groupServiceProvidersByServiceProviderInterface(java.util.List)> references method <pro.taskana.testapi.WithServiceProvider.serviceProviderInterface()> in (ServiceProviderExtractor.java:61)\
    - Method <pro.taskana.testapi.util.ServiceProviderExtractor.lambda$5(pro.taskana.testapi.WithServiceProvider)> calls method <pro.taskana.testapi.WithServiceProvider.serviceProviders()> in (ServiceProviderExtractor.java:63)